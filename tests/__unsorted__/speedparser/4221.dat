<?xml version="1.0" encoding="utf-8" ?>


<?xml-stylesheet href="http://d.hatena.ne.jp/Nilfs/rssxsl" type="text/xsl" media="screen"?>


<rdf:RDF
	xmlns="http://purl.org/rss/1.0/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xml:lang="ja">
<channel rdf:about="http://d.hatena.ne.jp/Nilfs/rss">
	<title>サイと旅する</title>
	<link>http://d.hatena.ne.jp/Nilfs/</link>
	<description>サイと旅する</description>
	
	<dc:creator>Nilfs</dc:creator>
	<dc:date>2011-09-18T16:41:02+09:00</dc:date>
	<items>
	<rdf:Seq>
		<rdf:li rdf:resource="http://d.hatena.ne.jp/Nilfs/20110918/1316331658"/>
		<rdf:li rdf:resource="http://d.hatena.ne.jp/Nilfs/20110904/1315123756"/>
		<rdf:li rdf:resource="http://d.hatena.ne.jp/Nilfs/20110904/1315123757"/>
		<rdf:li rdf:resource="http://d.hatena.ne.jp/Nilfs/20110425/1303747418"/>
		<rdf:li rdf:resource="http://d.hatena.ne.jp/Nilfs/20110130/1296376693"/>
		<rdf:li rdf:resource="http://d.hatena.ne.jp/Nilfs/20110122/1295722706"/>
	</rdf:Seq>
	</items>
</channel>



<item rdf:about="http://d.hatena.ne.jp/Nilfs/20110918/1316331658">
	<title>[PHP][ZendFramework]ZendFrameworkを使ってみてハマったのでメモ</title>
	<link>http://d.hatena.ne.jp/Nilfs/20110918/1316331658</link>
	<description> Amazon APIを使いたかったので。。。 http://framework.zend.com/manual/ja/zend.service.amazon.html ZendFrameworkを入れると使えるようになるそうなので、インストールしてみて サンプルコードを動かしてみて http://d.hatena.ne.jp/boto/20070923/1190482142 こんなエラ</description>

	<content:encoded><![CDATA[
		<div class="section">
			<h4>Amazon APIを使いたかったので。。。</h4>
			<p><a href="http://framework.zend.com/manual/ja/zend.service.amazon.html" target="_blank">http://framework.zend.com/manual/ja/zend.service.amazon.html</a></p>
			<p>ZendFrameworkを入れると使えるようになるそうなので、インストールしてみて</p>
			<p>サンプルコードを動かしてみて</p>
			<p><a href="http://d.hatena.ne.jp/boto/20070923/1190482142" target="_blank">http://d.hatena.ne.jp/boto/20070923/1190482142</a></p>
			<p>こんなエラーが出て</p>
<pre>
Fatal error: Maximum execution time of 300 seconds exceeded in /Applications/MAMP/htdocs/amazon/sandbox-iie0kw0a/application/libraries/Zend/Validate/Hostname.php on line 618
</pre>

			<br>

			<p>618行目を見てみると、iconv_strlen()が悪いのがわかった。</p>
			<p>iconv_strlen()って何ぞ？\0とかの問題？とか思ったので</p>
			<p><a href="http://php.net/manual/ja/function.iconv-strlen.php" target="_blank">PHP: iconv_strlen - Manual</a></p>
			<p>ぐぐってみると</p>
			<p>こんなのが出てきて</p>
			<p><a href="https://bugs.php.net/bug.php?id=55204" target="_blank">https://bugs.php.net/bug.php?id=55204</a></p>
			<p>5.3.6では問題がありそうだったので、諦めてPHP5.2.17に切り替えて解決。</p>
			<br>

			<p>こんなんばっかで作業進まないよ。。。</p>
		</div>
]]></content:encoded>
	<dc:creator>Nilfs</dc:creator>
	<dc:date>2011-09-18T16:40:58+09:00</dc:date>
	<dc:subject>PHP</dc:subject>
	<dc:subject>ZendFramework</dc:subject>
</item>
<item rdf:about="http://d.hatena.ne.jp/Nilfs/20110904/1315123756">
	<title>[PHP][非同期処理]PHPだって非同期処理できるもん！</title>
	<link>http://d.hatena.ne.jp/Nilfs/20110904/1315123756</link>
	<description></description>
	<dc:creator>Nilfs</dc:creator>
	<dc:date>2011-09-04T17:09:16+09:00</dc:date>
	<dc:subject>PHP</dc:subject>
	<dc:subject>非同期処理</dc:subject>
</item>
<item rdf:about="http://d.hatena.ne.jp/Nilfs/20110904/1315123757">
	<title>LL Planetにて</title>
	<link>http://d.hatena.ne.jp/Nilfs/20110904/1315123757</link>
	<description> 先日行ってきたLL Planetにて非同期処理について話しているシーンがあって、HTTPのリクエストを複数送って、後で待つ処理はWebAPIを扱う上で便利だなと思った。PHPならfile_get_contentsを非同期で扱えるだろうと思ったら、まったくできない。そもそも、PHPで非同期処理がま</description>

	<content:encoded><![CDATA[
		<div class="section">
			<p>先日行ってきたLL Planetにて非同期処理について話しているシーンがあって、HTTPのリクエストを複数送って、後で待つ処理はWebAPIを扱う上で便利だなと思った。PHPならfile_get_contentsを非同期で扱えるだろうと思ったら、まったくできない。そもそも、PHPで非同期処理がまったく（？）扱えない。</p>
			<p>ちょっと悔しいので、PHPだったもう少し頑張れることを証明しよう！という気になったわけです。</p>
			<h4>fscoketopenとsocket_set_blocking</h4>
			<p>PHPはhttpでGETリクエストを送るだけなら、fopenとかfile_get_contentsをすれば十分。複数のWebAPIをサーバー側で送りたい場合、リクエストが帰ってくるまで待たないといけないので、非常に非効率な実装をすることになる。</p>
			<br>

			<p>fscoketopenとsocket_set_blockingを使うことで、ブロックせずにリクエストが送れるそうなので、ちょっとソースを書いてみた。</p>
			<br>

			<p>async.php</p>
<pre class="syntax-highlight">
function http_get($url)
{	
	$parseUrl = parse_url($url);
	if(!<span class="synStatement">isset</span>($parseUrl['port'])){
		$parseUrl['port'] = 80;
	}
	$path = $parseUrl['path'];
	if(<span class="synStatement">isset</span>($parseUrl['query']))
		$path .= '?' . $parseUrl['query'];
	if(<span class="synStatement">isset</span>($parseUrl['fragment']))
		$path .= '#' . $parseUrl['fragment'];
	
	$fp = fsockopen ($parseUrl['host'], $parseUrl['port'], $errno, $errstr, 5);
	if (!$fp) {
	    echo &#34;Error: $errstr ($errno)<span class="synIdentifier">&#60;</span><span class="synStatement">br</span><span class="synIdentifier">&#62;</span>\n&#34;;
	} else {
	    fputs ($fp, &#34;GET &#34;. $path .&#34; HTTP/1.0\r\n\r\n&#34;);
	    socket_set_blocking($fp, false);
	}
	
	return $fp;
}
</pre>

			<p>fsockopenでソケットを開いて、HTTPヘッダーを書き込む（ヘッダーの作り方を詳しく知らないので最低限動くようにしかなっていない）</p>
			<p>その後、socket_set_blockingを使ってブロックしないようにする</p>
			<p>。</p>
			<br>

			<p>wait.php</p>
<pre class="syntax-highlight">
<span class="synSpecial">&#60;?php</span>
<span class="synIdentifier">sleep</span><span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">_GET</span><span class="synSpecial">[</span>'<span class="synConstant">time</span>'<span class="synSpecial">])</span>;
<span class="synPreProc">echo</span> &#34;<span class="synConstant">wait complete.</span>&#34;<span class="synStatement">.$</span><span class="synIdentifier">_GET</span><span class="synSpecial">[</span>'<span class="synConstant">time</span>'<span class="synSpecial">]</span>;
</pre>

			<p>実験用の指定時間だけ待つスクリプト</p>
			<br>

			<p>async_demo.php</p>
<pre class="syntax-highlight">
<span class="synSpecial">&#60;?php</span>

<span class="synPreProc">require_once</span> <span class="synIdentifier">dirname</span><span class="synSpecial">(</span><span class="synConstant">__FILE__</span><span class="synSpecial">)</span><span class="synStatement">.</span>'<span class="synConstant">/async.php</span>';

<span class="synPreProc">function</span> microtime_float<span class="synSpecial">()</span>
<span class="synSpecial">{</span>
    <span class="synType">list</span><span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">usec</span>, <span class="synStatement">$</span><span class="synIdentifier">sec</span><span class="synSpecial">)</span> <span class="synStatement">=</span> <span class="synIdentifier">explode</span><span class="synSpecial">(</span>&#34;<span class="synConstant"> </span>&#34;, <span class="synIdentifier">microtime</span><span class="synSpecial">())</span>;
    <span class="synStatement">return</span> <span class="synSpecial">((</span><span class="synType">float</span><span class="synSpecial">)</span><span class="synStatement">$</span><span class="synIdentifier">usec</span> <span class="synStatement">+</span> <span class="synSpecial">(</span><span class="synType">float</span><span class="synSpecial">)</span><span class="synStatement">$</span><span class="synIdentifier">sec</span><span class="synSpecial">)</span>;
<span class="synSpecial">}</span>

<span class="synStatement">$</span><span class="synIdentifier">time_start</span> <span class="synStatement">=</span> microtime_float<span class="synSpecial">()</span>;

<span class="synComment">// request</span>
<span class="synStatement">$</span><span class="synIdentifier">handles</span> <span class="synStatement">=</span> <span class="synType">array</span><span class="synSpecial">(</span>
	async\http_get<span class="synSpecial">(</span> &#34;<span class="synConstant">http://localhost:8888/async_test/wait.php?time=1&#38;dummy=100#hogehoge</span>&#34; <span class="synSpecial">)</span>,
	async\http_get<span class="synSpecial">(</span> &#34;<span class="synConstant">http://localhost:8888/async_test/wait.php?time=2&#38;dummy=100#hogehoge</span>&#34; <span class="synSpecial">)</span>
<span class="synSpecial">)</span>;

<span class="synComment">// wait response</span>
async\wait_response<span class="synSpecial">(</span> <span class="synStatement">$</span><span class="synIdentifier">handles</span> <span class="synSpecial">)</span>;

<span class="synComment">// get response</span>
<span class="synStatement">foreach</span><span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">handles</span> <span class="synStatement">as</span> <span class="synStatement">$</span><span class="synIdentifier">handle</span><span class="synSpecial">){</span>
	<span class="synPreProc">echo</span> async\get_response<span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">handle</span><span class="synSpecial">)</span> <span class="synStatement">.</span> &#34;<span class="synConstant">&#60;br&#62;</span>&#34;;
<span class="synSpecial">}</span>

<span class="synStatement">$</span><span class="synIdentifier">time_end</span> <span class="synStatement">=</span> microtime_float<span class="synSpecial">()</span>;
<span class="synPreProc">echo</span> &#34;<span class="synConstant">time=</span>&#34; <span class="synStatement">.</span> <span class="synSpecial">(</span> <span class="synStatement">$</span><span class="synIdentifier">time_end</span> <span class="synStatement">-</span> <span class="synStatement">$</span><span class="synIdentifier">time_start</span> <span class="synSpecial">)</span>;
</pre>

			<p>複数リクエストを送って、全体の実行時間を計測するスクリプトで実験。一つ目のリクエストが返ってくるのが１秒、二つ目のリクエストが返ってくるのが２秒かかる。同期処理なら３秒かかるが非同期処理なら２秒で終わる。</p>
			<br>

			<p>今回作った関数の役割は、</p>
			<p>http_getでリクエストを投げて、wait_responseで処理待ち、get_responseでレスポンスを取得。</p>
			<p>結果↓ちゃんと２秒で返ってきました。</p>
<pre>
HTTP/1.1 200 OK Date: Sun, 04 Sep 2011 07:29:01 GMT Server: Apache/2.2.17 (Unix) mod_ssl/2.2.17 OpenSSL/0.9.8r DAV/2 PHP/5.3.6 X-Powered-By: PHP/5.3.6 Content-Length: 15 Connection: close Content-Type: text/html wait complete.1
HTTP/1.1 200 OK Date: Sun, 04 Sep 2011 07:29:01 GMT Server: Apache/2.2.17 (Unix) mod_ssl/2.2.17 OpenSSL/0.9.8r DAV/2 PHP/5.3.6 X-Powered-By: PHP/5.3.6 Content-Length: 15 Connection: close Content-Type: text/html wait complete.2
time=2.00401997566
</pre>

			<br>

			<h4>結果</h4>
			<p>無事、リクエストを投げる処理を非同期で行えた。</p>
			<p>そもそも、スレッドはないが重い処理をPHPのサーバーで行うことは今のところ想定していないので、これだけあれば十分だなと感じた。</p>
			<br>

			<p><a href="http://github.com/nilfs/async_php" target="_blank">nilfs/async_php - GitHub</a> に今回のソースを配置しておきました。</p>
		</div>
]]></content:encoded>
	<dc:creator>Nilfs</dc:creator>
	<dc:date>2011-09-04T17:09:17+09:00</dc:date>
</item>
<item rdf:about="http://d.hatena.ne.jp/Nilfs/20110425/1303747418">
	<title>[図書館][Web][サービス][リサーチ]最近の図書館システムが気になったので調べてみた</title>
	<link>http://d.hatena.ne.jp/Nilfs/20110425/1303747418</link>
	<description> 本を貸し借りするときに使えるWebサービスが欲しくて、ちょっと調べてみた。 とりあえず図書館システムから OPACって？ 「Online Public Access Catalogue」の略で、ネットワークを介して利用できる図書館の所蔵目録データベースのこと。 Web上から利用できるものをWebOPAC</description>

	<content:encoded><![CDATA[
		<div class="section">
			<p>本を貸し借りするときに使えるWebサービスが欲しくて、ちょっと調べてみた。</p>
			<p>とりあえず図書館システムから</p>
			<h4>OPACって？</h4>
			<p>「Online Public Access Catalogue」の略で、ネットワークを介して利用できる図書館の所蔵目録データベースのこと。</p>
			<p>Web上から利用できるものをWebOPACと呼ぶ。</p>
			<p><a href="http://www.dotbook.jp/magazine-k/2010/01/18/advanced_library_systems/" target="_blank">http://www.dotbook.jp/magazine-k/2010/01/18/advanced_library_systems/</a>によると</p>
			<blockquote>
			<p>最近ではOPACをウェブ上で公開する図書館も増えている。ちなみに慶應義塾大学の上田修一教授の調査によれば、2009年3月31日時点で749ある大学図書館のうち、81.6%にあたる611館がウェブでOPACを公開している（ウェブOPAC）。</p>
			<p>また、 日本図書館協会の調べでは、2009年12月時点で全国の公共図書館（都道府県立、市区町村立）1317館のうち、実に83.6%にあたる1102館がウェブOPACを公開している。</p>
			</blockquote>
			<p>ということで、Web上で検索可能な図書館はかなりの割合になっている模様。</p>
			<p>先ほどの記事を見ていくとわかるが、システムはあるものの使いづらいものが多く、散々なものらしい。自分が知っているシステムはそこまで不便でなかった気がするのでよくわからない。</p>
			<blockquote>
			<p>図書館が有するデータの中でも重要なのが、貸出履歴をはじめとする利用記録や嗜好データだ。これらのデータを部分的に活用したレコメンドの仕組みが、知る限りでは、すでに三つの図書館で提供されている。</p>
			<p>    * ・山形県立図書館 &#8211; 便利な機能 （2007年11月2日〜）</p>
			<p>    * ・成田市立図書館 &#8211; おすすめリスト （2009年6月27日~）</p>
			<p>    * ・九州大学附属図書館 &#8211; 貸出履歴からのリコメンド （2009年12月1日~）</p>
			</blockquote>
			<p>アマゾンなどでよく見るおすすめ機能がついたりと図書館システムも進化をしてきているそうだ。</p>
			<br>

			<p>図書館と言えば、<a href="http://www.itmedia.co.jp/news/articles/1011/30/news099.html" target="_blank">ちょっと前の事件</a>を思い出すが</p>
			<p>どんなところが作ったシステムがどのぐらいのシェアなのか知らなかったので少し調べてみた。</p>
			<br>

			<p><a href="http://figit.net/post/867" target="_blank">http://figit.net/post/867</a></p>
			<p>を見るとNECや富士通が多いらしい。</p>
			<br>

			<p>各社ともに、時代を反映してSaaSでSNSとか今っぽい機能ついてるよっていうシステムも売ってるみたい。</p>
			<p>外部連携（TwitterとかFacebookとか）がうまく行って引きこもらないシステムだったら、ドンドン採用してほしい。</p>
			<p><a href="http://cloud.watch.impress.co.jp/docs/release/20100824_389022.html" target="_blank">http://cloud.watch.impress.co.jp/docs/release/20100824_389022.html</a></p>
			<p><a href="http://cloud.watch.impress.co.jp/docs/news/20100906_392065.html" target="_blank">http://cloud.watch.impress.co.jp/docs/news/20100906_392065.html</a></p>
			<p><a href="http://www.unisys.co.jp/news/nr_100607_libeaid.html" target="_blank">http://www.unisys.co.jp/news/nr_100607_libeaid.html</a></p>
			<br>

			<p>クラウドにしたから別にコストが安くなったわけでもないよって意見もあるようだ</p>
			<p><a href="http://current.ndl.go.jp/node/16107" target="_blank">http://current.ndl.go.jp/node/16107</a></p>
			<h4>本を借りるっていうジャンルでのWebサービスって？</h4>
			<h5>本のレシピを作れるサービス</h5>
			<p>[カーリル:title=<a href="http://calil.jp/" target="_blank">http://calil.jp/</a>というサイトを見つけた。</p>
			<p>全国の図書館から検索可能なWebサービスで借りる機能が売りの読書サービス。</p>
			<p>気になったのは本のレシピという機能。</p>
			<p><a href="http://f.hatena.ne.jp/Nilfs/20110426002747" class="hatena-fotolife" target="_blank"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/N/Nilfs/20110426/20110426002747.png" alt="f:id:Nilfs:20110426002747p:image" title="f:id:Nilfs:20110426002747p:image" class="hatena-fotolife"></a></p>
			<p>本屋の棚を作るみたいなことが出来て楽しそう。こういうのって本に限らずあるといいなぁと感じた。</p>
			<p>棚を作ることを考えると同じジャンルのものを並べる必要はなさそう。この料理に合う漫画とかw</p>
			<br>

			<h5>議論してるのを発見</h5>
			<p><a href="http://201002.openlabs.go.jp/ja/idea/00717/" target="_blank">図書館クラウド | 経済産業省アイディアボックス</a></p>
			<p>経産省のアイディアボックスで図書館システムを効率化しよう的な議論がされていた。</p>
			<p>イマイチ盛り上がっていないけど、議論が始まることはいいと思った。</p>
			<p>図書館システムがもっとよくなって、地方にしかない資料とかを簡単に引き出せるようになると</p>
			<p>いいと思うんだけどねぇ。</p>
			<br>

			<h4>図書館サービスを作りたい！</h4>
			<h5>参考になりそうなもの</h5>
			<p>"Project Next-L"というプロジェクトのサイトがよくまとまっている。</p>
			<p><a href="http://next-l.slis.keio.ac.jp/wiki/wiki.cgi?page=%A5%E6%A1%BC%A5%B9%A5%B1%A1%BC%A5%B9%A5%C9%A5%AD%A5%E5%A5%E1%A5%F3%A5%C8" target="_blank">ユースケースドキュメント - Project Next-L Wiki</a>にユースケースがまとまってる。</p>
			<p>図書館システムをオープンソースで開発する団体のようだ。議事録は見れなかったけどTwitterのアカウントはまだ生きているようなので活動はしてるっぽい。</p>
			<p>実装をしたくなったら、参考になりそう</p>
			<p>先ほどのプロジェクトの<a href="https://github.com/nabeta/enju_root/wiki" target="_blank">Enju</a>というシステムは結構出来てるようで</p>
			<p>デモもあった。これは面白そう。</p>
			<p>同人誌のようなISBNのない冊子も扱える柔軟な仕組みになってるともっとわくわくする。</p>
			<br>

			<p>Web上でMY図書館を作りたいので、このプロダクトベースで何か作ってもいいかも。</p>
			<p>次回はEnjuについて調べよう。</p>
		</div>
]]></content:encoded>
	<dc:creator>Nilfs</dc:creator>
	<dc:date>2011-04-26T01:03:38+09:00</dc:date>
	<dc:subject>図書館</dc:subject>
	<dc:subject>Web</dc:subject>
	<dc:subject>サービス</dc:subject>
	<dc:subject>リサーチ</dc:subject>
</item>
<item rdf:about="http://d.hatena.ne.jp/Nilfs/20110130/1296376693">
	<title>構造デザイン講義を読んで</title>
	<link>http://d.hatena.ne.jp/Nilfs/20110130/1296376693</link>
	<description> 読んでいくつか気になる言葉があった たまに違うジャンルの本を読むことはすごく刺激になるので、プログラミングに関係ない本にチャレンジしていこうと意識している。 今回はふと目についたので、建築分野の本を読んでみた。 「構造デザイン講義 - 内藤廣」は実際に大学で行</description>

	<content:encoded><![CDATA[
		<div class="section">
			<h4>読んでいくつか気になる言葉があった</h4>
			<p>たまに違うジャンルの本を読むことはすごく刺激になるので、プログラミングに関係ない本にチャレンジしていこうと意識している。</p>
			<p>今回はふと目についたので、建築分野の本を読んでみた。</p>
			<p>「構造デザイン講義 - 内藤廣」は実際に大学で行っていた講義内容を整理して本にまとめた一冊。</p>
			<p>はじめにと７章の構造デザインの最前線は建築に携わらない人でも興味を持てる内容だった。文章は話したことをそのまま本にしたため口語が多い。（笑）とか出てきたので、ちょっと笑ってしまった。</p>
			<p>プログラマーとしての視点で見たときにいい言葉があったのでいくつか引用してみた。</p>
			<blockquote>
			<p>デザインこそは、土木であろうと建築であろうと、また他の工学分野にしても、すべてのエンジニアが持つべき能力だ。デザインマインドをなくして社会は語れない。工学が社会と向き合うことを止めない限り、エンジニアにとって、デザインは必須の教養であり、必要不可欠の武器なのだと思う。デザインこそは、技術の周辺にあるのではなく、コアにあるべきものだと考えている。講義にはそういう信念をもって臨んだ。だから「構造デザイン」なのだ。若者達の頭のどこかでにこのことを植え付けておけばいい、いずれそれは彼らが実社会の中で各々のやり方で活かしてくれるはずだ。そういうことを勝手に想像しながら、講義をした。</p>
			</blockquote>
			<p>(P6より)</p>
			<p>何を作り出すにしても、人と接触するインターフェースの部分（CUIやGUIなど）がかならず存在するのでその部分のデザインに気を使えるかどうかがいいプロダクトになるかどうかの大きなポイントになると思われる。</p>
			<p>自分を含めなかなかデザインに触れる機会の少ないエンジニアは多いと思うので、もっと触れやすい環境があるといいなぁと思った。</p>
			<br>

			<br>

			<p>朱鷺メッセ連絡橋が落下した事故やシャルル・ド・ゴール空港の屋根の一部が崩落した事故についての感想の部分</p>
			<blockquote>
			<p>これらは構造計算技術の問題ではなく、エンジニアが構造全体に対する想像力を持ち得なかった結果です。コンピュータによる解析への過信、物質を構成するエンジニアリングへの油断、そうしたものへの想像力への欠如、その結果起こることの恐ろしさを知ってほしいのです。残念亜柄、こういうことはみなさんがデザイナーになろうと、解析技術を磨いて構造エンジニアになろうと、また、建築であろうと土木であろうと構築物に関わる仕事をしていれば、これからますます起こる可能性が高くなっていると、いうことを忘れないでほしいと思います。（中略）</p>
			<p>工学的な知識を土台にして、どのようにすれば物質に対する感性を磨けるか、どのようにすれば、構造全体に対して想像を巡らせることが出来るか。そうしたことがこれから重要になっていきます。極論をすれば、これらを欠いた人は、エンジニアになる資格がない。もちろん、建築家になる資格もありません。</p>
			</blockquote>
			<p>(P20〜21より)</p>
			<p>これもソフトウェアの世界に共通していることかなと思います。</p>
			<p>Aを実装したときに、どういうバグの可能性があるのか想像できる経験値がたまっていれば、もしバグに遭遇しても簡単に対応できると思います。事前にassertを適切なところに仕込める勘や、空気を読んだうまい設計が出来るのには簡単に本で学べない職人的な勘が要求されているように思えます。</p>
			<p>本で学んだことだけで満足してはいけないなと感じました。</p>
			<br>

			<h4>まとめ</h4>
			<p>ざっと読んだので、肝心な材料に関する記述は飛ばしてよみました。</p>
			<p>建築とソフトウェアで分野が全く異なるように見えますが、結構根底の哲学には互いに学び合えることがあるように思えました。</p>
		</div>
]]></content:encoded>
	<dc:creator>Nilfs</dc:creator>
	<dc:date>2011-01-30T17:38:13+09:00</dc:date>
</item>
<item rdf:about="http://d.hatena.ne.jp/Nilfs/20110122/1295722706">
	<title>スキーマレスなDBが使いたくなったのでMongoDBはじめました</title>
	<link>http://d.hatena.ne.jp/Nilfs/20110122/1295722706</link>
	<description> なぜMongoDBか？ そもそも、どんなものがあるのか知らなかったので少し調べてみた。MongoDB前々から聞いたことがあったが を見ていると、CouchDBというのもあるようだ。 ここでそもそも条件を思い出す。 内向けかつローカルサーバーを建てる前提 大きなシステムじゃない ぶ</description>

	<content:encoded><![CDATA[
		<div class="section">
			<h4>なぜMongoDBか？</h4>
			<p>そもそも、どんなものがあるのか知らなかったので少し調べてみた。MongoDB前々から聞いたことがあったが</p>
			<p>を見ていると、CouchDBというのもあるようだ。</p>
			<br>

			<p>ここでそもそも条件を思い出す。</p>

			<ul>
				<li>内向けかつローカルサーバーを建てる前提</li>
				<li>大きなシステムじゃない</li>
				<li>ぶっちゃけスキーマレスなら何でもいい</li>
				<li>PHPだと他の人にもソースのメンテを頼める</li>
			</ul>
			<p>という条件なので</p>
			<p>PHP用のモジュールが配布されているMongoDBにした。</p>
			<br>

			<h4>インストールからサンプル実行まで</h4>
			<p>MongoDBのインストールはすごく簡単で公式サイトからバイナリを落としてきてチュートリアル通りにやると</p>
			<br>

			<p>デフォルトで/data/dbに保存するようなので、フォルダを用意して</p>
			<blockquote>
			<p>$ mkdir -p /data/db</p>
			</blockquote>
			<p>とりあえず起動する。</p>
			<blockquote>
			<p>$ ./mongodb-xxxxxxx/bin/mongod</p>
			</blockquote>
			<p>別のターミナルを起動してから、標準でシェルがついているので以下のような</p>
			<p>コマンドを打ってみると動作が確認できる</p>
			<blockquote>
			<p>$ ./mongodb-xxxxxxx/bin/mongo</p>
			<p>&#62; db.foo.save( { a : 1 } )</p>
			<p>&#62; db.foo.find()</p>
			</blockquote>
			<p>このときMongoDBの実行ファイルは/usr/local/の置いた。</p>
			<br>

			<p>PHP側の設定は</p>
<pre>
  pecl install mongo
</pre>

			<p>としてpeclコマンドでMongoDBのモジュールをインストールする</p>
			<p>（自分の環境ではうまく動かなかったので、</p>
			<p><a href="https://github.com/mongodb/mongo-php-driver/downloads" target="_blank">https://github.com/mongodb/mongo-php-driver/downloads</a> からバイナリを落としてきて配置した）</p>
			<p>最後にphp.iniに</p>
<pre>
  extension = mongo.so
</pre>

			<p>と書くとOK。あとはphpinfo()などでmongoがあるか確認すれば、完璧。</p>
			<br>

			<p>とりあえずはインストールまで。</p>
			<h4>20110127に追記</h4>
			<p>環境の下準備が必要だったのをメモ書き。</p>

			<ul>
				<li>Macの場合デフォルトでphpが入っているが、pearやpeclコマンドがないのでMAMPをインストールした</li>
				<li>autoconfがないとpeclを使ってモジュールのインストールができないので、macportsをあらかじめインストールしておく必要がある</li>
			</ul>
			<h4>参考になったサイト</h4>

			<ul>
				<li><a href="http://www.mongodb.org/display/DOCS/Quickstart+OS+X" target="_blank">Quickstart OS X - MongoDB</a></li>
				<li><a href="http://blog.madoro.org/mn/35" target="_blank">CouchDBとMongoDBを比較してみた - Masatomo Nakano Blog</a></li>
				<li><a href="http://handsout.jp/slide/2316" target="_blank">サービス終了のお知らせ</a></li>
			</ul>
		</div>
]]></content:encoded>
	<dc:creator>Nilfs</dc:creator>
	<dc:date>2011-01-23T03:58:26+09:00</dc:date>
</item>
</rdf:RDF>
