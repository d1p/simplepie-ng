<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xml:lang="ja">
	<channel>
		<title>tutumingの日記</title>
		<link>http://d.hatena.ne.jp/tutuming/</link>
		<description>tutumingの日記</description>
		<dc:creator>tutuming</dc:creator>


		<item>
			<title>PyQT (+WebKit) でサムネイル保存する方法</title>
			<link>http://d.hatena.ne.jp/tutuming/20090924/1253799354</link>

			<description><![CDATA[
		<div class="section">
			<p>Webページのサムネイルを取る方法、</p>
			<p>Firefoxを起動してスクリーンキャプチャを取るとか、</p>
			<p>他のソフトを使うとか、色いろ方法はあったみたいなんだけど、</p>
			<p>Linux環境で、メッセージサーバーから読み込んで、マルチスレッドでサムネイルを効率よく自前で生成したかったので調べてた。</p>
			<p>そしたらQtにWebkitが含まれてて、それ使えばできそうだと判明したので、テストコードを書いてみた。</p>
			<p>僕の環境では以下でうまくできました。</p>
			<p>Flashを有効にしたい場合は、最初に</p>
<pre class="syntax-highlight">
QWebSettings.globalSettings().setAttribute(QWebSettings.PluginsEnabled, True);
</pre>

			<p>をしておくと良いみたい。</p>
			<p>まだこちらは試してない。</p>
			<p>以下サンプルコード。</p>
			<p>中途半端なテストコードからでっち上げたけど、ちゃんと動くと思います。</p>
			<p>あ、PILも使ってます。</p>
<pre class="syntax-highlight">
<span class="synComment">#!/usr/bin/env python</span>

<span class="synPreProc">import</span> sys
<span class="synPreProc">from</span> PyQt4.QtCore <span class="synPreProc">import</span> *
<span class="synPreProc">from</span> PyQt4.QtGui <span class="synPreProc">import</span> *
<span class="synPreProc">from</span> PyQt4.QtWebKit <span class="synPreProc">import</span> *

<span class="synPreProc">from</span> PIL <span class="synPreProc">import</span> Image

<span class="synPreProc">import</span> tempfile

app = QApplication([])

size = 1024 , 1024

<span class="synStatement">class</span> <span class="synIdentifier">Thumbnailer</span>(object):
    <span class="synStatement">def</span> <span class="synIdentifier">__init__</span>(self):
        self.web = QWebPage()

    <span class="synStatement">def</span> <span class="synIdentifier">render</span>(self, url):
        self.web.mainFrame().load(QUrl(url))
        QObject.connect(self.web, SIGNAL(&#34;<span class="synConstant">loadFinished(bool)</span>&#34;), self.onLoadFinished)

    <span class="synStatement">def</span> <span class="synIdentifier">onLoadFinished</span>(self, *args):
        self.web.setViewportSize(QSize(*size))
        self.web.mainFrame().setScrollBarPolicy(Qt.Horizontal, Qt.ScrollBarAlwaysOff);
        self.web.mainFrame().setScrollBarPolicy(Qt.Vertical, Qt.ScrollBarAlwaysOff);

        qimage = QImage(size[0], size[1], QImage.Format_ARGB32)
        painter = QPainter(qimage)

        _, tmpfile_name = tempfile.mkstemp(suffix= '<span class="synConstant">.png</span>')
        tmpfile = open(tmpfile_name , '<span class="synConstant">w+b</span>')
        fn = QString(tmpfile_name)
        self.web.mainFrame().render(painter)
        painter.end()
        qimage.save(fn)
        tmpfile.close()

        im = Image.open(tmpfile_name)
        im.thumbnail((200, 400), Image.ANTIALIAS)
        im.save('<span class="synConstant">test.png</span>')

        app.quit()

t = Thumbnailer()
t.render(sys.argv[1])
app.exec_()

</pre>

			<p>例外処理とか、テンポラリファイル消してないとか、適当だけど、とりあえずメモメモ。</p>
			<br>

			<p>はてな記法とか、いろいろあるのねー。</p>
			<p>とりあえずいろんな小ネタをためていこうっと。</p>
			<p>サンプルコードみたいの、残しておかないとだめだなぁ。</p>
			<p>今回も適当なのしか残ってなかった。。</p>
		</div>
]]></description>

			<dc:creator>tutuming</dc:creator>

			<pubDate>Thu, 24 Sep 2009 13:35:54 GMT</pubDate>




		</item>

		<item>
			<title>週末には</title>
			<link>http://d.hatena.ne.jp/tutuming/20090911/1252661388</link>

			<description><![CDATA[
		<div class="section">
			<p>技術関係のことを書き始める予定。</p>
		</div>
]]></description>

			<dc:creator>tutuming</dc:creator>

			<pubDate>Fri, 11 Sep 2009 09:29:48 GMT</pubDate>




		</item>

	</channel>
</rss>
