<?xml version="1.0"?>
<rss version="2.0">
<channel>
	<title>dopefly.com: The Dopefly Tech Blog</title>
	<link>http://www.dopefly.com/techblog/</link>
	<description>Join Nathan Strutz as he shoots the breeze on techie geeky web dev stuff.</description>
	<language>en-us</language>
	<webMaster>mrnate@dopefly.com (Nathan Strutz)</webMaster>
	<pubDate>Mon, 09 Aug 2004 12:00:00 PST</pubDate>
	<lastBuildDate>Wed, 18 May 2011 21:05 PST</lastBuildDate>
	<ttl>30</ttl>

	
	<item>
		<title>LESS in Java: Running LESS CSS on the JVM</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=358</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=358</guid>
		<description><![CDATA[Foreword: I am giving a LESS CSS talk at the Adobe MAX 2011 ColdFusion Unconference. Blogging about LESS is just one of my stepping stones to presenting. If you want the really good stuff, you should come to my session!<br/><br/><br/>I recently blogged about <a href="http://www.dopefly.com/techblog/entry.cfm?entry=356">LESS ports to other platforms</a>, and I thought about mentioning Java there, but this is not a port so much as just reusing the native implementation. Let me break it down like this: Yes, LESS runs on the Java Virtual Machine. It's not even that hard. How you may ask? Like this...<br/><br/>Mozilla makes browsers and Javascript engines. One of their Javascript engines is called Rhino, a JSR 223 compliant Javascript engine for the JVM. You can run any Javascript in Rhino, except that there is no browser, no <code>window</code>, no <code>document</code> and no DOM (I know, it sounds like a dream come true). The conflict comes where <a href="https://github.com/cloudhead/less.js/">LESS.js</a> relies on browser constructs to get its job of compiling and preprocessing LESS CSS into plain CSS, so we have to defeat that.<br/><br/>Lucky for us, we live in the future, and along with our flying cars, we also have Google and GitHub, which pointed me to <a href="https://github.com/asual/lesscss-engine">Asual's project, lesscss-engine</a>. Asual is a software company in Bulgaria, and their GitHub projects are run by Rostislav Hristov.<br/><br/>The easiest method of setting up Asual's solution is to download his browser.js and engine.js, then from Rhino, within Java, include them in the order of browser.js, less.js, then engine.js - the order is important. I did this in an Ant build file like this:<br/><br/><pre>&lt;script language=&quot;JavaScript&quot; src=&quot;browser.js&quot; /&gt;<br/>&lt;script language=&quot;JavaScript&quot; src=&quot;less.js&quot; /&gt;<br/>&lt;script language=&quot;JavaScript&quot; src=&quot;engine.js&quot; /&gt;</pre>
<br/><br/>From there it's just a matter of calling the engine methods to load LESS CSS code, convert it to CSS and output to a file. Here is how I did it, this is my code that is directly after the script loading:<br/><br/><pre>&lt;script language=&quot;JavaScript&quot;&gt;&lt;![CDATA[<br/>  var inputFile = readFile('input.less');<br/>  var css = compileString(inputFile);<br/>  writeFile('output.css', css);<br/><br/>  function writeFile(filename, content) {<br/>    var fstream = new java.io.FileWriter(filename);<br/>    var out = new java.io.BufferedWriter(fstream);<br/>    out.write(content);<br/>    out.close();<br/>  }<br/>]]&gt;&lt;/script&gt;</pre>
<br/>The engine.js has a number of good helper methods (readFile, writeFile, compileString, etc.), I did it this way in case there were more LESS files to compile and I wanted to add it to the same <code>css</code> output string. When you do this, make sure you have the Rhino file, js.jar, in your Ant classpath. In Eclipse I loaded the external jar by adding it to the 'Run as...' dialog when you right-click on your build.xml file. Also make sure you are on Java 1.6+ to support JSR 223 Java Scripting.<br/><br/>You aren't limited to compiling LESS when you do this, you know. You can actually do anything you want in Javascript from right inside your Ant build file. It's fantastic.<br/><br/>There are other methods of accomplishing the same goal. <a href="https://github.com/erwan/">Erwan Loisant</a> did <a href="http://caffeinelab.net/2011/07/18/lesscss-and-rhino/">something similar</a> by altering the core LESS.js files (including the proper pull request). While he calls his release LESS for Rhino, it's really  more of LESS for Ant. Even still, it works great as a rhino-javascript-ant all-in-one solution. I especially like his use of an Ant macrodef to create a &lt;lessjs&gt; tag. His examples work straight across from his blog, perfectly.<br/><br/><br/>Not content to rest on my laurels, I went back to the Asual's LESS Engine project to see if I could make a jar and see what I could do with it. I cloned the GitHub repository locally over http, then I added it as a project to Eclipse. I had to install Maven, which was simple with Eclipse's software installer, and running it is almost exactly like running an Ant build. When you build the project you get a few jars in the <code>target/</code> folder. I recommend using the <code>lesscss-engine-1.1.4-jar-with-dependencies.jar</code> file, as it's the most likely to work anywhere you need it.<br/><br/>When I checked the LessEngine class, I noticed a <code>main</code> method that was added recently, which means we can call it from the command line, like so:<br/><br/><pre>java -jar lesscss-engine-1.1.4-jar-with-dependencies.jar input.less output.css</pre>
<br/><br/>Incidentally, if Asual (or someone) were to add a -w command line switch to watch the input file for changes, this would essentially make it identical to the Ruby LESS compiler, <code>lessc</code>. Except, of course, it would be much faster. Just a thought.<br/><br/>So we can call it from the command line. The next, most obvious step, is to put this in an Ant build. This was so simple. Here is what I did:<br/><br/><pre>&lt;java jar=&quot;lesscss-engine-1.1.4-jar-with-dependencies.jar&quot; fork=&quot;true&quot; dir=&quot;${basedir}&quot;&gt;<br/>  &lt;arg value=&quot;input.less&quot; /&gt;<br/>  &lt;arg value=&quot;output.css&quot; /&gt;<br/>&lt;/java&gt;</pre>
<br/><br/>Copy and paste that, with the jar, and it will all work as advertised.<br/><br/><br/>To summarize, You can compile LESS on Java. It's fun and easy to do!<br/><br/>If you want to get all the files, or want to see it in action, I'm doing this talk September 28, 2011 at the AZCFUG in Tempe, AZ, then at Adobe Max on October 5th, then again October 12th at the Tucson CFUG. Look forward to more of this kind of chatter here on this blog.<br/>]]></description>
		<category>CSS</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=358</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Tue, 13 Sep 2011 19:23:00 PST</pubDate>
	</item>
	
	<item>
		<title>The Definitive Recording of HPQaTD</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=357</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=357</guid>
		<description><![CDATA[Last July I gave my presentation, Holistic Program Quality and Technical Debt to the <a href="http://www.denvercfug.org/events/22296841/">Denver CFUG</a>, for my friend <a href="http://www.blayter.com/john/">John Blayter</a>. This is cool and stuff, but the truly impressive thing is that the audio and video is consistent all the way through, and the awful jokes were even relatively funny.<br/><br/>If you haven't seen it, this is the definitive version. This is the one to sit through.<br/><br/><a href="http://experts.adobeconnect.com/p1ghwjexomu/">Watch Holistic Program Quality and Technical Debt</a>
<br/><br/>Thanks, John, for getting it up there, even though I may have insulted your programming around the 14:30 mark. Yeah, I apologized, then pointed out exactly where I threw you under the bus. That just happened.<br/><br/>Update: You can hear my awesome kids screaming their heads off around 42:00. Fantastic.]]></description>
		<category>Software Quality</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=357</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Fri, 09 Sep 2011 11:28:00 PST</pubDate>
	</item>
	
	<item>
		<title>LESS Unofficial Ports</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=356</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=356</guid>
		<description><![CDATA[
Something I enjoy about LESS</a> is how its ecosystem is a microcosm of a lot of other more well known software ecosystems. There are competitors, contributors, and even ports to other languages. I'm going to talk about those ports today.<br/><br/>Aside from the original Ruby release and the subsequent Javascript browser/Node version which were both written by the creator, <a href="http://twitter.com/cloudhead">Alexis Sellier</a>, there are these other ports.<br/><br/>First, there is <a href="http://leafo.net/lessphp/">LESSPHP</a>. You'll never guess what language that ports to... QBasic! Nah just kidding. There is an obvious benefit to running LESS in PHP, mostly for the fact that your PHP application can now compile the LESS files at the server when they are requested. The JavaScript compiler is great, but doesn't work withthe oldest browsers, and some might take a second glance at having to download another .js file and compiling CSS in the browser. Running PHPLESS will let you get away from the need to eiher preprocess or postprocess your LESS source code. Also, you can invoke it from the command line, and it works just like the Ruby compiler but you only need PHP instead of Ruby.<br/><br/>The second unofficial port is <a href="http://www.dotlesscss.org/">DOTLESS</a>, a port to... DOS batch files! No, just kidding again. Running a native LESS compiler in the CLR is fantastic if you are on Windows or doing .NET development. DOTLESS can run as a filter in IIS that intercepts all .less file requests and translates them on the fly. That also gives way for you to call it programmatically like through a build process, or from the command line in an EXE file, just like the Ruby or PHP command line programs.<br/><br/>Which one of these is better completely depends on what kind of development you do and where you do it. Both projects have their files hosted on GitHub, and they are both very active. It's just good to know there are options.<br/>]]></description>
		<category>CSS</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=356</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Thu, 08 Sep 2011 21:13:00 PST</pubDate>
	</item>
	
	<item>
		<title>The Ease of Moving to LESS</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=355</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=355</guid>
		<description><![CDATA[You are not as far from using <a href="http://lesscss.org/">LESS CSS</a> as you may think. What does it take to switch from plain CSS to LESS? It's 2 steps.<br/><ol>
  <li>Rename your .css file to a .less file</li>
  <li>Include less.js</li>
</ol>
<br/>That's it! From there, you can start to add some variables and nest your selectors, or get more advanced with mixins and color functions.  Oh, and also my favorite thing in the world, the <code>// single line comment</code>!<br/><br/>There are a few cases where your stylesheet won't convert perfectly. I've noticed just a few. They are:<br/><ul>
  <li>Font sizes with a slash for a combined font-size / line-height, LESS tends to divide; the fix is to escape them, surround some or all of it with ~&quot;tilde quotes&quot;</li>
  <li>Missing semicolons and sloppy CSS won't compile in LESS; it won't validate either, so you should clean it up anyway</li>
  <li>IE-specific transformation filters and similar unofficial fringe CSS rules, escape the entire thing with the tilde quotes</li>
</ul>
]]></description>
		<category>CSS</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=355</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Tue, 06 Sep 2011 19:21:00 PST</pubDate>
	</item>
	
	<item>
		<title>The Shapes of LESS CSS (The LESS CSS Shapes Mixin Library)</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=354</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=354</guid>
		<description><![CDATA[Foreword: I am giving a LESS CSS talk at the Adobe MAX 2011 ColdFusion Unconference. Blogging about LESS is just one of my stepping stones to presenting. If you want the really good stuff, you should come to my session!<br/><br/>A few weeks ago I stumbled on a CSS shapes demo, <a href="http://css-tricks.com/examples/ShapesOfCSS/">The Shapes of CSS</a> from a great site, <a href="http://css-tricks.com/">CSS-Tricks</a>. It's good code, really good, but nobody wants their shapes the same size or color, and changing these means changing a lot of properties. Say you want three sizes of triangles on your site, you have to do the math three times. That's not a huge deal because it's a simple divide-by-two equation, but the heart shape is going to cause a lot more problems, a lot of rework, and a lot of checking.<br/><br/>The great news for you is that I made a <a href="http://lesscss.org">LESS CSS</a> mixin library that does all this work for you! All the shapes are LESS mixins, so they don't output anything unless you call them explicitly. You can add the library to your project and if you don't use them, it shouldn't add any overhead.<br/><br/>All of the shape mixins take at least 2 optional parameters, size and color. Some of them have additional properties, like width and height instead of size, and angle for some shapes like the parallelogram. The default size is 100px, which means that at least one edge of the shape will be 100px wide. The default color is red.<br/><br/>The best way to see it in action is to check the demo page, affectionately titled, <a href="http://www.dopefly.com/LESS-CSS-Shapes-Library/">The Shapes of LESS CSS</a>.<br/><br/>When you decide it's awesome, check it out, download it and fork it on GItHub:<br/><a href="https://github.com/NathanStrutz/LESS-CSS-Shapes-Library">The LESS CSS Shapes Library</a>.<br/>]]></description>
		<category>CSS</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=354</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Tue, 30 Aug 2011 22:18:00 PST</pubDate>
	</item>
	
	<item>
		<title>CSS is the styling assembly language of the web</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=353</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=353</guid>
		<description><![CDATA[A couple weeks ago Scott Hanselman blogged <a href="http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx">JavaScript is Assembly Language for the Web</a>. He's right. We now write programs that generate Javascript. We have languages that compile to Javascript, and not just a few! Javascript is our lowest-level language for client-side development.<br/><br/>Scott mentions HTML and Javascript as compiler targets, but he does not mention CSS. It's not a surprise, web developers generally don't think of CSS as a language you can program to. It's not a target you can compile for. CSS has to be hand-crafted over an intensive, grueling, month-long period of awful interaction between designers and developers. Or at least that's the common wisdom of writing a stylesheet.<br/><br/>Of course I'm being facetious. Sarcasm runs deep in my veins. Really deep. Obscure English humor deep.<br/><br/>The truth is, there are a lot of languages that compile to CSS. The overwhelming most popular two being LESS and SASS. I have a list of 14 &quot;CSS Preprocessors,&quot; that I looked at, granted many of them are not worth their weight in magnetic bits... a lot more zeros than ones if you know what I mean. Also, I use &quot;language&quot; in a very liberal sense; none of these are even remotely Turing complete. Only one has the concept of an <em>if</em> or a <em>loop</em>. Semantic detractions aside, CSS is growing up, and our near future has compiled CSS written all over it.<br/><br/>Wouldn't it be dreamy to wake up one day in the future where you didn't have to write all that CSS to get a web page to look nice? Maybe we're close to that dream already. Maybe we're there today.<br/>]]></description>
		<category>CSS</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=353</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Fri, 26 Aug 2011 17:09:00 PST</pubDate>
	</item>
	
	<item>
		<title>Try the LESS converter, right now!</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=352</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=352</guid>
		<description><![CDATA[Foreword: I am giving a LESS CSS talk at the Adobe MAX 2011 ColdFusion Unconference. Blogging about LESS is just one of my stepping stones to presenting. If you want the really good stuff, you should come to my session!<br/><br/>Today I am making public a tool I created to work with LESS CSS. This is a simple converter that takes your LESS and makes it CSS. It will help you learn and work with the LESS CSS language by showing you how things get converted and displaying any errors as they come across. Here's a screenshot to give you an idea of what you're up against.<br/><br/><img src="http://www.dopefly.com/techblog/lessconverter.png" alt="LESS CSS converter" />
<br/>You can type or paste some LESS code into the box on the left, then click the stupidly large center button to see the CSS that LESS generates in the right box. You can keep the CSS and use it for whatever, that's fine. I have been using it over the past couple weeks to test LESS code snippets - in this case, it's really more like a snippet compiler, a test driver or a debugger. I tried to make sure all the errors come across with as much detail as possible, but that doesn't mean that LESS always gives useful compile errors.<br/><br/>It's up <a href="https://github.com/NathanStrutz/LESS-Converter">on GitHub</a>, so you can download, clone or fork it and make a million dollars, or you can run <a href="http://www.dopefly.com/LESS-Converter/less-converter.html">the LESS CSS JS Converter</a> right here from dopefly.com.<br/><br/>The tool uses the Javascript LESS compiler, so there is no server connection, it's all in your browser. Try it out and see for yourself how fast and easy it is to write LESS CSS!<br/>]]></description>
		<category>CSS</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=352</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Thu, 25 Aug 2011 00:00:00 PST</pubDate>
	</item>
	
	<item>
		<title>(re-)Introducing LESS CSS</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=351</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=351</guid>
		<description><![CDATA[Foreword: I am giving a LESS CSS talk at the Adobe MAX 2011 ColdFusion Unconference. Blogging about LESS is just one of my stepping stones to presenting. If you want the really good stuff, you should come to my session!<br/><br/>A couple years ago I <a href="http://www.dopefly.com/techblog/entry.cfm?entry=297">mentioned the LESS CSS project</a>. I stated one problem with it back then, which was the dependence on Ruby. Creator Alexis Sellier has since moved the project to Javascript, which opens it up to a lot of possibilities, the most magical being that we can run it from our browsers.<br/><br/>The performance that I have seen so far has been nothing short of instantaneous. Even on IE8, the overhead is nil. If you've seen LESS but had reservations like I did, fear not, because LESS has come to you!<br/><br/>LESS has also been ported to PHP and .NET. It has picked up in popularity and community support, and is turning into a great open source software ecosystem.<br/><br/>So, why would you want to use LESS? It's because it makes CSS think like programmers do. Set a variable, Call a function, include a file, these are just the start to the kinds of things you can do when you <a href="http://lesscss.org">use LESS CSS</a>.<br/><br/>]]></description>
		<category>CSS</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=351</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Mon, 22 Aug 2011 23:07:00 PST</pubDate>
	</item>
	
	<item>
		<title>Hey what's happening? (August 2011 edition)</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=350</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=350</guid>
		<description><![CDATA[
A little quiet around here for the second half of the year. I hate those blogs that do nothing but apologize for lack of interesting content, and I don't like blogging just because it's been too quiet, but I have a goal for this year, and that's to blog more than last year. I have more than doubled it already, I think I'll beat the last 2 years combined, so I'm able to feel a little smug there. See, I like to set goals that I've already hit. No disappointment that way.<br/><br/>We took a couple vacations over the last couple months. Legoland in May, then San Antonio and Schlitterbahn in July. My wife likes to keep me away from screens when she can. We were supposed to head up to the <a href="http://en.wikipedia.org/wiki/Mogollon_Rim">Rim</a> this weekend but she's going to be busy showing houses. She's planning on closing her first two within the next few weeks, working her tail off. Also, I won a big glass award trophy thing at work for a project I did last year. I need to find a way to top that.<br/><br/>Anyways, before August slips away, <strong>I really do have 3 interesting things to say</strong>.<br/><br/>1. <a href="http://www.azcfug.org/">AZCFUG</a> has famed CF podcaster and presenter <a href="http://blog.dkferguson.com/">Dave Ferguson</a> to talk about <a href="http://www.cfobjective.com/sessions/application-intrusion-detection-and-tracking/">Application Intrusion, Detection and Tracking</a>. If you haven't seen it yet, you should come and catch this talk before he stops giving it! That's next Wednesday, the 24th, check the AZCFUG site for details.<br/><br/>2. Along with Dave and a lot of other really smart people, I am speaking at the Adobe MAX ColdFusion Unconference. The unconference area is where the smartest, coolest, most attractive people hang out, so naturally I'll be there most of the time. My time slot is on Wednesday afternoon, so don't leave the conference early, the best stuff is on the last day! The topic of my talk is <a href="http://lesscss.org/">LESS CSS</a>, being a programmer while working with stylesheets, and doing amazing things with beautiful technology.<br/><br/>3. With all that LESS stuff, I have learned far more than I can put in a single technical presentation, so I'm going to start leaking LESS content onto this blog. Hopefully it will whet your appetite enough to catch my talk. Look forward to it. You will love it. Also you can catch the preview at the CFUG in late September, and after MAX if your local user group or tech conference wants to see it and can book my time.<br/>]]></description>
		<category>Life Events</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=350</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Sat, 20 Aug 2011 00:09:00 PST</pubDate>
	</item>
	
	<item>
		<title>How I got started with ColdFusion</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=349</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=349</guid>
		<description><![CDATA[August 1st 2011 is &quot;<a href="http://www.bryantwebconsulting.com/blog/index.cfm/2011/7/20/August-1-2011-is-How-I-Started-ColdFusion-Day">How I started ColdFusion</a>&quot; day, thanks to Steve Bryant.<br/><br/>This may not be entirely fantastic, but it's my story.<br/><br/>I was working at 7x, a start-up web design and development company in Anchorage, AK. there were only a small handful of those when I started out of high school in 1997. Development at 7x was all based on Tango; the &quot;server&quot; was a mac, Tango would crash often and there was only one guy who could hack it. We started hearing about ColdFusion as a better web platform. A little positive press and the CEO was sold.<br/><br/>The following year, 7x sent 3 of us to a week of training in Seattle. The other two with me wore those customer relations, project manager and designer hats, and I was really a web producer or content engineer at the time. My business cards actually said I was the 'Sr Web Slinger'.<br/><br/>Thinking back I can't believe how naive I was at the time. I knew so little. The world was all blurry to me.<br/><br/>The training was an Allaire class put on by a guy who drove down from Vancouver, BC (as opposed to Vancouver WA where I was born). Nice guy, I think his name was Jonathan. We actually went through two classes in the week, first was a web development (in general) class, then the &quot;Cold Fusion&quot; class. I think I was the only one of the three of us from 7x who seemed to really get what was being taught in the CF class. It's that technical brain of mine I guess.<br/><br/>This was my first business trip. We toured Seattle, I visited my uncle in Kirkland, discovered GameWorks and Ikea, and made some life-long friends.<br/><br/>They put me right to work when I came back, working on shopping carts and early CMS-like apps. I sure hope none of that code is still running today.<br/><br/>So, here's to the bright future! I hope I can look back at this time and say &quot;I knew so little&quot; 13 years further down the road.<br/>]]></description>
		<category>Life Events</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=349</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Mon, 01 Aug 2011 00:00:00 PST</pubDate>
	</item>
	
	<item>
		<title>I am switching to Git</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=348</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=348</guid>
		<description><![CDATA[I've been a pretty big fan of <a href="http://en.wikipedia.org/wiki/Revision_control">revision control software</a> since I started hearing about it. It's crazy that I was a developer for so many years before I heard about it at all. I guess that's what I get for keeping my nose to the ground (note to self: write about being a new developer and getting connected).<br/><br/>I thought I had skipped the entire CVS generation until I joined a very large, almost 100 year old company. Boeing loves CVS, I guess just because it's reliable and was around when they set up their servers. My CVS server is doing fine, but it's slated for a migration to a new data center, possibly facing an end-of-life soon; the guy who maintained it left the company over a year ago. Naturally, I looked into Subversion. There is an enterprise hosting group that hosts SVN over SSH, which means SSH software, managing keystores, telnetting, all kinds of things that I am <strong>not</strong> a fan of. I had it working, just barely, only through Tortoise and not Eclipse, but it was hard and I would have to help all my teammates get it to work, too. They're smart, but this setup is harder than I want to work. I would have migrated to SVN, but they made it way, way too hard.<br/><br/>The great news is that they do make Git available to me (if I know where to look [Boeing has a strict software installation policy {I can only install the software they give me &lt;recursive parentheses are fun &laquo;sometimes&raquo;&gt;}]).<br/><br/>I had big initial troubles with understanding the concepts of Git. Everyone who switches has the same trouble. Expect it and don't let it get you down. Git uses a lot of the same words with different meanings, and the need to branch and manage branches is much more prevalent. I found EGit (the Git plugin for Eclipse) completely confusing and stupid. The command line was out, come on, this is 2011. Even TortoiseGit was acting broken. I needed help, and lots of it.<br/><br/>Thankfully, I got to attend two different hour-long Git sessions with <a href="http://cfmumbojumbo.com">Tim Cunningham</a>, who pointed out some other resources. I watched a few other videos, the best was probably <a href="http://www.yuiblog.com/blog/2011/06/09/video-f2esummit2011-donnelly/">Jenny Donnelly's Introduction to Git</a> from Yahoo. Then I read a lot, practiced some, and finally, here I am - switching!<br/><br/>I came to terms with EGit and TortoiseGit - they both make sense now and they work great. I use the Git Bash shell now and I don't even feel weird about it. I keep <a href="http://blog.fournova.com/2011/06/git-cheat-sheet/">a cheatsheet</a> on my wall and refer to it regularly.<br/><br/>It's at this point that I can look for the real benefits, to see if this little project pays off.<br/><br/>My Git architecture is very simple and based on what Tim showed off. It's simple file shares across the network. At first it sounded awful, but in reality this works like a charm. The shares are backed up. I control file access. I just have to enforce a couple strict pushing practices and everything is gravy.<br/><br/>I think what I most like about this setup with Git is that it inverses the control (IoC! [kind of]) of my source control software. Where before I needed a server, IT hardware support and had one repository, now I make and control the repository when and where I want it. Where before committing to a subversion repo on a flash drive seemed like a half-broken hack and it would never sync to a remote server, now it's a way to win easily. It feels liberating. It's really cool. This developer's tool doesn't need a server anymore. It just needs a capable developer. It's developer's software for developers, and I love it.<br/><br/>As I've progressed with Git, I have branched and merged and pushed and rebased and stashed pulled and diffed. Some of it has been a big challenge, like putting current work aside to get out a quick fix, I had to learn to stash, then make remote branches, and so on. It's tough, but thanks to google's index of stackoverflow, I'm making great progress!<br/><br/>In summary, Git is good, you should learn about it, give it a try and have patience.<br/>]]></description>
		<category>IDEs and tools</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=348</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Tue, 26 Jul 2011 20:12:00 PST</pubDate>
	</item>
	
	<item>
		<title>Presenting HPQaTD twice in July</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=347</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=347</guid>
		<description><![CDATA[This month it looks like I'm presenting <em>Holistic Program Quality and Technical Debt</em> (HPQaTD? Can someone pronounce this for me?), twice! If you haven't seen it yet, you have two chances in July.<br/><br/>Tuesday, July 12, for the Denver CFUG and my friend John Blayter. Read about it and RSVP at <a href="http://www.denvercfug.org/events/22296841/">The Denver CFUG's Meetup site</a>. It's at 5:30 PDT / MST, or 6:30 MDT in Colorado. John ran the CFUG in Phoenix for a few years, and actually was my boss at <a href="http://www.interactivesites.com/">Interactive Sites</a> until he moved to Colorado.<br/><br/>Thursday, July 14, for the Central Georgia CFUG and my friend Tim Cunningham. I have not met the user group manager Matt Abbott, but I warn you not to misspell his name. You can see the event and RSVP at <a href="http://cgcfug.groups.adobe.com/index.cfm?event=post.display&amp;postid=37182">The CGCFUG's Adobe Groups site</a>. This one is at 3:30 PDT / MST, or 6:30 ET, Tim hooked me on to this as a trade in services for his presentation on Git at the June Phoenix CFUG.<br/><br/>Both of these are remote presentations. If you want the address, you should <a href="http://twitter.com/nathanstrutz">follow me on twitter</a>, where I tend to post only the most important subjects, and links to cool speeches.<br/><br/>Thanks for the interest in my talk!<br/>]]></description>
		<category>Software Quality</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=347</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Thu, 30 Jun 2011 22:25:00 PST</pubDate>
	</item>
	
	<item>
		<title>AZCFUG June 2011 - Tim Cunningham on Git!</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=346</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=346</guid>
		<description><![CDATA[This month at the Phoenix ColdFusion Users Group we have my friend Tim Cunningham talking about Git. I think this is a reprise of his CF.Objective() session titled <em>A Git's Guide to Gitting Along</em>. As with all the CF.Objective() content and speakers, this is going to be another example of something great. Thanks to Tim's talk at the conference, I have been able to get up and running (ok, maybe jogging) with Git!<br/><br/>If you are in the Phoenix area, come to UAT, this Wednesday, June 22nd 2011 at 6:30 PM. It should last about an hour, we'll bring pizza if you bring yourself.<br/><br/>Also, we have to give away some software. Like, lots of software. Any product that Adobe sells, exactly one copy (short of something terribly expensive, but most of the CS5.5 bundles are included). You can even get a copy of ColdFusion Server or ColdFusion Builder. Yours, free, it's a random raffle, and you have to be here, in person, for the whole meeting to get in the drawing.<br/><br/>If you're not in Phoenix, we are still broadcasting this over the internet! Right around 6:30 on Wednesday (Arizona / Pacific time), tune in here: <a href="http://experts.adobeconnect.com/azcfugjune2011/">http://experts.adobeconnect.com/azcfugjune2011/</a>!<br/>]]></description>
		<category>AZCFUG</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=346</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Mon, 20 Jun 2011 21:33:00 PST</pubDate>
	</item>
	
	<item>
		<title>Client Variables: The Final Nail</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=345</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=345</guid>
		<description><![CDATA[I have been working on a project for a while now. Really, for about 6 years, but only in the past month did I get everything written down. I call it <a href="http://www.dopefly.com/pages/ColdFusionClientVariablesFinalNail.cfm">The Final Nail for ColdFusion Client Variables</a>. It's an eight page (printed) look at ColdFusion's client variables scope, and all the problems that come with it.<br/><br/>If you are looking for a reason to go through your ColdFusion app and replace you client vars, print off a copy and take it to your manager.<br/><br/>If you use client variables and think everything is fine, I suggest you read it and find out exactly what you have gotten yourself into.<br/><br/>If you are in love with client variables, well, I'm so sorry. I'd hoped we could be friends. I really am a nice guy, but we have to draw the line somewhere.<br/><br/>I had a ton of help, so thanks to everyone who pitched in (whether you know it or not)!<br/><br/>Last, this is the standing comments post for the article, so if you want to talk about it, this is the place. You can also get me on twitter, <a href="http://twitter.com/nathanstrutz">@nathanstrutz</a> if you have any quick comments.<br/><br/>That's all; enjoy <a href="http://www.dopefly.com/pages/ColdFusionClientVariablesFinalNail.cfm">The Final Nail for ColdFusion Client Variables</a>!<br/>]]></description>
		<category>ColdFusion</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=345</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Thu, 16 Jun 2011 18:38:00 PST</pubDate>
	</item>
	
	<item>
		<title>Introducing the CFML Complexity Metric Tool</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=344</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=344</guid>
		<description><![CDATA[A little bit ago I committed my first code to GitHub in the form of a project I've been tinkering with, a <strong>cyclomatic complexity measuring tool</strong> for your CFML apps. It's just a few files and a snazzy interface that will give you a heatmap kind of display to help highlight areas of complexity in your ColdFusion apps.<br/><br/>It's a quick toy to play with, and maybe it can help you reduce or refactor some of the more complex aspects of your applications, so give it a try!<br/><br/><a href="http://CFMLCyclomaticComplexity.riaforge.org/">RIAForge site</a>
<br/><a href="https://github.com/NathanStrutz/CFML-Complexity-Metric-Tool">Project &amp; Files on Github</a>
<br/><br/>And screenshots, so you know what you're getting in to:<br/><img src="http://www.dopefly.com/techblog/complexity1.png" /><img src="http://www.dopefly.com/techblog/complexity2.png" />
<br/>Finally, big props to Sean Coyne for already dropping a patch on it. I like this Github stuff, but I don't understand all the terminology yet.]]></description>
		<category>Free Code For You</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=344</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Wed, 08 Jun 2011 06:29:00 PST</pubDate>
	</item>
	
	<item>
		<title>AZCFUG May 2011</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=343</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=343</guid>
		<description><![CDATA[Just a quick note to say Jim Bambrough, local comedian and ColdFusion developer (great mixture, right?), is going to talk about building applications with Sencha/Ext JS, Sencha Touch and ColdFusion, tomorrow night at the <a href="http://www.azcfug.org/">Phoenix ColdFusion Users Group</a>. Jim is an awesome speaker, funny, and knows his stuff, so come watch him with the rest of us.<br/><br/>Same location as always: UAT's main auditorium at 2625 W. Baseline Rd, Tempe, AZ. We will meet at 6:30 PM on May 25th. If you are anywhere near Phoenix, then I hope you can join us!<br/><br/>* UPDATE : Catch the show live, tonight - <a href="http://experts.adobeconnect.com/azcfugmay2011/">http://experts.adobeconnect.com/azcfugmay2011/</a>!<br/>]]></description>
		<category>AZCFUG</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=343</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Mon, 23 May 2011 23:48:00 PST</pubDate>
	</item>
	
	<item>
		<title>CF.Objective() 2011 Notes from Day 3</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=342</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=342</guid>
		<description><![CDATA[Oh no, the last day!<br/><br/>Early on, I went to What is Function Programming with Sean Corfield<br/><a href="http://github.com/seancorfield/intro2fp">Slides</a>
<br/><img src="http://www.dopefly.com/techblog/cfobjective11-05.jpg" alt="Sean Corfield believes in himself" style="float:right;margin:0 0 5px 5px;" />I get it, finally. Not that I hadn't seen FP before, not that I hadn't had it explained before, not that I am going to start writing clojure today, but now, at least, I get it. Here's the short answer. The strength in functional programming comes down to map and reduce, and to having very limited side effects except for transforming the data - this explains why it's great for testing, for thread safety and thus parallelization. Sean is always great to listen to, and it's usually about something cutting-edge, pushing us over the cliff so we can try our wings. As a bonus, we also had an interesting discussion about closures versus anonymous functions (hint: it's about context) that we got to continue at lunch.<br/><br/>Next I went to Relax with CouchDB by Mark Drew<br/><a href="http://www.markdrew.co.uk/blog/enclosures/RelaxWithCouchDB_CFO.pdf">Slides</a> (pdf)<br/>Mark went briefly over NoSQL databases, which made me wish I saw Peter Bell's NoSQL talk on Thursday. I picked up everything I could during his brief NoSQL discussion, I especially liked the slide on the CAP Theorum, with what category databases fall into (<a href="http://diego-pacheco.blogspot.com/2011/02/redis-at-nosql-playground_27.html">you can see it here</a>). Mark is funny on stage. He keeps the crowd awake by throwing things at them. Candy, USB drives, toys, etc. It's entertaining (and dangerous). CouchDB looks like an awesome product, and Mark made a really nice case for it. It's essentially a document database with a REST interface. He showed it returning a lot of JSON, but I'm sure it can do more.<br/><br/>Before lunch I sat in on Just Mock It with Louis Majano<br/><a href="http://ortus-public.s3.amazonaws.com/presentations/CFObjective2011/JustMockIt.pdf">Slides</a> (pdf)<br/>I saw this at the MAX unconference tent, but a couple things have changed - I am developing for CF9 now instead of CF6, so a mocking framework is feasible, and MockBox version 1.3 was released, so I was hoping to see something new. I didn't see anything new, so that was a bummer. What I got instead was a refresher course on MockBox and some tips on unit testing, not a loss at all. Mocking is an important topic when you talk about unit testing. Some tips I got were to make a 1:1 relationship from components to test components, remember to test private methods, with mocking you can test what happens when another component throws an error, and a good source for unit testing examples is ColdBox's test suite. Final note, it's easy to get lost in Louis' fantastic accent!<br/><br/>A scene from Lunch<br/><img src="http://www.dopefly.com/techblog/cfobjective11-03.jpg" alt="CF.Objective() Lunch" />
<br/><br/>After lunch was Time Management for Developers by David Shepherd<br/>No slides<br/>David gave the case for using Mylyn in Eclipse, and showed how it works. Unfortunately I was underwhelmed by the presentation, I don't know what it was about it, maybe just because he was sitting for it, maybe because it was right after lunch. Even still, Mylyn gets a win. It lets you keep context while you switch between tasks, it lets you share your context with other developers, and it integrates your tasks with bug and task tracking systems. Cool product. I've already started trying it out!<br/><br/>Finally, the last session, I went to AngularJS with Elliott Sprehn<br/>No slides<br/>Elliott was the one who talked me into writing my session notes on this blog. I have to say I was overwhelmed by Angular. I told him afterward that for a bit, it felt like he was just telling us everything we wanted to hear, it was too good to be true: How would you like a javascript framework that works with jQuery, gives you includes and templating, dynamic variables, 2-way data binding, magical mustache expressions, unicorns and rainbows, total extensibility, ORM over REST, MVC for JS, mocking and unit testing, free beverages for life and a friendly DSL for writing tests, plus it's smaller than jQuery and written by Google. Yeah, that's AngularJS. Basically, I think he was trying to blow us away in order to get us to try it out. It worked. I am now getting familiar with the double-magical-mustache syntax. I just need a project to put it in. You should look into it yourself.<br/><br/><br/>That's a wrap.<br/><br/>To summarize CF.Objective() 2011 for me, I will say that I met a ton of amazing people, talked about a lot of programming, learned a huge amount of things, shared ideas with the best minds in ColdFusion and was blown away with the things some people are doing with this technology. CF.Objective() truly made me a better developer. My take on the conference is that they billed themselves as <em>the</em> conference for enterprise ColdFusion development, and they delivered.<br/><br/>Thanks to the organizers, the speakers, the other attendees and the sponsors! You are all doing great stuff. Believe it!]]></description>
		<category>ColdFusion</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=342</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Mon, 23 May 2011 18:35:00 PST</pubDate>
	</item>
	
	<item>
		<title>CF.Objective() 2011 Notes from Day 2</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=341</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=341</guid>
		<description><![CDATA[Second day!<br/><br/>First up, I went to Setting up a Solid Local Dev Environment with Kurt Wiersma<br/><a href="http://www.wiersmablog.com/machblog/index.cfm?event=showEntriesByCategory&categoryId=35887B68-1109-60B8-3F74D46F4444758B&categoryName=Presentations">Old slides</a>
<br/>Kurt told me it was going to be stuff I already knew, but I like to assure myself that I'm doing things right, or if not, that I at least know why I am doing it wrong. He was right, I didn't learn a lot, but it made me think about the way I do it versus his. He recommends the Apache/CF Multi-server stack with a shared database. I have been doing stand-alone CF with the built-in server, which has been great for my current projects. Also, he mentioned DDLUtils, which I need to play with. In the end, it was a well thought out session, and Kurt did it like a pro.<br/><br/>Second session, No-Nonsense REST &amp; Taffy with Adam Tuttle<br/><a href="http://fusiongrokker.com/post/my-cfobjective-2011-slides-notes">Slides</a>
<br/>The first of two consecutive REST sessions, Adam talked about the tangible use of RESTful services in ColdFusion. The 5-minute intro to REST was just what we needed to get going, then he showed what it takes to do it in CF - y u c k. Hundreds of lines of code - we need  a framework! Intro Taffy, a simple conventions-based RESTful framework for CF kind of like FW/1 meets jQuery, then mashed into REST. The killer feature of Taffy I think is the dashboard, which lets you call your REST services from an admin-like interface. Adam was funny and his software was keen.<br/><br/>Here is Adam talking about boring programmer stuff<br/><img src="http://www.dopefly.com/techblog/cfobjective11-07.jpg" alt="Adam Tuttle was not boring" />
<br/><br/>Last before lunch, Everything you wanted to know about REST with Simon Free<br/>No slides<br/>Simon Free's REST talk right after Adam's was very helpful. Simon approached REST with the sort of philosophical hippie free love type of approach that REST was based on, which I think is comical because Simon is really just a cool, smart guy, not the hippie type. It was great to finally have someone tell me exactly what REST is and everything it stands for and how it was really meant to be used, plus how where and why to break the rules. I had a lot of takeaway points, so this one was a win for me.<br/><br/>After lunch, I gave my presentation, Holistic Program Quality and Technical Debt. I think it went pretty well. I could criticize myself all day on my performance, but instead, I will say I had a good interactive audience considering it was right after lunch, there were maybe around 40 people (?), I got a few laughs, we had some discussion at the end on code reviews, I think I hurt some people's feelings in a thought-provoking kind of way, which is good, then I had some requests to re-use my slides for themselves, plus one person called me "smart guy." Still I was kind of unsure until <a href="http://corfield.org/blog/post.cfm/another-cf-objective-is-over-wow">Sean told me that he liked it</a> (but in person, not just on his site). Whew, that did a lot for my nerves, thanks! I felt better. A few kind words go a long way.<br/><a href="http://www.dopefly.com/techBlog/entry.cfm?entry=338">Slides</a>
<br/><br/>In the last session of the day, I went to A Git's guide to Gitting along with Tim Cunningham<br/><a href="http://cfmumbojumbo.com/cf/index.cfm/cfconferences/cfobjective-2011/gittingalong/">Slides</a>
<br/>Tim did something unique, he pre-recorded his screen as he used Git and while it was playing, he talked over it. It ended up being a little bit awkward because he hit the ffwd button a few times on accident, and sometimes couldn't pause it fast enough. Tim does great in front of a crowd and is fun to listen to, so it was kind of a bummer that the recorded part was only so-so. That said, I learned a great deal about how Git works, it's impressive and I am going to start using it because of this session. Mission accomplished, Tim.<br/><br/>CF.Objective() was well attended. Here is another shot from the keynote. My day 2 photos were lacking, so I'm dropping it here :-)<br/><img src="http://www.dopefly.com/techblog/cfobjective11-01.jpg" alt="CF.Objective() 2011 had 320 attendees!" />
]]></description>
		<category>ColdFusion</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=341</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Sun, 22 May 2011 16:30:00 PST</pubDate>
	</item>
	
	<item>
		<title>CF.Objective() 2011 Notes from Day 1</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=340</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=340</guid>
		<description><![CDATA[Well it's been a week since CF.Objective() ended, I thought I would share my notes on the various sessions I attended.<br/><br/>There was the keynote.<br/><img src="http://www.dopefly.com/techblog/cfobjective11-02.jpg" alt="CF.Objective() 2011 Keynote" />
<br/>I don't really have any notes on it except it was good and I wish it could have gone longer.<br/><br/><br/>First session, Progressive Enhancement with Barney Boisvert<br/><a href="http://www.barneyb.com/barneyblog/2011/05/12/cf-objective-progressive-enhancement/">Slides</a>
<br/>Somehow I was expecting something different. Stick with me here. The way Barney presented progressive enhancement versus graceful degradation was surprising. It's hard to explain, but he had the whole room on the edge of their seats with an escalator metaphor. His delivery was great and the content was perfect for the current state of web development (HTMl5, CSS3, javascript frameworks). The overall idea is that you should make your web applications work on the most minimal browsers, then progressively enhance the experience for better browsers. Hoping your application degrades gracefully isn't good enough. Great session. Really made me think.<br/><br/>Next, ORM Zen with Marc Esher<br/><a href="http://bit.ly/cformzen">Slides</a>
<br/>Marc has a really good presence on stage, and the way he presents and speaks somehow creates interest in every word. What came out this time was a very practical, very real-life discussion on making CF's Hibernate-based ORM work. There are a lot of finer points that I didn't know about, having only done one small ORM project in the past, so it was really helpful. Some of the takeaways I had were to turn off ORM sessions, always use <code>transaction{}</code>, always set the inverse property on a one-to-many join. I am going to hang on to his slide deck, as it's full of good insight.<br/><br/>After lunch, I went to ColdSpring 2.1 (alpha 1) - What's New and Improved with Mark Mandel<br/>No slides<br/>I gathered from the audience that this is the annual ColdSpring 2.0 talk. It's not vaporware, in case you were wondering, nobody said it was (certainly not me). The alpha release is coming as soon as Mark writes more documentation. I understand that, especially after seeing it in action, CS2.0 does a lot of new things. Mark's always fun to listen to, and he's crazy smart. Some of the new features include easier XML configuration, a pluggable architecture with xml namespaces, including one that will make AOP much easier to do. Annotation-based injection could make a debut for CS2.1. Thanks, Mark, we're all looking forward to it!<br/><br/>Here is Mark Mandel and Louis Majano, the authors of the top two dependency injection frameworks in ColdFusion, discussing how to borrow features from the other.<br/><img src="http://www.dopefly.com/techblog/cfobjective11-04.jpg" alt="Mark &amp; Louis" />
<br/><br/>The final one of Friday was on Continuous Integration with Marc Esher again<br/><a href="http://wiki.mxunit.org/display/default/CFObjective+2011+--+Continuous+Integration">Slides</a>
<br/>Again, Marc is great to watch, always has well polished sessions. I don't know that I picked up a lot from this talk, but the slides were good. I don't do continuous integration, it's kind of tough in my corporate environment, but Marc is the second speaker I have heard mention how amazingly good Jenkins (formerly Hudson) is. Above that, I do Ant ("You can't avoid Ant any longer"), and I use MXUnit for unit tests ("No project ever started with 500 tests, they all start at zero, so it's always a good time to start"). The way Marc related Ant to CFML was brilliant. cfparam = property, cffunction = target, cfinclude = import &amp; taskdef. Check his slides for the rest. It was a good talk, well done.<br/><br/>Here is Marc on stage.<br/><img src="http://www.dopefly.com/techblog/cfobjective11-06.jpg" alt="Marc Esher on stage" />
<br/><br/>Later that night were the lightning talks. I was up third, and I think only <a href="http://coldfusionjedi.com/">Ray</a> was as nervous as I was, which made me feel ok for being nervous. The talks were surprisingly varied. The baseball card market, the philadelphia library, apps for coldfusion, brewing beer, love, CF server troubleshooting, motorcycles and much more. I think mine about client variables went pretty good, <a href="http://twitter.com/#!/styggiti/status/68849644410634241">I</a> <a href="http://twitter.com/#!/ibjhb/status/68850618873286656">had</a> <a href="http://twitter.com/#!/JamieAzure/status/68852725605089281">some</a> <a href="http://twitter.com/#!/mikehenke/status/68851335042310144">good</a> <a href="http://twitter.com/#!/carehart/status/68851805978763264">reactions</a> from the crowd, and I'll get that content up here pretty soon.<br/><br/>That's the end of the first day. I'll have the next day up soon.]]></description>
		<category>ColdFusion</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=340</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Sat, 21 May 2011 21:29:00 PST</pubDate>
	</item>
	
	<item>
		<title>A week with the BlackBerry PlayBook</title>
		<link>http://www.dopefly.com/techblog/entry.cfm?entry=339</link>
		<guid>http://www.dopefly.com/techblog/entry.cfm?entry=339</guid>
		<description><![CDATA[If you've followed me on twitter even a little bit over the past week, you probably learned that I was at CF.Objective(), and that I have a new BlackBerry PlayBook. I've been tweeting about it like crazy, I just can't stop. I don't remember being that excited about the iPhone, probably because everyone already had theirs. It's nice to be on the cutting edge once in a while.<br/><br/>So it's been a little over a week since I got my PlayBook. I'm not a BlackBerry fanboy, like I said, I've got an iPhone, BBs never appealed to me. Also, I didn't buy it, I haven't wrapped any money in it, it was a gift, and if they did it just to make people talk about it, they win; I have been talking.<br/><br/>In a couple minutes, after making my way past the gorgeous packaging, I was setting up my PlayBook. It guides you through a few easy, non-invasive steps, no credit cards involved, install a 300mb update over wi-fi, restart and it's all good. They left me with some helpful videos on how to use the device, I found them interesting and I wanted to know what I was doing, so I watched them.<br/><br/>The multitasking interface has taken a bit of criticism from my friends. They don't want to learn a new interface or they aren't so sure about this swiping from outside the screen. Yes, the frame is touch-sensitive. Somehow, I found it perfectly natural. Switching between apps is a swipe from side-to-side, going back out to the menu is a swipe from the bottom. The application context menu is a swipe from the top. The menu bar (battery / wifi / clock etc.) is a swipe from one of the top corners, and the keyboard from the bottom left corner. Multitasking is a rich experience and more akin to a desktop computer, like hitting [win]+[tab] on Win7 to switch tasks. I find it so natural that I keep trying to swipe-up on my iPhone.<br/><br/><img src="http://www.dopefly.com/techblog/playbook-1.jpg" alt="The PlayBook multitasking interface" />
<br/><br/>So after playing with the interface, I loaded up the App <strike>Store</strike> <strike>Market</strike> World. I will skip being tactful. The apps suck. They are so bad that I am seriously thinking of building a few things for myself that I need and use daily, like an Evernote client (where I am writing this), a Read It Later client, a Netflix streaming client (if only), file browser, a twitter client, and some decent games. The list goes on and on. The apps are either not there, or are so bad that it doesn't matter. The good news for developers out there is that it means the field is ripe for the picking. Really, any app that's not built-in is a good idea to create.<br/><br/>The browser however is amazing, simply for the fact that flash works, and it works well. Browsing the web was responsive. Zooming in to content is a bit slow, but it works fine. Navigating is a lot like the browser on my iPhone.<br/><br/>Videos on the 1024x600 screen are beautiful. High-definition mobile video is the new hotness for me. I love it. I loaded a few movies up for the plane trip to & from CF.Objective(). It takes everything I throw at it - MP4s, WMVs and Divx avi videos mostly.<br/><br/>At first I had no idea how I was going to get files on & off. I plugged it into my PCs USB port, installed the drivers and started copying files, then I found <strong>my favorite setting</strong>. With 1 setting I can turn on file sharing, and with another, I can turn on file sharing over wi-fi. As soon as that goes on, a new share appears on my network, I navigate to it and start copying files. This is reason enough to hate every other smartphone and tablet on the market. This is both obvious and amazing to me.<br/><br/>Extending that is downloading files from the browser. If you download office files, you can open them in the msoffice-like apps that are preinstalled. If you download a PDF, you can open it in the preinstalled acrobat reader. If you download a zip file, you can just save it until you want to transfer it to your desktop PC. Again, it's both obvious and amazing. Not something you will find in iOS.<br/><br/>The plane ride was good, I played with the browser in the airport, I watched over an hour of video on the plane, then that night when I was showing it off at the conference, the battery was around 80%. Even trying to give it somewhat heavy use, I can't kill the battery in less than 2 days. I don't have the patience to use it continuously for long enough to tell you a real answer. I did manage to kill it today finally - two full days of use, on and off, and finally watching high-def videos made it happen. As far as I can tell, there is no global messaging system, so it didn't let me know the battery had reached 0%, it just started to shut down.<br/><br/>The cameras are there. Front & rear. I got a mixture of quality all based on lighting. Normal indoor lighting is very grainy, and outdoor shots look like a digital camera, but are usable. The worst part is the delay when taking a photo. Let's say I hit the button when you started reading this paragraph. It actually took the photo right about now. *click*<br/><br/><img src="http://www.dopefly.com/techblog/playbook-2.jpg" alt="PlayBook photo from the Hyatt 23rd floor." />
<br/>From the Hyatt 23rd floor, overcast daylight gave a pretty good shot.<br/><br/><img src="http://www.dopefly.com/techblog/playbook-3.jpg" alt="PlayBook photo, Marc Esher shot Ben Nadel." />
<br/>I think Marc Esher shot Ben Nadel here. Notice how it was the camera delay that caused the photo to come out blurry.<br/><br/>The worst thing of the whole experience, and mind you I am coming from an iPhone, is the text editing. The keyboard in landscape is too small for my hands, too big for my thumbs, so I have to peck at it. In portrait it is about right for two thumbs. That's fine, but actually editing text, selecting text and moving the cursor is <strong>awful, even unusable</strong>. Fixing misspelled words and automatic capitalization is nonexistent. You can tell when I tweet with it because there are no capital letters and [space][space] doesn't insert a period. It took Apple a number of years to get to where they are now; I hope it doesn't take that long for RIM.<br/><br/>There are a few things I haven't even tried yet. I understand it does HDMI video out in the background while you can do somethign else in the foreground, like play a game while your wife watches a chick flick (you heard it here first, folks). Also if you have and love a BlackBerry phone already, BB bridge gives you mobile internet and access to your phone's email & contacts. Yeah, I'm not doing that.<br/><br/>Bonus: I discovered a few tricks that you may not know. First, you can take a screenshot on the PlayBook by hitting the [Volume UP]+[Volume Down] buttons at the same time. Second, you can navigate the local hard drive using the browser by going to <a href="file:///">file:///</a>. I created an HTML document with my <a href="http://www.dopefly.com/techblog/entry.cfm?entry=320">speaker notes</a> and uploaded the files to the PlayBook, then navigated to the local file in the browser - that gave me an offline copy of my presentation notes to use on stage. Sweet!<br/><br/>To summarize, I am very thankful to RIM for bringing me this new toy. As far as a consumer device goes, it's a game of contrasts - the PlayBook has the best tablet browser that I have seen anywhere, but the worst text editing, the best multitasking, the worst app store, the best file sharing and management, but a lame camera. The foundations are laid for something incredible. I like this device. I really do. Its strengths are worth taking a look at in spite of its shortcomings. And with that, I'm keeping it, and I'll show it off to anyone with eyes because it's so dang pretty.<br/><br/><img src="http://www.dopefly.com/techblog/playbook-4.jpg" alt="PlayBook photo of Elly reading a book." />]]></description>
		<category>General</category>
		<comments>http://www.dopefly.com/techblog/entry.cfm?entry=339</comments>
		<author>mrnate@dopefly.com (Nathan Strutz)</author>
		<pubDate>Wed, 18 May 2011 21:19:00 PST</pubDate>
	</item>
	

</channel>
</rss>
