<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:copyright="http://blogs.law.harvard.edu/tech/rss" xmlns:image="http://purl.org/rss/1.0/modules/image/" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">
    <channel>
        <title>mostlylucid</title>
        <link>http://mostlylucid.net/Default.aspx</link>
        <description>scott galloway's personal blog...</description>
        <language>en-US</language>
        <copyright>Scott Galloway</copyright>
        <generator>Subtext Version 2.1.0.5</generator>
        <image>
            <title>mostlylucid</title>
            <url>http://mostlylucid.net/images/RSS2Image.gif</url>
            <link>http://mostlylucid.net/Default.aspx</link>
            <width>77</width>
            <height>60</height>
        </image>
        <atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/mostlylucid/XRDO" /><feedburner:info uri="mostlylucid/xrdo" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><geo:lat>47.671346</geo:lat><geo:long>-122.341662</geo:long><feedburner:emailServiceId>mostlylucid/XRDO</feedburner:emailServiceId><feedburner:feedburnerHostname>http://feedburner.google.com</feedburner:feedburnerHostname><item>
            <title>In a new world, my new job and coming to terms with ExtJs</title>
            <category>.NET</category>
            <category>ASP.NET</category>
            <category>JQuery</category>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/MRGdsf-bgj0/in-a-new-world-my-new-job-and-coming-to.aspx</link>
            <description>&lt;p&gt;After over a year away from them, I’m busy at my new job in Glasgow with Dell (you know, they make the big black computers) as a Senior Dev Lead (I think, titles are still a bit mixed up). Loving being back working with a team; though I’ve spent most of my time sniping from the sidelines…the beginnings of my influencing the future direction our application takes. This is a bit of a departure for me, I’m used to developing very high scale and performance apps for internet use, but this one has a more limited audience (so far!) . The app I’m working on is the one used by the Dell factory and corporate customers for defining the ‘images’ written on to machines at the factory…and new machines in IT departments. So before you ask…no I don’t write the crapware, but our app is used to write it to the machines (sorry!).&lt;/p&gt;

&lt;p&gt;Anyway, the app I’m working on is pretty interesting, very MS based, uses an SOA architecture and &lt;a href="http://www.sencha.com/"&gt;ExtJS&lt;/a&gt; as a front end. Kind of uses MVC 2 (just a very thin layer used to provide JSON through &lt;a href="http://www.sencha.com/forum/showthread.php?72245-Ext.Direct-for-ASP.NET-MVC"&gt;ExtJs.Direct.MVC&lt;/a&gt;). 

  &lt;br /&gt;&lt;a href="http://www.sencha.com/"&gt;ExtJs&lt;/a&gt; is an interesting beast…essentially and entirely client side UI framework which bumps all it’s templates and code down to the browser in one big file (we use script combining and compression). From then on, you app UI is instantiated entirely on the client…for an old jQuery / Server-side coder like me this is a bit shocking. I understand the theory behind it…in essence all you require from the server after the first load is the JSON which represents the data each ‘page’ requires (though really each ‘operation’). 

  &lt;br /&gt;My biggest issue with this approach is: Javascript is a sucky language to build UI with. There, I’ve said it! Now don’t get me wrong, I love Javascript, books like those I recommend below really have over the past year or two really rekindled my love of Javascript (along of course with the superlative &lt;a href="http://www.jquery.org"&gt;jQuery&lt;/a&gt;). &lt;/p&gt;

&lt;div&gt;&lt;script charset="utf-8" type="text/javascript" src="http://ws.amazon.co.uk/widgets/q?ServiceVersion=20070822&amp;amp;MarketPlace=GB&amp;amp;ID=V20070822/GB/mostlylucid-21/8001/1a200c28-a2a6-411b-bd37-b1f758cfad23"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;a href="http://ws.amazon.co.uk/widgets/q?ServiceVersion=20070822&amp;amp;MarketPlace=GB&amp;amp;ID=V20070822%2FGB%2Fmostlylucid-21%2F8001%2F1a200c28-a2a6-411b-bd37-b1f758cfad23&amp;amp;Operation=NoScript"&gt;Amazon.co.uk Widgets&lt;/a&gt; &lt;/noscript&gt;&lt;/div&gt;

&lt;p&gt;My main issue with ExtJS is that is defines the templates it uses entirely in code…and any customization to those templates (size, contents etc…) is also performed using Client-Side code. Looking at the codebase of a reasonably large application like our, I can see well over 200 individual JS files which typically map to operations. Frankly, it’s a bit of a pain to read this stuff and update it. Validation logic, text strings containing content etc…are all encapsulated in these files along with operation –&amp;gt; operation flow information.&lt;/p&gt;

&lt;p&gt;Anyway, unfortunately I’ve joined the team when we’re just about to do our first release…so it’s WAY too late to change (and frankly we have a huge investment in this). My preference is to write UI using server side code to generate HTML (with Razor pages of course!) and load initial data in to the UI using this server side code (whether through partial views and jQuery or just direct rendering to the browser). AJAX is awesome and when used properly can give a very responsive UI…for example, when saving data from a page back to the server, I would always use AJAX these days and give validation feedback direct to the page. Well anyway, enough of the rant. There’s lots of places where I *can* make improvements…and hey, it’s a good job right!&lt;/p&gt;

&lt;p&gt;Sometimes, no matter how much you want to change stuff you just have to live with it! &lt;/p&gt;&lt;img src="http://mostlylucid.net/aggbug/1344.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/2mq9T3YfmUJaBCSWR42QDu6w5QA/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/2mq9T3YfmUJaBCSWR42QDu6w5QA/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/2mq9T3YfmUJaBCSWR42QDu6w5QA/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/2mq9T3YfmUJaBCSWR42QDu6w5QA/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=MRGdsf-bgj0:ULnUeH1Pkhg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=MRGdsf-bgj0:ULnUeH1Pkhg:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=MRGdsf-bgj0:ULnUeH1Pkhg:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=MRGdsf-bgj0:ULnUeH1Pkhg:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=MRGdsf-bgj0:ULnUeH1Pkhg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=MRGdsf-bgj0:ULnUeH1Pkhg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/MRGdsf-bgj0" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2011/01/24/in-a-new-world-my-new-job-and-coming-to.aspx</guid>
            <pubDate>Mon, 24 Jan 2011 09:57:05 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2011/01/24/in-a-new-world-my-new-job-and-coming-to.aspx#feedback</comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1344.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2011/01/24/in-a-new-world-my-new-job-and-coming-to.aspx</feedburner:origLink></item>
        <item>
            <title>Best Practices for .NET developers</title>
            <category>.NET</category>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/wPVHVC9KB54/best-practices-for-.net-developers.aspx</link>
            <description>&lt;p&gt;This is something I'm doing for my team at work...thought you may like a look / comment etc...&lt;/p&gt;  &lt;h3&gt;Know the SOLID principles…&lt;/h3&gt;  &lt;p&gt;See &lt;a href="http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod"&gt;http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod&lt;/a&gt; (the first 5). These are fundamental principles for good OO software design, know them…love them!&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;If you don’t need it…delete it!&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;As for Code Comments below, never check in an Excluded Class to the source control system. It adds noise and is a great way to have hard to trace exceptions if they’re accidentally re-included.&lt;/p&gt;  &lt;h3&gt;Code comments&lt;/h3&gt;  &lt;p&gt;I know it’s in the policy document but to be honest no-one uses generated docs when tests are a better alternative for learning code. &lt;/p&gt;  &lt;p&gt;Code comments should only be used to clarify complex algorithms, apart from that they just add cruft to code and make it harder to read. Method / parameter names should be descriptive (I frankly don’t care how long they are, that’s what intellisense is for!). If you can’t work out what a method does from its name…rename it. Or if a method does more stuff than you can reasonably fit in a name, you need to refactor the method.&lt;/p&gt;  &lt;h3&gt;Keep classes compact&lt;/h3&gt;  &lt;p&gt;No hard and fast rule here but if you’re &amp;gt;200 lines in a single class think seriously whether you need to refactor. If you follow rule 1 of SOLID (Single Responsibility Principle) then this should rarely happen.&lt;/p&gt;  &lt;h3&gt;Keep names meaningful&lt;/h3&gt;  &lt;p&gt;There are, no prizes for being terse…the more readable your code, the easier it is for you and others to find bugs.&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Use ‘var’ instead of the type name where appropriate. &lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;In general it’s both neater and increases code readability to replace an often lengthy type name with the ‘var’ keyword. The main counterpoint to this is when the return type of an operation is not obvious from the name of the method / context.&lt;/p&gt;  &lt;p&gt;Instead of: &lt;/p&gt;  &lt;p&gt;StringBuilder sb = new StringBuilder(256);    &lt;br /&gt;UTF8Encoding e = new UTF8Encoding();     &lt;br /&gt;MD5CryptoServiceProvider md5 = new MD5CryptoServiceProvider();&lt;/p&gt;  &lt;p&gt;We’d end up with this&lt;/p&gt;  &lt;p&gt;var sb = new StringBuilder(256);    &lt;br /&gt;var e = new UTF8Encoding();     &lt;br /&gt;var md5 = new MD5CryptoServiceProvider();&lt;/p&gt; &lt;strong&gt;&lt;em /&gt;&lt;/strong&gt;  &lt;h3&gt;&lt;strong&gt;Use the ‘as’ operator when casting reference types&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;The ‘as’ operator avoids runtime exceptions (e.g., (string)foo[“bar”] could well throw an exception), in addition it is far more performant that doing an ‘is’ followed by an explcit cast.&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Prefer enums over bools when they are used as return types from methods.&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;Enumerators make your code more readable (e.g. returning the value Car.Red from is CarColor rather returning true from the method IsCarRed) , they also make it far easier to extend code later on (true and false being rather limiting…)&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Exceptions should only be used to indicate Technical Errors&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;Exceptions in .NET are valuable and when used well are a great feature. However, they should never be used as a tool in normal programmatic flow, only when an object does not perform an operation according to its specification / interface should an exception be returned.&lt;/p&gt; &lt;o:p /&gt;  &lt;h3&gt;Never catch an exception you can’t do something with&lt;/h3&gt;  &lt;p&gt;Unless you actually do something with an exception, let it bubble up to somewhere which can do something (even if just reporting it to the user)&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Use nullable types sparingly&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;Nullable types encourage optional parameters…optional parameters encourage branching within methods and reduce testability. Avoid them.&lt;/p&gt;  &lt;h3&gt;Never call the GC manually&lt;/h3&gt;  &lt;p&gt;It’s smarter than you (oh, EXCEPT if you’re using unmanaged objects)&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Always use generic collection types over their non-generic ancestors&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;The generic collections are faster, avoid boxing and are basically cooler&lt;/p&gt;  &lt;p&gt;The same applies to the new Concurrent collections when multithreading in 4.&lt;/p&gt;  &lt;h3&gt;Use the TPL&lt;/h3&gt;  &lt;p&gt;In .NET 4 when using concurrency prefer the new TPL &lt;a href="http://msdn.microsoft.com/en-us/library/dd460717.aspx"&gt;http://msdn.microsoft.com/en-us/library/dd460717.aspx&lt;/a&gt; functions over managing threads ‘by hand’&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Prefer simplicity over more complex language features&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;Keeping your code simple to follow is critical to making changes easy and relatively low risk, one of the simplest ways to achieve this is to keep your code as transparent and simple to follow as you can. &lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Write, Test, Refactor, Test&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;Well factored code is easier to read, easier to change and easier to debug…A great test for well factored code is the ‘Single Responsibility Principal’, each method should really only perform a single operation on an object (for example, a single method should never both update and delete, or compress and save to disk).&lt;/p&gt;  &lt;p&gt;· Avoid branching within methods    &lt;br /&gt;· Where you can avoid recursive methods&lt;/p&gt;  &lt;h3&gt;Avoid Regions&lt;/h3&gt;  &lt;p&gt;If you can’t navigate through a single class file without collapsing sections of the code then your class is almost certainly in need of refactoring. &lt;/p&gt;  &lt;p&gt;Regions add noise and make it harder to read code. &lt;/p&gt;  &lt;p&gt;Only place they can be valuable is with long test classes…&lt;/p&gt;  &lt;h3&gt;Avoid Singletons&lt;/h3&gt;  &lt;p&gt;They mostly avoid concurrency issues at the expense of performance...there's almost always a better way.&lt;/p&gt;  &lt;h3&gt;Use Conditional Statements and Conditional Directives&lt;/h3&gt;  &lt;p&gt;When used properly, Conditional Debug Statements and conditional directives such as those below can be extremely useful in adding extra information to help you debug apps:&lt;/p&gt;  &lt;p&gt;#if DEBUG    &lt;br /&gt;…     &lt;br /&gt;#endif&lt;/p&gt;  &lt;p&gt;and&lt;/p&gt;  &lt;p&gt;[Conditional(“DEBUG”)]&lt;!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --&gt;&lt;/p&gt;  &lt;p&gt;The main advantage of this method of adding additional debug information is that they are not output when the code is compiled in release mode.&lt;/p&gt;  &lt;h3&gt;If you DO use nullable types NEVER cast directly to the non nullable form&lt;/h3&gt;  &lt;p&gt;Again, this is a potential source of runtime exceptions. Instead, always use the .GetValueOrDefault() method and test for the default value (if necessary) before trying to use the value.&lt;/p&gt;  &lt;h3&gt;Avoid using the ‘this.’ Keyword&lt;/h3&gt;  &lt;p&gt;If your naming scheme is correct, you should never have to use ‘this.’ to specify that an object is local to your class.&lt;/p&gt;&lt;img src="http://mostlylucid.net/aggbug/1343.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/7_7HXetyVLcq9Gpa1ZbiduEdong/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/7_7HXetyVLcq9Gpa1ZbiduEdong/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/7_7HXetyVLcq9Gpa1ZbiduEdong/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/7_7HXetyVLcq9Gpa1ZbiduEdong/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=wPVHVC9KB54:zedBrz-qH3U:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=wPVHVC9KB54:zedBrz-qH3U:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=wPVHVC9KB54:zedBrz-qH3U:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=wPVHVC9KB54:zedBrz-qH3U:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=wPVHVC9KB54:zedBrz-qH3U:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=wPVHVC9KB54:zedBrz-qH3U:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/wPVHVC9KB54" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2011/01/18/best-practices-for-.net-developers.aspx</guid>
            <pubDate>Tue, 18 Jan 2011 13:46:44 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2011/01/18/best-practices-for-.net-developers.aspx#feedback</comments>
            <slash:comments>19</slash:comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1343.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2011/01/18/best-practices-for-.net-developers.aspx</feedburner:origLink></item>
        <item>
            <title>Essential Books For Pretty Good .NET Developers (IN DEVELOPMENT, SUGGEST MORE!)</title>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/cy6hzuXXXuI/essential-books-for-pretty-good-.net-developers-in-development-suggest.aspx</link>
            <description>&lt;p&gt;Ok, so it will have a strong web programming bias! This list is different to most others, I’m going to assume you basically know how to code in .NET enough to get a senior developer job in most companies. From a very rough poll I’m also going to assume a fair number of you don’t have strong University / College CS / Software Engineering backgrounds (I don’t). These are the books that over the years I’ve found useful in filling in / updating bits of my development brain.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; When it comes down to it, this is MY list…I realize there’s some books you just can’t believe aren’t in the list. This is either because I just don’t think  they make the cut (too dated like Code Complete / Rapid Development) or too ‘daily textbook’ like the JavaScript Bible / Programming C#. Feel free to argue / post mini-reviews of books you feel strongly about in the comments (I JUST won’t know some of them and that’s good too!). &lt;/p&gt;  &lt;h2&gt;Design / General Practice&lt;/h2&gt;  &lt;ol&gt;   &lt;li&gt;Algorithms in a Nutshell &lt;/li&gt;    &lt;li&gt;Applying Domain Driven Design and Patterns – with examples in C# &lt;/li&gt;    &lt;li&gt;Agile Principles and Practices in C# &lt;/li&gt;    &lt;li&gt;Patterns of Enterprise Application Architecture &lt;/li&gt;    &lt;li&gt;Working Effectively With Legacy Code &lt;/li&gt;    &lt;li&gt;Domain-Driven Design: Tackling Complexity in the Heart of Software &lt;/li&gt; &lt;/ol&gt;  &lt;h2&gt;.NET – go deep!&lt;/h2&gt;  &lt;ol&gt;   &lt;li&gt;The CLR via C# (3rd Edition)&lt;/li&gt;    &lt;li&gt;Advanced .NET Debugging (NOT READ THIS YET, PLEASE REVIEW FOR ME!)&lt;/li&gt; &lt;/ol&gt;  &lt;h2&gt;TDD, learn, master!&lt;/h2&gt;  &lt;ol&gt;   &lt;li&gt;Test Driven Development By Example &lt;/li&gt;    &lt;li&gt;The Art Of Unit Testing &lt;/li&gt;    &lt;li&gt;xUnit Test Patterns : Refactoring Test Code &lt;/li&gt; &lt;/ol&gt;  &lt;h1&gt;The Javascript Triumvirate…you know the syntax, but want to get yourself to godlike status &lt;img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://www.mostlylucid.net/Images/Essential-Books-For-Prett.NET-Developers_9267/wlEmoticon-smile.png" /&gt;&lt;/h1&gt;  &lt;ol&gt;   &lt;li&gt;Pro Javascript Techniques &lt;/li&gt;    &lt;li&gt;Javascript: The Good Parts &lt;/li&gt;    &lt;li&gt;Pro Javascript Design Patterns &lt;/li&gt;    &lt;li&gt;Even Faster Web Sites: Performance Best Practices for Web Developers (previous book is in the next section…this one focuses on JS perf / techniques)&lt;/li&gt;  &lt;/ol&gt;  &lt;h2&gt;CSS / HTML&lt;/h2&gt;  &lt;ol&gt;   &lt;li&gt;Pro CSS and HTML Design Patterns &lt;/li&gt;    &lt;li&gt;CSS: The Missing Manual &lt;/li&gt;    &lt;li&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/li&gt; &lt;/ol&gt;&lt;img src="http://mostlylucid.net/aggbug/1342.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/MzN6SLmMRKMNhd8b66I2Qal3sm4/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/MzN6SLmMRKMNhd8b66I2Qal3sm4/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/MzN6SLmMRKMNhd8b66I2Qal3sm4/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/MzN6SLmMRKMNhd8b66I2Qal3sm4/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=cy6hzuXXXuI:7MWmw0V7Z6s:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=cy6hzuXXXuI:7MWmw0V7Z6s:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=cy6hzuXXXuI:7MWmw0V7Z6s:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=cy6hzuXXXuI:7MWmw0V7Z6s:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=cy6hzuXXXuI:7MWmw0V7Z6s:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=cy6hzuXXXuI:7MWmw0V7Z6s:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/cy6hzuXXXuI" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2010/10/30/essential-books-for-pretty-good-.net-developers-in-development-suggest.aspx</guid>
            <pubDate>Sat, 30 Oct 2010 09:34:10 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2010/10/30/essential-books-for-pretty-good-.net-developers-in-development-suggest.aspx#feedback</comments>
            <slash:comments>14</slash:comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1342.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2010/10/30/essential-books-for-pretty-good-.net-developers-in-development-suggest.aspx</feedburner:origLink></item>
        <item>
            <title>Updated Resume link&amp;hellip;</title>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/M73C0l8rD8M/updated-resume-linkhellip.aspx</link>
            <description>&lt;p&gt;If you want my CV / Resume..here it is….&lt;a href="http://dl.dropbox.com/u/3528954/Scott%20Galloway%20Resume.docx" target="_blank"&gt;here.&lt;/a&gt;&lt;/p&gt;&lt;img src="http://mostlylucid.net/aggbug/1341.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/YCmDhM-QS1vc3NK2O-PJHbe6iIU/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/YCmDhM-QS1vc3NK2O-PJHbe6iIU/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/YCmDhM-QS1vc3NK2O-PJHbe6iIU/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/YCmDhM-QS1vc3NK2O-PJHbe6iIU/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=M73C0l8rD8M:WEwm3BFe7YE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=M73C0l8rD8M:WEwm3BFe7YE:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=M73C0l8rD8M:WEwm3BFe7YE:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=M73C0l8rD8M:WEwm3BFe7YE:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=M73C0l8rD8M:WEwm3BFe7YE:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=M73C0l8rD8M:WEwm3BFe7YE:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/M73C0l8rD8M" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2010/10/07/updated-resume-linkhellip.aspx</guid>
            <pubDate>Thu, 07 Oct 2010 13:20:13 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2010/10/07/updated-resume-linkhellip.aspx#feedback</comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1341.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2010/10/07/updated-resume-linkhellip.aspx</feedburner:origLink></item>
        <item>
            <title>LOOKING FOR WORK!</title>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/vAQbmJ8BUyw/looking-for-work.aspx</link>
            <description>&lt;p&gt;Yup, looking for work again…quick summary of work experience below…&lt;/p&gt;  &lt;p&gt; &lt;/p&gt;  &lt;p&gt;01/2010 - 10/2010 - &lt;b&gt;&lt;a href="http://cozwecan.com/"&gt;cozwecan.com&lt;/a&gt;&lt;/b&gt;     &lt;br /&gt;&lt;em&gt;Developer      &lt;br /&gt;&lt;/em&gt;Was tasked to build several products for this small startup ranging from a WPF image management client through to a jQuery, FubuMVC, RavenDB based website (all bleeding edge technologies). &lt;/p&gt;  &lt;p&gt;10/2009 - 12/2009 -&lt;b&gt; Chunk, Glasgow, Scotland&lt;/b&gt;     &lt;br /&gt;&lt;em&gt;Development Lead&lt;/em&gt;&lt;em /&gt;     &lt;br /&gt;Led a small development team of &lt;a href="http://asp.net/"&gt;ASP.NET&lt;/a&gt; and Flash developers building sites for high profile clients. Lasted a short time as the company wasn't really a match to my skillset.     &lt;br /&gt;&lt;/p&gt; &lt;em /&gt;  &lt;p&gt;· 01/2007-10/2009 – &lt;strong&gt;Microsoft Corporation, Redmond, WA&lt;/strong&gt;     &lt;br /&gt;&lt;em&gt;Program Manager, &lt;a href="http://asp.net/"&gt;ASP.NET&lt;/a&gt; Team / Project Server Team&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;I was responsible for the design of Product features; these included the design of all WebForms features in &lt;a href="http://asp.net/"&gt;ASP.NET&lt;/a&gt; 4 and potential future releases. I was also responsible for managing the release process of a wide range of products including&lt;a href="http://asp.net/"&gt;ASP.NET&lt;/a&gt; MVC.&lt;/p&gt;  &lt;p&gt;· 06/2005-01/2007 – &lt;strong&gt;Microsoft Limited, Reading, UK&lt;/strong&gt;     &lt;br /&gt;&lt;em&gt;Application Development Consultant      &lt;br /&gt;&lt;/em&gt;As an ADC I advised a number of businesses on the improvement of both application design and architecture as well as improving development practices. I specialized in &lt;a href="http://asp.net/"&gt;ASP.NET&lt;/a&gt; and Sharepoint as well as in the performance and scalability of enterprise web applications.&lt;em&gt;      &lt;br /&gt;&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;· 02/2003-06/2005 – &lt;strong&gt;Storm ID Ltd, Edinburgh, UK&lt;/strong&gt;     &lt;br /&gt;&lt;em&gt;Senior Software Architect      &lt;br /&gt;&lt;/em&gt;At StormId I was involved in the full lifecycle development of a number of customer facing Web Sites. These sites were both &lt;a href="http://asp.net/"&gt;ASP.NET&lt;/a&gt; as well as classic ASP and SQL Server based.&lt;em&gt;      &lt;br /&gt;&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;· 03/2002-02/2003 – &lt;strong&gt;VisitScotland.com, Edinburgh, UK&lt;/strong&gt;     &lt;br /&gt;&lt;em&gt;Technical Architect (management responsibilities)      &lt;br /&gt;&lt;/em&gt;Whilst at VisitScotland.com I oversaw the migration of a Java based Corba architecture to a J2EE / JSP and patterns based system.&lt;em&gt; &lt;/em&gt;Additionally I mentored a team of classic ASP developers in the building of a number of high scalability customer facing websites.&lt;em&gt;      &lt;br /&gt;&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;· 06/2000-03/2002 – &lt;strong&gt;GlobalFarmers.com, Edinburgh, UK&lt;/strong&gt;     &lt;br /&gt;&lt;em&gt;Internet Development Manager(management responsibilities)      &lt;br /&gt;&lt;/em&gt;Globalfarmers.com was the largest internet startup in Scottish history. I was brought in to bring development back on track with a third party supplier. The system was built using J2EE and an OODMBS, I also developed a subsidiary PHP based system.&lt;em&gt;      &lt;br /&gt;&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;· 02/1999-06/2000 – &lt;strong&gt;BlackID, Glasgow, UK&lt;/strong&gt;     &lt;br /&gt;&lt;em&gt;Web Developer      &lt;br /&gt;&lt;/em&gt;At BlackID I worked on the server side elements of web sites for huge customers such as Burger King.&lt;/p&gt;&lt;img src="http://mostlylucid.net/aggbug/1340.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/ah1j5u-629eHdlZ7yKbD253cPZU/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/ah1j5u-629eHdlZ7yKbD253cPZU/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/ah1j5u-629eHdlZ7yKbD253cPZU/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/ah1j5u-629eHdlZ7yKbD253cPZU/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=vAQbmJ8BUyw:VGWbZ57WZX0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=vAQbmJ8BUyw:VGWbZ57WZX0:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=vAQbmJ8BUyw:VGWbZ57WZX0:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=vAQbmJ8BUyw:VGWbZ57WZX0:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=vAQbmJ8BUyw:VGWbZ57WZX0:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=vAQbmJ8BUyw:VGWbZ57WZX0:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/vAQbmJ8BUyw" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2010/10/07/looking-for-work.aspx</guid>
            <pubDate>Thu, 07 Oct 2010 09:57:57 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2010/10/07/looking-for-work.aspx#feedback</comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1340.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2010/10/07/looking-for-work.aspx</feedburner:origLink></item>
        <item>
            <title>HTTP Optimization the easy way: Part 1, how do I know?</title>
            <category>Http Optimization</category>
            <category>YSlow!</category>
            <category>Firebug</category>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/OkwUWAbdzvY/http-optimization-the-easy-way-part-1-how-do-i.aspx</link>
            <description>&lt;p&gt;Modern websites necessarily make a lot of requests for resources back to the server.  Through books like those by &lt;a href="http://www.amazon.co.uk/Steve-Souders/e/B001I9TVJS/ref=ntt_athr_dp_pel_1"&gt;Steve Souders&lt;/a&gt; we’ve become increasingly aware that each of these requests causes a delay in whatever it is your user has requested being downloaded and displayed. If you don’t have both of Steve’s books, get them…and spend an hour or two going through &lt;a href="http://stevesouders.com/"&gt;his site&lt;/a&gt;…it’s awesome stuff. The term commonly used for the various efforts to reduce the number of requests made to a server is HTTP Optimization. &lt;/p&gt;  &lt;p&gt;This is a topic I’ve been investigating / playing with for quite a while (e.g., &lt;a href="http://www.mostlylucid.co.uk/archive/2009/04/24/1318.aspx"&gt;CSS Combiner / Minifier ASP.NET Control&lt;/a&gt;) and in fact one of the projects I worked on shortly before leaving the ASP.NET team morphed into the &lt;a href="http://aspnet.codeplex.com/releases/view/50869"&gt;Sprite and Image Optimization Framework&lt;/a&gt; recently released as a preview by the ASP.NET team. What I wanted to do with this post wasn’t to go over these techniques in any great detail…rather it’s to cover some of the stuff I currently do when developing sites. &lt;/p&gt;  &lt;p&gt;In short there’s x techniques you can realistically use to reduce / improve the performance of a web page loading:&lt;/p&gt;  &lt;p&gt;1. Make the server code run REALLY fast…either by buying big servers, writing really slick code or by caching everything so it basically works like a static (plain HTML) site…&lt;/p&gt;  &lt;p&gt;2. Make your web page really plain…no CSS / JS / Images…just plain old HTML; single request is always quickest – this is of course not usually acceptable!&lt;/p&gt;  &lt;p&gt;3. Radically reduce the number of requests made to the server. &lt;/p&gt;  &lt;p&gt;4. Make each request deliver more content for less bandwidth.&lt;/p&gt;  &lt;p&gt;Of these I’m going to take a closer look at the last two in more detail. &lt;/p&gt;  &lt;p&gt;The very first thing you need to do when trying to work out how to fix page loading issues is to actually identify those issues! &lt;/p&gt;  &lt;p&gt;I tend to use &lt;a href="http://www.mozilla.com/en-US/"&gt;Firefox&lt;/a&gt; when I’m looking at these issues; mainly because it has an amazingly powerful tool in &lt;a href="http://getfirebug.com/"&gt;Firebug&lt;/a&gt; for debugging and investigating pretty much anything a web site does on the client. &lt;/p&gt;  &lt;p&gt;One of the most useful tabs in Firebug is the Net tab…in the image below you can see the result when I ran it with the home page of the ASP.NET site with &lt;strong&gt;caching disabled.&lt;/strong&gt; I’ll use this page to point out some of the optimizations they’ve (recently!) made to improve loading times for the home page of the site.&lt;/p&gt;  &lt;p&gt; &lt;a href="http://www.mostlylucid.net/Images/HTTPOptimizationtheeasywaymakeitloadquic_11D93/FirebugInitial.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="FirebugInitial" border="0" alt="FirebugInitial" src="http://www.mostlylucid.net/Images/HTTPOptimizationtheeasywaymakeitloadquic_11D93/FirebugInitial_thumb.png" width="756" height="609" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;What you can see in the image above is a bunch of rows containing GET and POST requests (we'll, only one POST to a tracking page). Each of these requests represents a single request back to the server. In fact if I roll my mouse over one of these rows I get more information which provides a legend for what each of the colors means:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mostlylucid.net/Images/HTTPOptimizationtheeasywaymakeitloadquic_11D93/popout.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="popout" border="0" alt="popout" src="http://www.mostlylucid.net/Images/HTTPOptimizationtheeasywaymakeitloadquic_11D93/popout_thumb.png" width="244" height="176" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p /&gt;  &lt;p&gt;I’ll come back to this page in more detail later…&lt;/p&gt;  &lt;p&gt;Another great tool for identifying issues with page loading is &lt;a href="http://developer.yahoo.com/yslow/"&gt;YSlow&lt;/a&gt;, in fact if you look at the &lt;a href="http://getfirebug.com/"&gt;Firebug&lt;/a&gt; page above you’ll see that &lt;a href="http://developer.yahoo.com/yslow/"&gt;YSlow&lt;/a&gt; has it’s own tab! What YSlow does is report on issues with your pages in a very direct way:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mostlylucid.net/Images/HTTPOptimizationtheeasywaymakeitloadquic_11D93/YSlow1.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="YSlow1" border="0" alt="YSlow1" src="http://www.mostlylucid.net/Images/HTTPOptimizationtheeasywaymakeitloadquic_11D93/YSlow1_thumb.png" width="607" height="431" /&gt;&lt;/a&gt;  &lt;/p&gt;  &lt;p&gt;As you can see, YSlow gives a grade for a number of specific items which have proven to make a difference in page load time. Rolling over each one will tell you why they’re important and give pointers. In fact, it even gives you links to tools which can help resolve these problems!&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mostlylucid.net/Images/HTTPOptimizationtheeasywaymakeitloadquic_11D93/YSlow3.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="YSlow3" border="0" alt="YSlow3" src="http://www.mostlylucid.net/Images/HTTPOptimizationtheeasywaymakeitloadquic_11D93/YSlow3_thumb.png" width="772" height="282" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;So, great…we can now see what problems we have…and even have a way to fix them. However, what it you could avoid them happening in the first place?&lt;/p&gt;  &lt;p&gt;In part 2 of this post I’ll show you what you can do (and what I actually do) to avoid these problems in the first place. I’ll focus on using these techniques in Visual Studio and how you can easily incorporate some practices into your own development to get fast, fluid web pages…&lt;/p&gt;&lt;img src="http://mostlylucid.net/aggbug/1339.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/zDnLaSHJx4kcmM3nu2mDqPmkch4/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/zDnLaSHJx4kcmM3nu2mDqPmkch4/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/zDnLaSHJx4kcmM3nu2mDqPmkch4/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/zDnLaSHJx4kcmM3nu2mDqPmkch4/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=OkwUWAbdzvY:X1K7GspxEk0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=OkwUWAbdzvY:X1K7GspxEk0:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=OkwUWAbdzvY:X1K7GspxEk0:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=OkwUWAbdzvY:X1K7GspxEk0:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=OkwUWAbdzvY:X1K7GspxEk0:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=OkwUWAbdzvY:X1K7GspxEk0:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/OkwUWAbdzvY" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2010/08/30/http-optimization-the-easy-way-part-1-how-do-i.aspx</guid>
            <pubDate>Mon, 30 Aug 2010 19:24:52 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2010/08/30/http-optimization-the-easy-way-part-1-how-do-i.aspx#feedback</comments>
            <slash:comments>2</slash:comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1339.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2010/08/30/http-optimization-the-easy-way-part-1-how-do-i.aspx</feedburner:origLink></item>
        <item>
            <title>Back to posting this weekend&amp;hellip;</title>
            <category>RavenDB</category>
            <category>FubuMVC</category>
            <category>Spark</category>
            <category>JQuery</category>
            <category>DotNetOpenAuth</category>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/eI9ez_6UPw8/back-to-posting-this-weekendhellip.aspx</link>
            <description>&lt;p&gt;Promising to do this for a while. I only really like to post about new stuff..others can cover old stuff in detail. Right now I’m learning:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.google.co.uk/url?sa=t&amp;amp;source=web&amp;amp;cd=2&amp;amp;ved=0CB4QFjAB&amp;amp;url=http%3A%2F%2Fwww.fubumvc.com%2F&amp;amp;ei=skd4TNOrMsbT4waI8ZmxBg&amp;amp;usg=AFQjCNHTVxZi4A5l5X2CynZUg65Psg-MkQ"&gt;FubuMVC&lt;/a&gt;: a kind of super flexible, advanced version of an ASP.NET MVC framework.  Has proven challenging to learn but really worthwhile.&lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.ravendb.net/"&gt;RavenDB&lt;/a&gt;: fantastic, document oriented database. Fits in really well with web development but has some unique challenges.&lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.jquery.org"&gt;JQuery&lt;/a&gt;: far from new, but building lovely UIs with it, REALLY improving my general Javascript dev skills (a lot thanks to &lt;a href="http://www.amazon.co.uk/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742"&gt;this book&lt;/a&gt;).&lt;/li&gt;    &lt;li&gt;&lt;a href="http://sparkviewengine.com/"&gt;Spark View Engine&lt;/a&gt;:  an alternative view engine (was for ASP.NET MVC but my boss &lt;a href="http://www.twitter.com/robertthegrey"&gt;@robertthegrey&lt;/a&gt; has written a brilliant FubuMVC engine for it too!).&lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.dotnetopenauth.net/"&gt;Dotnetopenauth&lt;/a&gt; : Open Id authentication library for .NET  (&lt;a href="http://goo.gl/4qlL"&gt;this article&lt;/a&gt; was invaluable for simplifying the whole experience for me…)&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;In all, I feel like the technologies above really hit the sweet spot for me for web development for the next little while. So, I’ll write about them all. As usual, not tutorials, more hints, tips and guidelines which may help you avoid some of the learning curve I’ve had recently…&lt;/p&gt;  &lt;p&gt;Until then here’s some lovely fish to tide you over (flash so you have to visit the site to see them :)).&lt;/p&gt;  &lt;p&gt;&lt;object type="application/x-shockwave-flash" style="outline:none;" data="http://hosting.gmodules.com/ig/gadgets/file/112581010116074801021/fish.swf?up_fishColor6=F45540&amp;amp;up_fishColor7=F45540&amp;amp;up_numFish=5&amp;amp;up_fishName=Fish&amp;amp;up_fishColor8=F45540&amp;amp;up_fishColor2=F4B540&amp;amp;up_foodColor=FCB347&amp;amp;up_fishColor3=4043F4&amp;amp;up_backgroundColor=F0F7FF&amp;amp;up_fishColor10=F45540&amp;amp;up_fishColor1=000000&amp;amp;up_backgroundImage=http://&amp;amp;up_fishColor4=46F440&amp;amp;up_fishColor9=F45540&amp;amp;up_fishColor5=F45540&amp;amp;" width="300" height="200"&gt;&lt;param name="movie" value="http://hosting.gmodules.com/ig/gadgets/file/112581010116074801021/fish.swf?up_fishColor6=F45540&amp;amp;up_fishColor7=F45540&amp;amp;up_numFish=5&amp;amp;up_fishName=Fish&amp;amp;up_fishColor8=F45540&amp;amp;up_fishColor2=F4B540&amp;amp;up_foodColor=FCB347&amp;amp;up_fishColor3=4043F4&amp;amp;up_backgroundColor=F0F7FF&amp;amp;up_fishColor10=F45540&amp;amp;up_fishColor1=000000&amp;amp;up_backgroundImage=http://&amp;amp;up_fishColor4=46F440&amp;amp;up_fishColor9=F45540&amp;amp;up_fishColor5=F45540&amp;amp;" /&gt;&lt;param name="AllowScriptAccess" value="always" /&gt;&lt;param name="wmode" value="opaque" /&gt;&lt;param name="scale" value="noscale" /&gt;&lt;param name="salign" value="tl" /&gt;&lt;/object&gt;&lt;/p&gt;&lt;img src="http://mostlylucid.net/aggbug/1338.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/893zXhmkQpRAwHd2CiLjtqbhG58/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/893zXhmkQpRAwHd2CiLjtqbhG58/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/893zXhmkQpRAwHd2CiLjtqbhG58/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/893zXhmkQpRAwHd2CiLjtqbhG58/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=eI9ez_6UPw8:6kVJfP5_xQo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=eI9ez_6UPw8:6kVJfP5_xQo:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=eI9ez_6UPw8:6kVJfP5_xQo:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=eI9ez_6UPw8:6kVJfP5_xQo:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=eI9ez_6UPw8:6kVJfP5_xQo:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=eI9ez_6UPw8:6kVJfP5_xQo:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/eI9ez_6UPw8" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2010/08/27/back-to-posting-this-weekendhellip.aspx</guid>
            <pubDate>Fri, 27 Aug 2010 23:26:43 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2010/08/27/back-to-posting-this-weekendhellip.aspx#feedback</comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1338.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2010/08/27/back-to-posting-this-weekendhellip.aspx</feedburner:origLink></item>
        <item>
            <title>Handy indexes for versioning with RavenDB</title>
            <category>.NET</category>
            <category>RavenDB</category>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/gOYnuluiHg8/handy-indexes-for-versioning-with-ravendb.aspx</link>
            <description>&lt;p&gt;Mainly for me to remember this but if you’re using the excellent &lt;a href="http://www.ravendb.net/bundles/versioning"&gt;Versioning bundle for RavenDB&lt;/a&gt; then you’ll find you quickly need to work out a way to get the latest version of a document if querying on any field other than ID (I *believe* ID actually only gets the latest one). The little index definitions below do just that (the secome one is just adding another field to the map so I can query by that…useful example)…&lt;/p&gt;  &lt;pre class="csharpcode"&gt;documentStore.DatabaseCommands.PutIndex(&lt;span class="str"&gt;"CurrentVersion"&lt;/span&gt;,
                                                        &lt;span class="kwrd"&gt;new&lt;/span&gt; IndexDefinition
                                                            {
                                                                Map = &lt;span class="str"&gt;@"from doc in docs
                                                                              where
                                                                                  doc["&lt;/span&gt;&lt;span class="str"&gt;"@metadata"&lt;/span&gt;&lt;span class="str"&gt;"][
                                                                                      "&lt;/span&gt;&lt;span class="str"&gt;"Raven-Document-Revision-Status"&lt;/span&gt;&lt;span class="str"&gt;"] !=
                                                                                  null &amp;amp;&amp;amp;
                                                                                  doc["&lt;/span&gt;&lt;span class="str"&gt;"@metadata"&lt;/span&gt;&lt;span class="str"&gt;"][
                                                                                      "&lt;/span&gt;&lt;span class="str"&gt;"Raven-Document-Revision-Status"&lt;/span&gt;&lt;span class="str"&gt;"] ==
                                                                                  "&lt;/span&gt;&lt;span class="str"&gt;"Current"&lt;/span&gt;&lt;span class="str"&gt;"
                                                                              select new {doc};"&lt;/span&gt;
                                                          },&lt;span class="kwrd"&gt;true&lt;/span&gt;);


                documentStore.DatabaseCommands.PutIndex(&lt;span class="str"&gt;"CurrentImageVersionBySlug"&lt;/span&gt;,
                                        &lt;span class="kwrd"&gt;new&lt;/span&gt; IndexDefinition
                                        {
                                            Map = &lt;span class="str"&gt;@"from doc in docs
                                                                              where
doc["&lt;/span&gt;&lt;span class="str"&gt;"@metadata"&lt;/span&gt;&lt;span class="str"&gt;"]["&lt;/span&gt;&lt;span class="str"&gt;"Raven-Entity-Name"&lt;/span&gt;&lt;span class="str"&gt;"] =="&lt;/span&gt;&lt;span class="str"&gt;"Images"&lt;/span&gt;&lt;span class="str"&gt;"
&amp;amp;&amp;amp; doc["&lt;/span&gt;&lt;span class="str"&gt;"Slug"&lt;/span&gt;&lt;span class="str"&gt;"]!=null &amp;amp;&amp;amp;
                                                                                  doc["&lt;/span&gt;&lt;span class="str"&gt;"@metadata"&lt;/span&gt;&lt;span class="str"&gt;"][
                                                                                      "&lt;/span&gt;&lt;span class="str"&gt;"Raven-Document-Revision-Status"&lt;/span&gt;&lt;span class="str"&gt;"] !=
                                                                                  null &amp;amp;&amp;amp;
                                                                                  doc["&lt;/span&gt;&lt;span class="str"&gt;"@metadata"&lt;/span&gt;&lt;span class="str"&gt;"][
                                                                                      "&lt;/span&gt;&lt;span class="str"&gt;"Raven-Document-Revision-Status"&lt;/span&gt;&lt;span class="str"&gt;"] ==
                                                                                  "&lt;/span&gt;&lt;span class="str"&gt;"Current"&lt;/span&gt;&lt;span class="str"&gt;"
                                                                              select new {Slug=doc["&lt;/span&gt;&lt;span class="str"&gt;"Slug"&lt;/span&gt;&lt;span class="str"&gt;"]};"&lt;/span&gt;
                                        ,  } , &lt;span class="kwrd"&gt;true&lt;/span&gt;);&lt;/pre&gt;
&lt;style type="text/css"&gt;&lt;![CDATA[
.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }]]&gt;&lt;/style&gt;&lt;img src="http://mostlylucid.net/aggbug/1337.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/3sndX8hewnjP9NVeV2xJ0CA0gsM/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/3sndX8hewnjP9NVeV2xJ0CA0gsM/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/3sndX8hewnjP9NVeV2xJ0CA0gsM/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/3sndX8hewnjP9NVeV2xJ0CA0gsM/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=gOYnuluiHg8:RwIINg3oAQk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=gOYnuluiHg8:RwIINg3oAQk:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=gOYnuluiHg8:RwIINg3oAQk:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=gOYnuluiHg8:RwIINg3oAQk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=gOYnuluiHg8:RwIINg3oAQk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=gOYnuluiHg8:RwIINg3oAQk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/gOYnuluiHg8" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2010/07/12/handy-indexes-for-versioning-with-ravendb.aspx</guid>
            <pubDate>Mon, 12 Jul 2010 13:59:40 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2010/07/12/handy-indexes-for-versioning-with-ravendb.aspx#feedback</comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1337.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2010/07/12/handy-indexes-for-versioning-with-ravendb.aspx</feedburner:origLink></item>
        <item>
            <title>Of the beginning&amp;hellip;</title>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/KPCTGBYUvWo/of-the-beginninghellip.aspx</link>
            <description>&lt;br /&gt;  &lt;p&gt;So, I’m not dead! Have been busy moving house, getting two new kittens (Tycho and Cozmo) and bascially settling into my new existence.&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:5737277B-5D6D-4f48-ABFC-DD9C333F4C5D:c0e5a3a6-17c8-46fa-a6d4-abe3e83b163f" class="wlWriterEditableSmartContent"&gt;&lt;div&gt;&lt;object width="425" height="355"&gt;&lt;param name="movie" value="http://www.youtube.com/v/pB3HHrd3Qis&amp;amp;hl=en_US&amp;amp;fs=1?rel=0&amp;amp;color1=0x3a3a3a&amp;amp;color2=0x999999&amp;amp;hl=en" /&gt;&lt;embed src="http://www.youtube.com/v/pB3HHrd3Qis&amp;amp;hl=en_US&amp;amp;fs=1?rel=0&amp;amp;color1=0x3a3a3a&amp;amp;color2=0x999999&amp;amp;hl=en" type="application/x-shockwave-flash" width="425" height="355" /&gt;&lt;/object&gt;&lt;/div&gt;&lt;/div&gt;  &lt;p&gt; &lt;/p&gt;  &lt;p&gt;I HAVE also been getting back down to some serious coding. LOVING &lt;a href="http://ravendb.net/"&gt;RavenDB&lt;/a&gt; (I seriously think it is THE .NET database of choice now), getting deep an dirty with some awesome HTTP optimization techniques…which I really do have to blog about soon! &lt;/p&gt;  &lt;p&gt;My first pointers to HTTP optimization greateness are:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.weirdlover.com/2010/05/31/chirpy-has-a-new-home-and-new-features/"&gt;Chirpy&lt;/a&gt;: a brilliant little VS add-in (check the &lt;a href="http://chirpy.codeplex.com/"&gt;Codeplex&lt;/a&gt; page for the VS 2010 version) , compresses and combines your CSS and JS files as well as lets you use &lt;a href="http://www.dotlesscss.com/"&gt;.less&lt;/a&gt; syntax easily inside VS (kinda a programmatic extension to CSS allowing for cleaner, less repetitive style definitions).&lt;/p&gt;  &lt;p&gt;&lt;a href="http://labjs.com/"&gt;LabJS&lt;/a&gt;: a bit more complex but really stunning little bit of JS which lets you seriously optimize your JS loading…JS becomes non-blocking and all loads asynchronously (see &lt;a href="http://labjs.com/description.php"&gt;http://labjs.com/description.php&lt;/a&gt; for more details)! Here’s how I use this in one of the &lt;a href="http://blog.cozwecan.com"&gt;cozwecan&lt;/a&gt; sites (note, I also use LabJS to do a &lt;a href="http://happyworm.com/blog/tag/labjs/"&gt;‘load from CDN with fallback’ behavior&lt;/a&gt; which I have yet to see fully documented) … &lt;/p&gt;  &lt;pre class="csharpcode"&gt;&lt;span class="kwrd"&gt;var&lt;/span&gt; scriptModifier = &lt;span class="str"&gt;""&lt;/span&gt;;


$LAB
.setGlobalDefaults({ AllowDuplicates: &lt;span class="kwrd"&gt;false&lt;/span&gt; });
$LAB
   .script({ src: &lt;span class="str"&gt;"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"&lt;/span&gt;,
       alt: &lt;span class="str"&gt;"/Scripts/jquery.1.4.2.min.js"&lt;/span&gt;,
       test: &lt;span class="str"&gt;"jQuery"&lt;/span&gt;
   }).wait()
     .script({ src: &lt;span class="str"&gt;"http://ajax.microsoft.com/ajax/jquery.validate/1.7/jquery.validate.min.js"&lt;/span&gt;,
         alt: &lt;span class="str"&gt;"/Scripts/jquery.validate.min.js"&lt;/span&gt;,
         test: &lt;span class="str"&gt;"jQuery.validate"&lt;/span&gt;
     })
     .script(&lt;span class="str"&gt;"/Scripts/jquery.ba-bbq.min.js"&lt;/span&gt;)
     .script({ src: &lt;span class="str"&gt;"http://cdn.jquerytools.org/1.1.2/tiny/jquery.tools.min.js"&lt;/span&gt;,
         alt: &lt;span class="str"&gt;"/Scripts/jquery.tools.min.js"&lt;/span&gt;,
         test: &lt;span class="str"&gt;"jQuery.tools"&lt;/span&gt;
     })
    
    .script(&lt;span class="str"&gt;"/Scripts/jquery.easing.1.3.min.js"&lt;/span&gt;)
    .script(&lt;span class="str"&gt;"/Scripts/jquery.jnotifica.min.js"&lt;/span&gt;)

    .script(&lt;span class="str"&gt;"/Scripts/Custom/MainScripts"&lt;/span&gt; + scriptModifier + &lt;span class="str"&gt;".js"&lt;/span&gt;)
    .wait(&lt;span class="kwrd"&gt;function&lt;/span&gt; () { SetupInitialLoad(); });&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Anyway will get a blog post together eventually covering all that I’ve been up to…until then…follow me on Twitter @scottgal..late peeps!&lt;/p&gt;&lt;img src="http://mostlylucid.net/aggbug/1336.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/YrYD0S1laYvaBaohQ1cXGAABjfM/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/YrYD0S1laYvaBaohQ1cXGAABjfM/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/YrYD0S1laYvaBaohQ1cXGAABjfM/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/YrYD0S1laYvaBaohQ1cXGAABjfM/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=KPCTGBYUvWo:d39EpPcbS7g:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=KPCTGBYUvWo:d39EpPcbS7g:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=KPCTGBYUvWo:d39EpPcbS7g:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=KPCTGBYUvWo:d39EpPcbS7g:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=KPCTGBYUvWo:d39EpPcbS7g:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=KPCTGBYUvWo:d39EpPcbS7g:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/KPCTGBYUvWo" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2010/07/09/of-the-beginninghellip.aspx</guid>
            <pubDate>Fri, 09 Jul 2010 13:30:35 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2010/07/09/of-the-beginninghellip.aspx#feedback</comments>
            <slash:comments>1</slash:comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1336.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2010/07/09/of-the-beginninghellip.aspx</feedburner:origLink></item>
        <item>
            <title>Be vewy vewy quiet I&amp;rsquo;m writing WPF with MVVM</title>
            <link>http://feedproxy.google.com/~r/mostlylucid/XRDO/~3/1kmjLUQjqGk/be-vewy-vewy-quiet-irsquom-writing-wpf-with-mvvm.aspx</link>
            <description>&lt;p&gt;&lt;object data="data:application/x-silverlight-2," type="application/x-silverlight-2" width="640" height="360"&gt; &lt;param name="source" value="http://live.visitmix.com/ClientBin/players/VideoPlayer2009_03_27.xap" /&gt; &lt;param name="initParams" value="m=http://ecn.channel9.msdn.com/o9/mix/10/wmv/EX15.wmv,autostart=false,autohide=true,showembed=true, thumbnail=http://live.visitmix.com/Skins/MIX10/Styles/images/DefaultPlayerBackground.png, postid=0" /&gt; &lt;param name="background" value="#00FFFFFF" /&gt; &lt;a href="http://go.microsoft.com/fwlink/?LinkID=124807" style="text-decoration: none;"&gt; &lt;img src="http://go.microsoft.com/fwlink/?LinkId=108181" alt="Get Microsoft Silverlight" style="border-style: none" /&gt; &lt;/a&gt; &lt;/object&gt;&lt;/p&gt;  &lt;p&gt;Ok, not a catchy title but it really is what I’ve been up to for the past 3 months. As I wrote before, I’m currently working with the awesome @&lt;a href="http://www.twitter.com/RobertTheGrey"&gt;RobertTheGrey&lt;/a&gt; on a project called &lt;a href="http://blog.cozwecan.com"&gt;cozwecan&lt;/a&gt;, which is a bunch of sites set up with the aim of being an amazing independent ecommerce platform for artists (photographers to start with, in the future, who knows…). Anyway, I’ve been remiss in blogging about the amazingly cool stuff I’ve been doing (IMHO :)), using WPF with &lt;a href="http://msdn.microsoft.com/en-us/devlabs/ee794896.aspx"&gt;Reactive Extensions&lt;/a&gt;, &lt;a href="http://www.mongodb.org/"&gt;MongoDB&lt;/a&gt;, &lt;a href="http://fluidkit.codeplex.com/"&gt;FluidKit&lt;/a&gt; and of course the awesome WPF / SL MVVM framework, &lt;a href="http://www.codeplex.com/caliburn"&gt;Caliburn&lt;/a&gt; (the embedded bit aboveis the creator of Caliburn, &lt;a href="http://www.twitter.com/eisenbergeffect"&gt;@EisenbergEffect’s&lt;/a&gt; presentation on MVVM from MIX). So, just licking my wounds and getting my brain back in one piece after last year’s craziness (minor drug problem, clinical depression, car crashes, international moves etc…) and will be back to full communicative me soon enough :)&lt;/p&gt;&lt;img src="http://mostlylucid.net/aggbug/1335.aspx" width="1" height="1" /&gt;
&lt;p&gt;&lt;a href="http://feedads.g.doubleclick.net/~a/xsL7LOpGj6ApoIIbx1NetxkFIw0/0/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/xsL7LOpGj6ApoIIbx1NetxkFIw0/0/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://feedads.g.doubleclick.net/~a/xsL7LOpGj6ApoIIbx1NetxkFIw0/1/da"&gt;&lt;img src="http://feedads.g.doubleclick.net/~a/xsL7LOpGj6ApoIIbx1NetxkFIw0/1/di" border="0" ismap="true"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=1kmjLUQjqGk:KDVTdF9TlV4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=1kmjLUQjqGk:KDVTdF9TlV4:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=1kmjLUQjqGk:KDVTdF9TlV4:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=1kmjLUQjqGk:KDVTdF9TlV4:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?a=1kmjLUQjqGk:KDVTdF9TlV4:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mostlylucid/XRDO?i=1kmjLUQjqGk:KDVTdF9TlV4:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mostlylucid/XRDO/~4/1kmjLUQjqGk" height="1" width="1"/&gt;</description>
            <dc:creator>Scott Galloway</dc:creator>
            <guid isPermaLink="false">http://mostlylucid.net/archive/2010/03/20/be-vewy-vewy-quiet-irsquom-writing-wpf-with-mvvm.aspx</guid>
            <pubDate>Sat, 20 Mar 2010 23:43:48 GMT</pubDate>
            <comments>http://mostlylucid.net/archive/2010/03/20/be-vewy-vewy-quiet-irsquom-writing-wpf-with-mvvm.aspx#feedback</comments>
            <wfw:commentRss>http://mostlylucid.net/comments/commentRss/1335.aspx</wfw:commentRss>
        <feedburner:origLink>http://mostlylucid.net/archive/2010/03/20/be-vewy-vewy-quiet-irsquom-writing-wpf-with-mvvm.aspx</feedburner:origLink></item>
    </channel>
</rss>
