XML Parsing (Draft)
===================

XML (`REC-xml-20081126 <https://www.w3.org/TR/2008/REC-xml-20081126/>`__) is the intended serialization of the
`Atom <https://tools.ietf.org/html/rfc4287>`__ and `RSS <http://www.rssboard.org/rss-specification>`__ formats. As such,
SimplePie NG has been designed from the beginning with support for multiple feed serialization types.

High-Level Internals
--------------------

Internally, we use the `DOMDocument <http://php.net/manual/en/class.domdocument.php>`__ family of classes to parse the
XML data into an object. The internal XML parser is `libxml2 <http://xmlsoft.org>`__ which implements the spec, but also
has some niceties such as the ability to `recover from malformed
XML <https://secure.php.net/manual/en/class.domdocument.php#domdocument.props.recover>`__. This is a tremendous
improvement over SimplePie OG’s usage of the `XML Parser <http://php.net/manual/en/ref.xml.php>`__ functions leftover
from PHP 4.

HTML Entities
-------------

There are (generally) two kinds of entities: (a) *named* entities (e.g., ``&nbsp;``) and (b) *numeric* entities (e.g.,
``&#xA0;`` or ``&#160;``).

Most of the *named entities* defined in HTML are *not* defined in XML. This means that unless the feed author (or the
feed-generating software) is diligent about using CDATA to wrap these named entities, most XML parsers will fail. (This
was a problem that plagued SimplePie OG, and was the source of a tremendous amount of workarounds in the source code.)

SimplePie NG handles things differently. Firstly, it uses the
`DOMDocument <http://php.net/manual/en/class.domdocument.php>`__ family of classes which are higher-level than the old
XML Parser code. Secondly, since `libxml2 <http://xmlsoft.org>`__ offers a recovery bit, it will continue parsing the
document even if it encounters these kinds of errors. Thirdly, we now fetch and maintain a `canonical list of entity
mappings defined for HTML5 <https://www.w3.org/TR/html5/entities.json>`__ from the W3C, that we can use to handle
un-CDATA’d named entities in XML.

At present, this named entity handling is disabled by default for two reasons: (a) we don’t yet have enough test
coverage to help us avoid `XML External Entity <https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing>`__
vulnerabilities, and (b) because this involves us modifying the XML on the fly to insert our entity definitions (which
is slightly slower).

XML Namespaces
--------------

TBD.

XPath 1.0
---------

TBD.

.. reviewer-meta::
   :written-on: 2017-12-17
   :proofread-on: 2017-12-17
