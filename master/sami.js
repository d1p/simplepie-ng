
window.projectVersion = 'master';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:Psr" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Psr.html">Psr</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Psr_Container" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Psr/Container.html">Container</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Psr_Container_ContainerExceptionInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Container/ContainerExceptionInterface.html">ContainerExceptionInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Container_ContainerInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Container/ContainerInterface.html">ContainerInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Container_NotFoundExceptionInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Container/NotFoundExceptionInterface.html">NotFoundExceptionInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Psr_Http" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Psr/Http.html">Http</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Psr_Http_Message" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Psr/Http/Message.html">Message</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Psr_Http_Message_MessageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Http/Message/MessageInterface.html">MessageInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Http_Message_RequestInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Http/Message/RequestInterface.html">RequestInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Http_Message_ResponseInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Http/Message/ResponseInterface.html">ResponseInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Http_Message_ServerRequestInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Http/Message/ServerRequestInterface.html">ServerRequestInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Http_Message_StreamInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Http/Message/StreamInterface.html">StreamInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Http_Message_UploadedFileInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Http/Message/UploadedFileInterface.html">UploadedFileInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Http_Message_UriInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Http/Message/UriInterface.html">UriInterface</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Psr_Log" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Psr/Log.html">Log</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Psr_Log_Test" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Psr/Log/Test.html">Test</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Psr_Log_Test_DummyTest" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Log/Test/DummyTest.html">DummyTest</a>                    </div>                </li>                            <li data-name="class:Psr_Log_Test_LoggerInterfaceTest" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Log/Test/LoggerInterfaceTest.html">LoggerInterfaceTest</a>                    </div>                </li>                            <li data-name="class:Psr_Log_Test_TestLogger" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Psr/Log/Test/TestLogger.html">TestLogger</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Psr_Log_AbstractLogger" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Log/AbstractLogger.html">AbstractLogger</a>                    </div>                </li>                            <li data-name="class:Psr_Log_InvalidArgumentException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Log/InvalidArgumentException.html">InvalidArgumentException</a>                    </div>                </li>                            <li data-name="class:Psr_Log_LogLevel" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Log/LogLevel.html">LogLevel</a>                    </div>                </li>                            <li data-name="class:Psr_Log_LoggerAwareInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Log/LoggerAwareInterface.html">LoggerAwareInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Log_LoggerAwareTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Log/LoggerAwareTrait.html">LoggerAwareTrait</a>                    </div>                </li>                            <li data-name="class:Psr_Log_LoggerInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Log/LoggerInterface.html">LoggerInterface</a>                    </div>                </li>                            <li data-name="class:Psr_Log_LoggerTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Log/LoggerTrait.html">LoggerTrait</a>                    </div>                </li>                            <li data-name="class:Psr_Log_NullLogger" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Psr/Log/NullLogger.html">NullLogger</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie.html">SimplePie</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:SimplePie_Configuration" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Configuration.html">Configuration</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Configuration_SetLoggerInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Configuration/SetLoggerInterface.html">SetLoggerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Dictionary" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Dictionary.html">Dictionary</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Dictionary_Entity" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Dictionary/Entity.html">Entity</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Enum" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Enum.html">Enum</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Enum_AbstractEnum" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Enum/AbstractEnum.html">AbstractEnum</a>                    </div>                </li>                            <li data-name="class:SimplePie_Enum_CharacterSet" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Enum/CharacterSet.html">CharacterSet</a>                    </div>                </li>                            <li data-name="class:SimplePie_Enum_DateFormat" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Enum/DateFormat.html">DateFormat</a>                    </div>                </li>                            <li data-name="class:SimplePie_Enum_EnumInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Enum/EnumInterface.html">EnumInterface</a>                    </div>                </li>                            <li data-name="class:SimplePie_Enum_ErrorMessage" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Enum/ErrorMessage.html">ErrorMessage</a>                    </div>                </li>                            <li data-name="class:SimplePie_Enum_FeedType" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Enum/FeedType.html">FeedType</a>                    </div>                </li>                            <li data-name="class:SimplePie_Enum_Serialization" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Enum/Serialization.html">Serialization</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Exception" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Exception_ConfigurationException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Exception/ConfigurationException.html">ConfigurationException</a>                    </div>                </li>                            <li data-name="class:SimplePie_Exception_ContainerException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Exception/ContainerException.html">ContainerException</a>                    </div>                </li>                            <li data-name="class:SimplePie_Exception_MiddlewareException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Exception/MiddlewareException.html">MiddlewareException</a>                    </div>                </li>                            <li data-name="class:SimplePie_Exception_NotFoundException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Exception/NotFoundException.html">NotFoundException</a>                    </div>                </li>                            <li data-name="class:SimplePie_Exception_SimplePieException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Exception/SimplePieException.html">SimplePieException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Middleware" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Middleware.html">Middleware</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:SimplePie_Middleware_Html" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Middleware/Html.html">Html</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Middleware_Html_HtmlInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="SimplePie/Middleware/Html/HtmlInterface.html">HtmlInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Middleware_Json" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Middleware/Json.html">Json</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Middleware_Json_JsonInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="SimplePie/Middleware/Json/JsonInterface.html">JsonInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Middleware_Xml" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Middleware/Xml.html">Xml</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Middleware_Xml_AbstractXmlMiddleware" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="SimplePie/Middleware/Xml/AbstractXmlMiddleware.html">AbstractXmlMiddleware</a>                    </div>                </li>                            <li data-name="class:SimplePie_Middleware_Xml_Atom" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="SimplePie/Middleware/Xml/Atom.html">Atom</a>                    </div>                </li>                            <li data-name="class:SimplePie_Middleware_Xml_XmlInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="SimplePie/Middleware/Xml/XmlInterface.html">XmlInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:SimplePie_Middleware_AbstractMiddleware" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Middleware/AbstractMiddleware.html">AbstractMiddleware</a>                    </div>                </li>                            <li data-name="class:SimplePie_Middleware_MiddlewareInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Middleware/MiddlewareInterface.html">MiddlewareInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Mixin" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Mixin.html">Mixin</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Mixin_DateTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Mixin/DateTrait.html">DateTrait</a>                    </div>                </li>                            <li data-name="class:SimplePie_Mixin_DeepTypeTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Mixin/DeepTypeTrait.html">DeepTypeTrait</a>                    </div>                </li>                            <li data-name="class:SimplePie_Mixin_DomDocumentTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Mixin/DomDocumentTrait.html">DomDocumentTrait</a>                    </div>                </li>                            <li data-name="class:SimplePie_Mixin_LoggerTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Mixin/LoggerTrait.html">LoggerTrait</a>                    </div>                </li>                            <li data-name="class:SimplePie_Mixin_RawDocumentTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Mixin/RawDocumentTrait.html">RawDocumentTrait</a>                    </div>                </li>                            <li data-name="class:SimplePie_Mixin_RootTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Mixin/RootTrait.html">RootTrait</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Parser" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Parser.html">Parser</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Parser_AbstractParser" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Parser/AbstractParser.html">AbstractParser</a>                    </div>                </li>                            <li data-name="class:SimplePie_Parser_Date" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Parser/Date.html">Date</a>                    </div>                </li>                            <li data-name="class:SimplePie_Parser_Html" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Parser/Html.html">Html</a>                    </div>                </li>                            <li data-name="class:SimplePie_Parser_Json" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Parser/Json.html">Json</a>                    </div>                </li>                            <li data-name="class:SimplePie_Parser_ParserInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Parser/ParserInterface.html">ParserInterface</a>                    </div>                </li>                            <li data-name="class:SimplePie_Parser_Xml" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Parser/Xml.html">Xml</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Sanitizer" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Sanitizer.html">Sanitizer</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Sanitizer_Body" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/Body.html">Body</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_DataProtocol" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/DataProtocol.html">DataProtocol</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_DeprecatedElements" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/DeprecatedElements.html">DeprecatedElements</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_Frame" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/Frame.html">Frame</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_Iframe" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/Iframe.html">Iframe</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_JavaScriptProtocol" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/JavaScriptProtocol.html">JavaScriptProtocol</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_Meta" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/Meta.html">Meta</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_ObjectEmbed" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/ObjectEmbed.html">ObjectEmbed</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_Script" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/Script.html">Script</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_Style" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/Style.html">Style</a>                    </div>                </li>                            <li data-name="class:SimplePie_Sanitizer_TextFormatting" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Sanitizer/TextFormatting.html">TextFormatting</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Type" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Type.html">Type</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Type_AbstractType" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/AbstractType.html">AbstractType</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_BranchInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/BranchInterface.html">BranchInterface</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_Category" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/Category.html">Category</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_Entry" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/Entry.html">Entry</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_Feed" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/Feed.html">Feed</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_Generator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/Generator.html">Generator</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_Image" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/Image.html">Image</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_Link" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/Link.html">Link</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_Node" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/Node.html">Node</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_NodeInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/NodeInterface.html">NodeInterface</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_Person" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/Person.html">Person</a>                    </div>                </li>                            <li data-name="class:SimplePie_Type_TypeInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Type/TypeInterface.html">TypeInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:SimplePie_Util" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="SimplePie/Util.html">Util</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:SimplePie_Util_FeedLocator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Util/FeedLocator.html">FeedLocator</a>                    </div>                </li>                            <li data-name="class:SimplePie_Util_Ns" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="SimplePie/Util/Ns.html">Ns</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:SimplePie_HandlerStack" >                    <div style="padding-left:26px" class="hd leaf">                        <a href="SimplePie/HandlerStack.html">HandlerStack</a>                    </div>                </li>                            <li data-name="class:SimplePie_HandlerStackInterface" >                    <div style="padding-left:26px" class="hd leaf">                        <a href="SimplePie/HandlerStackInterface.html">HandlerStackInterface</a>                    </div>                </li>                            <li data-name="class:SimplePie_SimplePie" >                    <div style="padding-left:26px" class="hd leaf">                        <a href="SimplePie/SimplePie.html">SimplePie</a>                    </div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "Psr.html", "name": "Psr", "doc": "Namespace Psr"},{"type": "Namespace", "link": "Psr/Container.html", "name": "Psr\\Container", "doc": "Namespace Psr\\Container"},{"type": "Namespace", "link": "Psr/Http.html", "name": "Psr\\Http", "doc": "Namespace Psr\\Http"},{"type": "Namespace", "link": "Psr/Http/Message.html", "name": "Psr\\Http\\Message", "doc": "Namespace Psr\\Http\\Message"},{"type": "Namespace", "link": "Psr/Log.html", "name": "Psr\\Log", "doc": "Namespace Psr\\Log"},{"type": "Namespace", "link": "Psr/Log/Test.html", "name": "Psr\\Log\\Test", "doc": "Namespace Psr\\Log\\Test"},{"type": "Namespace", "link": "SimplePie.html", "name": "SimplePie", "doc": "Namespace SimplePie"},{"type": "Namespace", "link": "SimplePie/Configuration.html", "name": "SimplePie\\Configuration", "doc": "Namespace SimplePie\\Configuration"},{"type": "Namespace", "link": "SimplePie/Dictionary.html", "name": "SimplePie\\Dictionary", "doc": "Namespace SimplePie\\Dictionary"},{"type": "Namespace", "link": "SimplePie/Enum.html", "name": "SimplePie\\Enum", "doc": "Namespace SimplePie\\Enum"},{"type": "Namespace", "link": "SimplePie/Exception.html", "name": "SimplePie\\Exception", "doc": "Namespace SimplePie\\Exception"},{"type": "Namespace", "link": "SimplePie/Middleware.html", "name": "SimplePie\\Middleware", "doc": "Namespace SimplePie\\Middleware"},{"type": "Namespace", "link": "SimplePie/Middleware/Html.html", "name": "SimplePie\\Middleware\\Html", "doc": "Namespace SimplePie\\Middleware\\Html"},{"type": "Namespace", "link": "SimplePie/Middleware/Json.html", "name": "SimplePie\\Middleware\\Json", "doc": "Namespace SimplePie\\Middleware\\Json"},{"type": "Namespace", "link": "SimplePie/Middleware/Xml.html", "name": "SimplePie\\Middleware\\Xml", "doc": "Namespace SimplePie\\Middleware\\Xml"},{"type": "Namespace", "link": "SimplePie/Mixin.html", "name": "SimplePie\\Mixin", "doc": "Namespace SimplePie\\Mixin"},{"type": "Namespace", "link": "SimplePie/Parser.html", "name": "SimplePie\\Parser", "doc": "Namespace SimplePie\\Parser"},{"type": "Namespace", "link": "SimplePie/Sanitizer.html", "name": "SimplePie\\Sanitizer", "doc": "Namespace SimplePie\\Sanitizer"},{"type": "Namespace", "link": "SimplePie/Type.html", "name": "SimplePie\\Type", "doc": "Namespace SimplePie\\Type"},{"type": "Namespace", "link": "SimplePie/Util.html", "name": "SimplePie\\Util", "doc": "Namespace SimplePie\\Util"},
            {"type": "Interface", "fromName": "Psr\\Container", "fromLink": "Psr/Container.html", "link": "Psr/Container/ContainerExceptionInterface.html", "name": "Psr\\Container\\ContainerExceptionInterface", "doc": "&quot;Base interface representing a generic exception in a container.&quot;"},
                    
            {"type": "Interface", "fromName": "Psr\\Container", "fromLink": "Psr/Container.html", "link": "Psr/Container/ContainerInterface.html", "name": "Psr\\Container\\ContainerInterface", "doc": "&quot;Describes the interface of a container that exposes methods to read its entries.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Container\\ContainerInterface", "fromLink": "Psr/Container/ContainerInterface.html", "link": "Psr/Container/ContainerInterface.html#method_get", "name": "Psr\\Container\\ContainerInterface::get", "doc": "&quot;Finds an entry of the container by its identifier and returns it.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Container\\ContainerInterface", "fromLink": "Psr/Container/ContainerInterface.html", "link": "Psr/Container/ContainerInterface.html#method_has", "name": "Psr\\Container\\ContainerInterface::has", "doc": "&quot;Returns true if the container can return an entry for the given identifier.&quot;"},
            
            {"type": "Interface", "fromName": "Psr\\Container", "fromLink": "Psr/Container.html", "link": "Psr/Container/NotFoundExceptionInterface.html", "name": "Psr\\Container\\NotFoundExceptionInterface", "doc": "&quot;No entry was found in the container.&quot;"},
                    
            {"type": "Interface", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/MessageInterface.html", "name": "Psr\\Http\\Message\\MessageInterface", "doc": "&quot;HTTP messages consist of requests from a client to a server and responses\nfrom a server to a client. This interface defines the methods common to\neach.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getProtocolVersion", "name": "Psr\\Http\\Message\\MessageInterface::getProtocolVersion", "doc": "&quot;Retrieves the HTTP protocol version as a string.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withProtocolVersion", "name": "Psr\\Http\\Message\\MessageInterface::withProtocolVersion", "doc": "&quot;Return an instance with the specified HTTP protocol version.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getHeaders", "name": "Psr\\Http\\Message\\MessageInterface::getHeaders", "doc": "&quot;Retrieves all message header values.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_hasHeader", "name": "Psr\\Http\\Message\\MessageInterface::hasHeader", "doc": "&quot;Checks if a header exists by the given case-insensitive name.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getHeader", "name": "Psr\\Http\\Message\\MessageInterface::getHeader", "doc": "&quot;Retrieves a message header value by the given case-insensitive name.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getHeaderLine", "name": "Psr\\Http\\Message\\MessageInterface::getHeaderLine", "doc": "&quot;Retrieves a comma-separated string of the values for a single header.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withHeader", "name": "Psr\\Http\\Message\\MessageInterface::withHeader", "doc": "&quot;Return an instance with the provided value replacing the specified header.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withAddedHeader", "name": "Psr\\Http\\Message\\MessageInterface::withAddedHeader", "doc": "&quot;Return an instance with the specified header appended with the given value.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withoutHeader", "name": "Psr\\Http\\Message\\MessageInterface::withoutHeader", "doc": "&quot;Return an instance without the specified header.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getBody", "name": "Psr\\Http\\Message\\MessageInterface::getBody", "doc": "&quot;Gets the body of the message.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withBody", "name": "Psr\\Http\\Message\\MessageInterface::withBody", "doc": "&quot;Return an instance with the specified message body.&quot;"},
            
            {"type": "Interface", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/RequestInterface.html", "name": "Psr\\Http\\Message\\RequestInterface", "doc": "&quot;Representation of an outgoing, client-side request.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_getRequestTarget", "name": "Psr\\Http\\Message\\RequestInterface::getRequestTarget", "doc": "&quot;Retrieves the message&#039;s request target.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_withRequestTarget", "name": "Psr\\Http\\Message\\RequestInterface::withRequestTarget", "doc": "&quot;Return an instance with the specific request-target.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_getMethod", "name": "Psr\\Http\\Message\\RequestInterface::getMethod", "doc": "&quot;Retrieves the HTTP method of the request.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_withMethod", "name": "Psr\\Http\\Message\\RequestInterface::withMethod", "doc": "&quot;Return an instance with the provided HTTP method.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_getUri", "name": "Psr\\Http\\Message\\RequestInterface::getUri", "doc": "&quot;Retrieves the URI instance.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_withUri", "name": "Psr\\Http\\Message\\RequestInterface::withUri", "doc": "&quot;Returns an instance with the provided URI.&quot;"},
            
            {"type": "Interface", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/ResponseInterface.html", "name": "Psr\\Http\\Message\\ResponseInterface", "doc": "&quot;Representation of an outgoing, server-side response.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\ResponseInterface", "fromLink": "Psr/Http/Message/ResponseInterface.html", "link": "Psr/Http/Message/ResponseInterface.html#method_getStatusCode", "name": "Psr\\Http\\Message\\ResponseInterface::getStatusCode", "doc": "&quot;Gets the response status code.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ResponseInterface", "fromLink": "Psr/Http/Message/ResponseInterface.html", "link": "Psr/Http/Message/ResponseInterface.html#method_withStatus", "name": "Psr\\Http\\Message\\ResponseInterface::withStatus", "doc": "&quot;Return an instance with the specified status code and, optionally, reason phrase.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ResponseInterface", "fromLink": "Psr/Http/Message/ResponseInterface.html", "link": "Psr/Http/Message/ResponseInterface.html#method_getReasonPhrase", "name": "Psr\\Http\\Message\\ResponseInterface::getReasonPhrase", "doc": "&quot;Gets the response reason phrase associated with the status code.&quot;"},
            
            {"type": "Interface", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/ServerRequestInterface.html", "name": "Psr\\Http\\Message\\ServerRequestInterface", "doc": "&quot;Representation of an incoming, server-side HTTP request.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getServerParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::getServerParams", "doc": "&quot;Retrieve server parameters.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getCookieParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::getCookieParams", "doc": "&quot;Retrieve cookies.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withCookieParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::withCookieParams", "doc": "&quot;Return an instance with the specified cookies.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getQueryParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::getQueryParams", "doc": "&quot;Retrieve query string arguments.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withQueryParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::withQueryParams", "doc": "&quot;Return an instance with the specified query string arguments.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getUploadedFiles", "name": "Psr\\Http\\Message\\ServerRequestInterface::getUploadedFiles", "doc": "&quot;Retrieve normalized file upload data.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withUploadedFiles", "name": "Psr\\Http\\Message\\ServerRequestInterface::withUploadedFiles", "doc": "&quot;Create a new instance with the specified uploaded files.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getParsedBody", "name": "Psr\\Http\\Message\\ServerRequestInterface::getParsedBody", "doc": "&quot;Retrieve any parameters provided in the request body.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withParsedBody", "name": "Psr\\Http\\Message\\ServerRequestInterface::withParsedBody", "doc": "&quot;Return an instance with the specified body parameters.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getAttributes", "name": "Psr\\Http\\Message\\ServerRequestInterface::getAttributes", "doc": "&quot;Retrieve attributes derived from the request.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getAttribute", "name": "Psr\\Http\\Message\\ServerRequestInterface::getAttribute", "doc": "&quot;Retrieve a single derived request attribute.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withAttribute", "name": "Psr\\Http\\Message\\ServerRequestInterface::withAttribute", "doc": "&quot;Return an instance with the specified derived request attribute.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withoutAttribute", "name": "Psr\\Http\\Message\\ServerRequestInterface::withoutAttribute", "doc": "&quot;Return an instance that removes the specified derived request attribute.&quot;"},
            
            {"type": "Interface", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/StreamInterface.html", "name": "Psr\\Http\\Message\\StreamInterface", "doc": "&quot;Describes a data stream.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method___toString", "name": "Psr\\Http\\Message\\StreamInterface::__toString", "doc": "&quot;Reads all data from the stream into a string, from the beginning to end.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_close", "name": "Psr\\Http\\Message\\StreamInterface::close", "doc": "&quot;Closes the stream and any underlying resources.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_detach", "name": "Psr\\Http\\Message\\StreamInterface::detach", "doc": "&quot;Separates any underlying resources from the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_getSize", "name": "Psr\\Http\\Message\\StreamInterface::getSize", "doc": "&quot;Get the size of the stream if known.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_tell", "name": "Psr\\Http\\Message\\StreamInterface::tell", "doc": "&quot;Returns the current position of the file read\/write pointer&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_eof", "name": "Psr\\Http\\Message\\StreamInterface::eof", "doc": "&quot;Returns true if the stream is at the end of the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_isSeekable", "name": "Psr\\Http\\Message\\StreamInterface::isSeekable", "doc": "&quot;Returns whether or not the stream is seekable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_seek", "name": "Psr\\Http\\Message\\StreamInterface::seek", "doc": "&quot;Seek to a position in the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_rewind", "name": "Psr\\Http\\Message\\StreamInterface::rewind", "doc": "&quot;Seek to the beginning of the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_isWritable", "name": "Psr\\Http\\Message\\StreamInterface::isWritable", "doc": "&quot;Returns whether or not the stream is writable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_write", "name": "Psr\\Http\\Message\\StreamInterface::write", "doc": "&quot;Write data to the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_isReadable", "name": "Psr\\Http\\Message\\StreamInterface::isReadable", "doc": "&quot;Returns whether or not the stream is readable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_read", "name": "Psr\\Http\\Message\\StreamInterface::read", "doc": "&quot;Read data from the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_getContents", "name": "Psr\\Http\\Message\\StreamInterface::getContents", "doc": "&quot;Returns the remaining contents in a string&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_getMetadata", "name": "Psr\\Http\\Message\\StreamInterface::getMetadata", "doc": "&quot;Get stream metadata as an associative array or retrieve a specific key.&quot;"},
            
            {"type": "Interface", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/UploadedFileInterface.html", "name": "Psr\\Http\\Message\\UploadedFileInterface", "doc": "&quot;Value object representing a file uploaded through an HTTP request.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getStream", "name": "Psr\\Http\\Message\\UploadedFileInterface::getStream", "doc": "&quot;Retrieve a stream representing the uploaded file.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_moveTo", "name": "Psr\\Http\\Message\\UploadedFileInterface::moveTo", "doc": "&quot;Move the uploaded file to a new location.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getSize", "name": "Psr\\Http\\Message\\UploadedFileInterface::getSize", "doc": "&quot;Retrieve the file size.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getError", "name": "Psr\\Http\\Message\\UploadedFileInterface::getError", "doc": "&quot;Retrieve the error associated with the uploaded file.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getClientFilename", "name": "Psr\\Http\\Message\\UploadedFileInterface::getClientFilename", "doc": "&quot;Retrieve the filename sent by the client.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getClientMediaType", "name": "Psr\\Http\\Message\\UploadedFileInterface::getClientMediaType", "doc": "&quot;Retrieve the media type sent by the client.&quot;"},
            
            {"type": "Interface", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/UriInterface.html", "name": "Psr\\Http\\Message\\UriInterface", "doc": "&quot;Value object representing a URI.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getScheme", "name": "Psr\\Http\\Message\\UriInterface::getScheme", "doc": "&quot;Retrieve the scheme component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getAuthority", "name": "Psr\\Http\\Message\\UriInterface::getAuthority", "doc": "&quot;Retrieve the authority component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getUserInfo", "name": "Psr\\Http\\Message\\UriInterface::getUserInfo", "doc": "&quot;Retrieve the user information component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getHost", "name": "Psr\\Http\\Message\\UriInterface::getHost", "doc": "&quot;Retrieve the host component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getPort", "name": "Psr\\Http\\Message\\UriInterface::getPort", "doc": "&quot;Retrieve the port component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getPath", "name": "Psr\\Http\\Message\\UriInterface::getPath", "doc": "&quot;Retrieve the path component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getQuery", "name": "Psr\\Http\\Message\\UriInterface::getQuery", "doc": "&quot;Retrieve the query string of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getFragment", "name": "Psr\\Http\\Message\\UriInterface::getFragment", "doc": "&quot;Retrieve the fragment component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withScheme", "name": "Psr\\Http\\Message\\UriInterface::withScheme", "doc": "&quot;Return an instance with the specified scheme.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withUserInfo", "name": "Psr\\Http\\Message\\UriInterface::withUserInfo", "doc": "&quot;Return an instance with the specified user information.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withHost", "name": "Psr\\Http\\Message\\UriInterface::withHost", "doc": "&quot;Return an instance with the specified host.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withPort", "name": "Psr\\Http\\Message\\UriInterface::withPort", "doc": "&quot;Return an instance with the specified port.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withPath", "name": "Psr\\Http\\Message\\UriInterface::withPath", "doc": "&quot;Return an instance with the specified path.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withQuery", "name": "Psr\\Http\\Message\\UriInterface::withQuery", "doc": "&quot;Return an instance with the specified query string.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withFragment", "name": "Psr\\Http\\Message\\UriInterface::withFragment", "doc": "&quot;Return an instance with the specified URI fragment.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method___toString", "name": "Psr\\Http\\Message\\UriInterface::__toString", "doc": "&quot;Return the string representation as a URI reference.&quot;"},
            
            {"type": "Interface", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/LoggerAwareInterface.html", "name": "Psr\\Log\\LoggerAwareInterface", "doc": "&quot;Describes a logger-aware instance.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\LoggerAwareInterface", "fromLink": "Psr/Log/LoggerAwareInterface.html", "link": "Psr/Log/LoggerAwareInterface.html#method_setLogger", "name": "Psr\\Log\\LoggerAwareInterface::setLogger", "doc": "&quot;Sets a logger instance on the object.&quot;"},
            
            {"type": "Interface", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/LoggerInterface.html", "name": "Psr\\Log\\LoggerInterface", "doc": "&quot;Describes a logger instance.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_emergency", "name": "Psr\\Log\\LoggerInterface::emergency", "doc": "&quot;System is unusable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_alert", "name": "Psr\\Log\\LoggerInterface::alert", "doc": "&quot;Action must be taken immediately.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_critical", "name": "Psr\\Log\\LoggerInterface::critical", "doc": "&quot;Critical conditions.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_error", "name": "Psr\\Log\\LoggerInterface::error", "doc": "&quot;Runtime errors that do not require immediate action but should typically\nbe logged and monitored.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_warning", "name": "Psr\\Log\\LoggerInterface::warning", "doc": "&quot;Exceptional occurrences that are not errors.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_notice", "name": "Psr\\Log\\LoggerInterface::notice", "doc": "&quot;Normal but significant events.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_info", "name": "Psr\\Log\\LoggerInterface::info", "doc": "&quot;Interesting events.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_debug", "name": "Psr\\Log\\LoggerInterface::debug", "doc": "&quot;Detailed debug information.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_log", "name": "Psr\\Log\\LoggerInterface::log", "doc": "&quot;Logs with an arbitrary level.&quot;"},
            
            {"type": "Interface", "fromName": "SimplePie\\Configuration", "fromLink": "SimplePie/Configuration.html", "link": "SimplePie/Configuration/SetLoggerInterface.html", "name": "SimplePie\\Configuration\\SetLoggerInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Configuration\\SetLoggerInterface", "fromLink": "SimplePie/Configuration/SetLoggerInterface.html", "link": "SimplePie/Configuration/SetLoggerInterface.html#method_setLogger", "name": "SimplePie\\Configuration\\SetLoggerInterface::setLogger", "doc": "&quot;&quot;"},
            
            {"type": "Interface", "fromName": "SimplePie\\Enum", "fromLink": "SimplePie/Enum.html", "link": "SimplePie/Enum/EnumInterface.html", "name": "SimplePie\\Enum\\EnumInterface", "doc": "&quot;The interface that all enum classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Enum\\EnumInterface", "fromLink": "SimplePie/Enum/EnumInterface.html", "link": "SimplePie/Enum/EnumInterface.html#method_introspect", "name": "SimplePie\\Enum\\EnumInterface::introspect", "doc": "&quot;Introspects the Enum for its values.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Enum\\EnumInterface", "fromLink": "SimplePie/Enum/EnumInterface.html", "link": "SimplePie/Enum/EnumInterface.html#method_introspectKeys", "name": "SimplePie\\Enum\\EnumInterface::introspectKeys", "doc": "&quot;Introspects the Enum for its keys.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Enum\\EnumInterface", "fromLink": "SimplePie/Enum/EnumInterface.html", "link": "SimplePie/Enum/EnumInterface.html#method_hasValue", "name": "SimplePie\\Enum\\EnumInterface::hasValue", "doc": "&quot;Determines if the value is one of the Enum values of this type.&quot;"},
            
            {"type": "Interface", "fromName": "SimplePie", "fromLink": "SimplePie.html", "link": "SimplePie/HandlerStackInterface.html", "name": "SimplePie\\HandlerStackInterface", "doc": "&quot;Provides an interface for &lt;code&gt;SimplePie\\HandlerStack&lt;\/code&gt; to implement.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_append", "name": "SimplePie\\HandlerStackInterface::append", "doc": "&quot;Appends a new middleware class onto the end of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_appendClosure", "name": "SimplePie\\HandlerStackInterface::appendClosure", "doc": "&quot;Appends a new middleware closure onto the end of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_prepend", "name": "SimplePie\\HandlerStackInterface::prepend", "doc": "&quot;Prepends a new middleware class onto the beginning of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_prependClosure", "name": "SimplePie\\HandlerStackInterface::prependClosure", "doc": "&quot;Prepends a new middleware closure onto the beginning of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_invoke", "name": "SimplePie\\HandlerStackInterface::invoke", "doc": "&quot;Invokes the stack of middleware.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_registerNamespaces", "name": "SimplePie\\HandlerStackInterface::registerNamespaces", "doc": "&quot;Collects all of the supported namespaces from the registered middleware.&quot;"},
            
            {"type": "Interface", "fromName": "SimplePie\\Middleware\\Html", "fromLink": "SimplePie/Middleware/Html.html", "link": "SimplePie/Middleware/Html/HtmlInterface.html", "name": "SimplePie\\Middleware\\Html\\HtmlInterface", "doc": "&quot;The interface that all HTML middleware classes must implement and respond to.&quot;"},
                    
            {"type": "Interface", "fromName": "SimplePie\\Middleware\\Json", "fromLink": "SimplePie/Middleware/Json.html", "link": "SimplePie/Middleware/Json/JsonInterface.html", "name": "SimplePie\\Middleware\\Json\\JsonInterface", "doc": "&quot;The interface that all JSON middleware classes must implement and respond to.&quot;"},
                    
            {"type": "Interface", "fromName": "SimplePie\\Middleware", "fromLink": "SimplePie/Middleware.html", "link": "SimplePie/Middleware/MiddlewareInterface.html", "name": "SimplePie\\Middleware\\MiddlewareInterface", "doc": "&quot;The interface that all middleware classes must implement and respond to.&quot;"},
                    
            {"type": "Interface", "fromName": "SimplePie\\Middleware\\Xml", "fromLink": "SimplePie/Middleware/Xml.html", "link": "SimplePie/Middleware/Xml/XmlInterface.html", "name": "SimplePie\\Middleware\\Xml\\XmlInterface", "doc": "&quot;The interface that all XML middleware classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\XmlInterface", "fromLink": "SimplePie/Middleware/Xml/XmlInterface.html", "link": "SimplePie/Middleware/Xml/XmlInterface.html#method___invoke", "name": "SimplePie\\Middleware\\Xml\\XmlInterface::__invoke", "doc": "&quot;The function signature for the middleware.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\XmlInterface", "fromLink": "SimplePie/Middleware/Xml/XmlInterface.html", "link": "SimplePie/Middleware/Xml/XmlInterface.html#method_getSupportedNamespaces", "name": "SimplePie\\Middleware\\Xml\\XmlInterface::getSupportedNamespaces", "doc": "&quot;Gets the list of supported namespaces and their namespace aliases.&quot;"},
            
            {"type": "Interface", "fromName": "SimplePie\\Parser", "fromLink": "SimplePie/Parser.html", "link": "SimplePie/Parser/ParserInterface.html", "name": "SimplePie\\Parser\\ParserInterface", "doc": "&quot;The interface that all parser classes must implement and respond to.&quot;"},
                    
            {"type": "Interface", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/BranchInterface.html", "name": "SimplePie\\Type\\BranchInterface", "doc": "&quot;The interface that all type classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\BranchInterface", "fromLink": "SimplePie/Type/BranchInterface.html", "link": "SimplePie/Type/BranchInterface.html#method_getAlias", "name": "SimplePie\\Type\\BranchInterface::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\BranchInterface", "fromLink": "SimplePie/Type/BranchInterface.html", "link": "SimplePie/Type/BranchInterface.html#method_getHandler", "name": "SimplePie\\Type\\BranchInterface::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
            
            {"type": "Interface", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/NodeInterface.html", "name": "SimplePie\\Type\\NodeInterface", "doc": "&quot;The interface that all type classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\NodeInterface", "fromLink": "SimplePie/Type/NodeInterface.html", "link": "SimplePie/Type/NodeInterface.html#method___toString", "name": "SimplePie\\Type\\NodeInterface::__toString", "doc": "&quot;Converts this object into a string representation.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\NodeInterface", "fromLink": "SimplePie/Type/NodeInterface.html", "link": "SimplePie/Type/NodeInterface.html#method_getNode", "name": "SimplePie\\Type\\NodeInterface::getNode", "doc": "&quot;Gets the DOMNode element.&quot;"},
            
            {"type": "Interface", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/TypeInterface.html", "name": "SimplePie\\Type\\TypeInterface", "doc": "&quot;The interface that all type classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\TypeInterface", "fromLink": "SimplePie/Type/TypeInterface.html", "link": "SimplePie/Type/TypeInterface.html#method_getAlias", "name": "SimplePie\\Type\\TypeInterface::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\TypeInterface", "fromLink": "SimplePie/Type/TypeInterface.html", "link": "SimplePie/Type/TypeInterface.html#method_getHandler", "name": "SimplePie\\Type\\TypeInterface::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
            
            
            {"type": "Class", "fromName": "Psr\\Container", "fromLink": "Psr/Container.html", "link": "Psr/Container/ContainerExceptionInterface.html", "name": "Psr\\Container\\ContainerExceptionInterface", "doc": "&quot;Base interface representing a generic exception in a container.&quot;"},
                    
            {"type": "Class", "fromName": "Psr\\Container", "fromLink": "Psr/Container.html", "link": "Psr/Container/ContainerInterface.html", "name": "Psr\\Container\\ContainerInterface", "doc": "&quot;Describes the interface of a container that exposes methods to read its entries.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Container\\ContainerInterface", "fromLink": "Psr/Container/ContainerInterface.html", "link": "Psr/Container/ContainerInterface.html#method_get", "name": "Psr\\Container\\ContainerInterface::get", "doc": "&quot;Finds an entry of the container by its identifier and returns it.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Container\\ContainerInterface", "fromLink": "Psr/Container/ContainerInterface.html", "link": "Psr/Container/ContainerInterface.html#method_has", "name": "Psr\\Container\\ContainerInterface::has", "doc": "&quot;Returns true if the container can return an entry for the given identifier.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Container", "fromLink": "Psr/Container.html", "link": "Psr/Container/NotFoundExceptionInterface.html", "name": "Psr\\Container\\NotFoundExceptionInterface", "doc": "&quot;No entry was found in the container.&quot;"},
                    
            {"type": "Class", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/MessageInterface.html", "name": "Psr\\Http\\Message\\MessageInterface", "doc": "&quot;HTTP messages consist of requests from a client to a server and responses\nfrom a server to a client. This interface defines the methods common to\neach.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getProtocolVersion", "name": "Psr\\Http\\Message\\MessageInterface::getProtocolVersion", "doc": "&quot;Retrieves the HTTP protocol version as a string.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withProtocolVersion", "name": "Psr\\Http\\Message\\MessageInterface::withProtocolVersion", "doc": "&quot;Return an instance with the specified HTTP protocol version.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getHeaders", "name": "Psr\\Http\\Message\\MessageInterface::getHeaders", "doc": "&quot;Retrieves all message header values.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_hasHeader", "name": "Psr\\Http\\Message\\MessageInterface::hasHeader", "doc": "&quot;Checks if a header exists by the given case-insensitive name.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getHeader", "name": "Psr\\Http\\Message\\MessageInterface::getHeader", "doc": "&quot;Retrieves a message header value by the given case-insensitive name.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getHeaderLine", "name": "Psr\\Http\\Message\\MessageInterface::getHeaderLine", "doc": "&quot;Retrieves a comma-separated string of the values for a single header.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withHeader", "name": "Psr\\Http\\Message\\MessageInterface::withHeader", "doc": "&quot;Return an instance with the provided value replacing the specified header.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withAddedHeader", "name": "Psr\\Http\\Message\\MessageInterface::withAddedHeader", "doc": "&quot;Return an instance with the specified header appended with the given value.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withoutHeader", "name": "Psr\\Http\\Message\\MessageInterface::withoutHeader", "doc": "&quot;Return an instance without the specified header.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_getBody", "name": "Psr\\Http\\Message\\MessageInterface::getBody", "doc": "&quot;Gets the body of the message.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\MessageInterface", "fromLink": "Psr/Http/Message/MessageInterface.html", "link": "Psr/Http/Message/MessageInterface.html#method_withBody", "name": "Psr\\Http\\Message\\MessageInterface::withBody", "doc": "&quot;Return an instance with the specified message body.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/RequestInterface.html", "name": "Psr\\Http\\Message\\RequestInterface", "doc": "&quot;Representation of an outgoing, client-side request.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_getRequestTarget", "name": "Psr\\Http\\Message\\RequestInterface::getRequestTarget", "doc": "&quot;Retrieves the message&#039;s request target.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_withRequestTarget", "name": "Psr\\Http\\Message\\RequestInterface::withRequestTarget", "doc": "&quot;Return an instance with the specific request-target.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_getMethod", "name": "Psr\\Http\\Message\\RequestInterface::getMethod", "doc": "&quot;Retrieves the HTTP method of the request.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_withMethod", "name": "Psr\\Http\\Message\\RequestInterface::withMethod", "doc": "&quot;Return an instance with the provided HTTP method.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_getUri", "name": "Psr\\Http\\Message\\RequestInterface::getUri", "doc": "&quot;Retrieves the URI instance.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\RequestInterface", "fromLink": "Psr/Http/Message/RequestInterface.html", "link": "Psr/Http/Message/RequestInterface.html#method_withUri", "name": "Psr\\Http\\Message\\RequestInterface::withUri", "doc": "&quot;Returns an instance with the provided URI.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/ResponseInterface.html", "name": "Psr\\Http\\Message\\ResponseInterface", "doc": "&quot;Representation of an outgoing, server-side response.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\ResponseInterface", "fromLink": "Psr/Http/Message/ResponseInterface.html", "link": "Psr/Http/Message/ResponseInterface.html#method_getStatusCode", "name": "Psr\\Http\\Message\\ResponseInterface::getStatusCode", "doc": "&quot;Gets the response status code.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ResponseInterface", "fromLink": "Psr/Http/Message/ResponseInterface.html", "link": "Psr/Http/Message/ResponseInterface.html#method_withStatus", "name": "Psr\\Http\\Message\\ResponseInterface::withStatus", "doc": "&quot;Return an instance with the specified status code and, optionally, reason phrase.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ResponseInterface", "fromLink": "Psr/Http/Message/ResponseInterface.html", "link": "Psr/Http/Message/ResponseInterface.html#method_getReasonPhrase", "name": "Psr\\Http\\Message\\ResponseInterface::getReasonPhrase", "doc": "&quot;Gets the response reason phrase associated with the status code.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/ServerRequestInterface.html", "name": "Psr\\Http\\Message\\ServerRequestInterface", "doc": "&quot;Representation of an incoming, server-side HTTP request.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getServerParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::getServerParams", "doc": "&quot;Retrieve server parameters.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getCookieParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::getCookieParams", "doc": "&quot;Retrieve cookies.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withCookieParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::withCookieParams", "doc": "&quot;Return an instance with the specified cookies.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getQueryParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::getQueryParams", "doc": "&quot;Retrieve query string arguments.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withQueryParams", "name": "Psr\\Http\\Message\\ServerRequestInterface::withQueryParams", "doc": "&quot;Return an instance with the specified query string arguments.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getUploadedFiles", "name": "Psr\\Http\\Message\\ServerRequestInterface::getUploadedFiles", "doc": "&quot;Retrieve normalized file upload data.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withUploadedFiles", "name": "Psr\\Http\\Message\\ServerRequestInterface::withUploadedFiles", "doc": "&quot;Create a new instance with the specified uploaded files.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getParsedBody", "name": "Psr\\Http\\Message\\ServerRequestInterface::getParsedBody", "doc": "&quot;Retrieve any parameters provided in the request body.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withParsedBody", "name": "Psr\\Http\\Message\\ServerRequestInterface::withParsedBody", "doc": "&quot;Return an instance with the specified body parameters.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getAttributes", "name": "Psr\\Http\\Message\\ServerRequestInterface::getAttributes", "doc": "&quot;Retrieve attributes derived from the request.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_getAttribute", "name": "Psr\\Http\\Message\\ServerRequestInterface::getAttribute", "doc": "&quot;Retrieve a single derived request attribute.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withAttribute", "name": "Psr\\Http\\Message\\ServerRequestInterface::withAttribute", "doc": "&quot;Return an instance with the specified derived request attribute.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\ServerRequestInterface", "fromLink": "Psr/Http/Message/ServerRequestInterface.html", "link": "Psr/Http/Message/ServerRequestInterface.html#method_withoutAttribute", "name": "Psr\\Http\\Message\\ServerRequestInterface::withoutAttribute", "doc": "&quot;Return an instance that removes the specified derived request attribute.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/StreamInterface.html", "name": "Psr\\Http\\Message\\StreamInterface", "doc": "&quot;Describes a data stream.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method___toString", "name": "Psr\\Http\\Message\\StreamInterface::__toString", "doc": "&quot;Reads all data from the stream into a string, from the beginning to end.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_close", "name": "Psr\\Http\\Message\\StreamInterface::close", "doc": "&quot;Closes the stream and any underlying resources.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_detach", "name": "Psr\\Http\\Message\\StreamInterface::detach", "doc": "&quot;Separates any underlying resources from the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_getSize", "name": "Psr\\Http\\Message\\StreamInterface::getSize", "doc": "&quot;Get the size of the stream if known.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_tell", "name": "Psr\\Http\\Message\\StreamInterface::tell", "doc": "&quot;Returns the current position of the file read\/write pointer&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_eof", "name": "Psr\\Http\\Message\\StreamInterface::eof", "doc": "&quot;Returns true if the stream is at the end of the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_isSeekable", "name": "Psr\\Http\\Message\\StreamInterface::isSeekable", "doc": "&quot;Returns whether or not the stream is seekable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_seek", "name": "Psr\\Http\\Message\\StreamInterface::seek", "doc": "&quot;Seek to a position in the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_rewind", "name": "Psr\\Http\\Message\\StreamInterface::rewind", "doc": "&quot;Seek to the beginning of the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_isWritable", "name": "Psr\\Http\\Message\\StreamInterface::isWritable", "doc": "&quot;Returns whether or not the stream is writable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_write", "name": "Psr\\Http\\Message\\StreamInterface::write", "doc": "&quot;Write data to the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_isReadable", "name": "Psr\\Http\\Message\\StreamInterface::isReadable", "doc": "&quot;Returns whether or not the stream is readable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_read", "name": "Psr\\Http\\Message\\StreamInterface::read", "doc": "&quot;Read data from the stream.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_getContents", "name": "Psr\\Http\\Message\\StreamInterface::getContents", "doc": "&quot;Returns the remaining contents in a string&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\StreamInterface", "fromLink": "Psr/Http/Message/StreamInterface.html", "link": "Psr/Http/Message/StreamInterface.html#method_getMetadata", "name": "Psr\\Http\\Message\\StreamInterface::getMetadata", "doc": "&quot;Get stream metadata as an associative array or retrieve a specific key.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/UploadedFileInterface.html", "name": "Psr\\Http\\Message\\UploadedFileInterface", "doc": "&quot;Value object representing a file uploaded through an HTTP request.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getStream", "name": "Psr\\Http\\Message\\UploadedFileInterface::getStream", "doc": "&quot;Retrieve a stream representing the uploaded file.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_moveTo", "name": "Psr\\Http\\Message\\UploadedFileInterface::moveTo", "doc": "&quot;Move the uploaded file to a new location.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getSize", "name": "Psr\\Http\\Message\\UploadedFileInterface::getSize", "doc": "&quot;Retrieve the file size.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getError", "name": "Psr\\Http\\Message\\UploadedFileInterface::getError", "doc": "&quot;Retrieve the error associated with the uploaded file.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getClientFilename", "name": "Psr\\Http\\Message\\UploadedFileInterface::getClientFilename", "doc": "&quot;Retrieve the filename sent by the client.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UploadedFileInterface", "fromLink": "Psr/Http/Message/UploadedFileInterface.html", "link": "Psr/Http/Message/UploadedFileInterface.html#method_getClientMediaType", "name": "Psr\\Http\\Message\\UploadedFileInterface::getClientMediaType", "doc": "&quot;Retrieve the media type sent by the client.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Http\\Message", "fromLink": "Psr/Http/Message.html", "link": "Psr/Http/Message/UriInterface.html", "name": "Psr\\Http\\Message\\UriInterface", "doc": "&quot;Value object representing a URI.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getScheme", "name": "Psr\\Http\\Message\\UriInterface::getScheme", "doc": "&quot;Retrieve the scheme component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getAuthority", "name": "Psr\\Http\\Message\\UriInterface::getAuthority", "doc": "&quot;Retrieve the authority component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getUserInfo", "name": "Psr\\Http\\Message\\UriInterface::getUserInfo", "doc": "&quot;Retrieve the user information component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getHost", "name": "Psr\\Http\\Message\\UriInterface::getHost", "doc": "&quot;Retrieve the host component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getPort", "name": "Psr\\Http\\Message\\UriInterface::getPort", "doc": "&quot;Retrieve the port component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getPath", "name": "Psr\\Http\\Message\\UriInterface::getPath", "doc": "&quot;Retrieve the path component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getQuery", "name": "Psr\\Http\\Message\\UriInterface::getQuery", "doc": "&quot;Retrieve the query string of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_getFragment", "name": "Psr\\Http\\Message\\UriInterface::getFragment", "doc": "&quot;Retrieve the fragment component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withScheme", "name": "Psr\\Http\\Message\\UriInterface::withScheme", "doc": "&quot;Return an instance with the specified scheme.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withUserInfo", "name": "Psr\\Http\\Message\\UriInterface::withUserInfo", "doc": "&quot;Return an instance with the specified user information.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withHost", "name": "Psr\\Http\\Message\\UriInterface::withHost", "doc": "&quot;Return an instance with the specified host.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withPort", "name": "Psr\\Http\\Message\\UriInterface::withPort", "doc": "&quot;Return an instance with the specified port.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withPath", "name": "Psr\\Http\\Message\\UriInterface::withPath", "doc": "&quot;Return an instance with the specified path.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withQuery", "name": "Psr\\Http\\Message\\UriInterface::withQuery", "doc": "&quot;Return an instance with the specified query string.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method_withFragment", "name": "Psr\\Http\\Message\\UriInterface::withFragment", "doc": "&quot;Return an instance with the specified URI fragment.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Http\\Message\\UriInterface", "fromLink": "Psr/Http/Message/UriInterface.html", "link": "Psr/Http/Message/UriInterface.html#method___toString", "name": "Psr\\Http\\Message\\UriInterface::__toString", "doc": "&quot;Return the string representation as a URI reference.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/AbstractLogger.html", "name": "Psr\\Log\\AbstractLogger", "doc": "&quot;This is a simple Logger implementation that other Loggers can inherit from.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\AbstractLogger", "fromLink": "Psr/Log/AbstractLogger.html", "link": "Psr/Log/AbstractLogger.html#method_emergency", "name": "Psr\\Log\\AbstractLogger::emergency", "doc": "&quot;System is unusable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\AbstractLogger", "fromLink": "Psr/Log/AbstractLogger.html", "link": "Psr/Log/AbstractLogger.html#method_alert", "name": "Psr\\Log\\AbstractLogger::alert", "doc": "&quot;Action must be taken immediately.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\AbstractLogger", "fromLink": "Psr/Log/AbstractLogger.html", "link": "Psr/Log/AbstractLogger.html#method_critical", "name": "Psr\\Log\\AbstractLogger::critical", "doc": "&quot;Critical conditions.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\AbstractLogger", "fromLink": "Psr/Log/AbstractLogger.html", "link": "Psr/Log/AbstractLogger.html#method_error", "name": "Psr\\Log\\AbstractLogger::error", "doc": "&quot;Runtime errors that do not require immediate action but should typically\nbe logged and monitored.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\AbstractLogger", "fromLink": "Psr/Log/AbstractLogger.html", "link": "Psr/Log/AbstractLogger.html#method_warning", "name": "Psr\\Log\\AbstractLogger::warning", "doc": "&quot;Exceptional occurrences that are not errors.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\AbstractLogger", "fromLink": "Psr/Log/AbstractLogger.html", "link": "Psr/Log/AbstractLogger.html#method_notice", "name": "Psr\\Log\\AbstractLogger::notice", "doc": "&quot;Normal but significant events.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\AbstractLogger", "fromLink": "Psr/Log/AbstractLogger.html", "link": "Psr/Log/AbstractLogger.html#method_info", "name": "Psr\\Log\\AbstractLogger::info", "doc": "&quot;Interesting events.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\AbstractLogger", "fromLink": "Psr/Log/AbstractLogger.html", "link": "Psr/Log/AbstractLogger.html#method_debug", "name": "Psr\\Log\\AbstractLogger::debug", "doc": "&quot;Detailed debug information.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/InvalidArgumentException.html", "name": "Psr\\Log\\InvalidArgumentException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/LogLevel.html", "name": "Psr\\Log\\LogLevel", "doc": "&quot;Describes log levels.&quot;"},
                    
            {"type": "Class", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/LoggerAwareInterface.html", "name": "Psr\\Log\\LoggerAwareInterface", "doc": "&quot;Describes a logger-aware instance.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\LoggerAwareInterface", "fromLink": "Psr/Log/LoggerAwareInterface.html", "link": "Psr/Log/LoggerAwareInterface.html#method_setLogger", "name": "Psr\\Log\\LoggerAwareInterface::setLogger", "doc": "&quot;Sets a logger instance on the object.&quot;"},
            
            {"type": "Trait", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/LoggerAwareTrait.html", "name": "Psr\\Log\\LoggerAwareTrait", "doc": "&quot;Basic Implementation of LoggerAwareInterface.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\LoggerAwareTrait", "fromLink": "Psr/Log/LoggerAwareTrait.html", "link": "Psr/Log/LoggerAwareTrait.html#method_setLogger", "name": "Psr\\Log\\LoggerAwareTrait::setLogger", "doc": "&quot;Sets a logger.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/LoggerInterface.html", "name": "Psr\\Log\\LoggerInterface", "doc": "&quot;Describes a logger instance.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_emergency", "name": "Psr\\Log\\LoggerInterface::emergency", "doc": "&quot;System is unusable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_alert", "name": "Psr\\Log\\LoggerInterface::alert", "doc": "&quot;Action must be taken immediately.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_critical", "name": "Psr\\Log\\LoggerInterface::critical", "doc": "&quot;Critical conditions.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_error", "name": "Psr\\Log\\LoggerInterface::error", "doc": "&quot;Runtime errors that do not require immediate action but should typically\nbe logged and monitored.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_warning", "name": "Psr\\Log\\LoggerInterface::warning", "doc": "&quot;Exceptional occurrences that are not errors.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_notice", "name": "Psr\\Log\\LoggerInterface::notice", "doc": "&quot;Normal but significant events.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_info", "name": "Psr\\Log\\LoggerInterface::info", "doc": "&quot;Interesting events.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_debug", "name": "Psr\\Log\\LoggerInterface::debug", "doc": "&quot;Detailed debug information.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerInterface", "fromLink": "Psr/Log/LoggerInterface.html", "link": "Psr/Log/LoggerInterface.html#method_log", "name": "Psr\\Log\\LoggerInterface::log", "doc": "&quot;Logs with an arbitrary level.&quot;"},
            
            {"type": "Trait", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/LoggerTrait.html", "name": "Psr\\Log\\LoggerTrait", "doc": "&quot;This is a simple Logger trait that classes unable to extend AbstractLogger\n(because they extend another class, etc) can include.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\LoggerTrait", "fromLink": "Psr/Log/LoggerTrait.html", "link": "Psr/Log/LoggerTrait.html#method_emergency", "name": "Psr\\Log\\LoggerTrait::emergency", "doc": "&quot;System is unusable.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerTrait", "fromLink": "Psr/Log/LoggerTrait.html", "link": "Psr/Log/LoggerTrait.html#method_alert", "name": "Psr\\Log\\LoggerTrait::alert", "doc": "&quot;Action must be taken immediately.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerTrait", "fromLink": "Psr/Log/LoggerTrait.html", "link": "Psr/Log/LoggerTrait.html#method_critical", "name": "Psr\\Log\\LoggerTrait::critical", "doc": "&quot;Critical conditions.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerTrait", "fromLink": "Psr/Log/LoggerTrait.html", "link": "Psr/Log/LoggerTrait.html#method_error", "name": "Psr\\Log\\LoggerTrait::error", "doc": "&quot;Runtime errors that do not require immediate action but should typically\nbe logged and monitored.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerTrait", "fromLink": "Psr/Log/LoggerTrait.html", "link": "Psr/Log/LoggerTrait.html#method_warning", "name": "Psr\\Log\\LoggerTrait::warning", "doc": "&quot;Exceptional occurrences that are not errors.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerTrait", "fromLink": "Psr/Log/LoggerTrait.html", "link": "Psr/Log/LoggerTrait.html#method_notice", "name": "Psr\\Log\\LoggerTrait::notice", "doc": "&quot;Normal but significant events.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerTrait", "fromLink": "Psr/Log/LoggerTrait.html", "link": "Psr/Log/LoggerTrait.html#method_info", "name": "Psr\\Log\\LoggerTrait::info", "doc": "&quot;Interesting events.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerTrait", "fromLink": "Psr/Log/LoggerTrait.html", "link": "Psr/Log/LoggerTrait.html#method_debug", "name": "Psr\\Log\\LoggerTrait::debug", "doc": "&quot;Detailed debug information.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\LoggerTrait", "fromLink": "Psr/Log/LoggerTrait.html", "link": "Psr/Log/LoggerTrait.html#method_log", "name": "Psr\\Log\\LoggerTrait::log", "doc": "&quot;Logs with an arbitrary level.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Log", "fromLink": "Psr/Log.html", "link": "Psr/Log/NullLogger.html", "name": "Psr\\Log\\NullLogger", "doc": "&quot;This Logger can be used to avoid conditional log calls.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\NullLogger", "fromLink": "Psr/Log/NullLogger.html", "link": "Psr/Log/NullLogger.html#method_log", "name": "Psr\\Log\\NullLogger::log", "doc": "&quot;Logs with an arbitrary level.&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Log\\Test", "fromLink": "Psr/Log/Test.html", "link": "Psr/Log/Test/DummyTest.html", "name": "Psr\\Log\\Test\\DummyTest", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\Test\\DummyTest", "fromLink": "Psr/Log/Test/DummyTest.html", "link": "Psr/Log/Test/DummyTest.html#method___toString", "name": "Psr\\Log\\Test\\DummyTest::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Log\\Test", "fromLink": "Psr/Log/Test.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html", "name": "Psr\\Log\\Test\\LoggerInterfaceTest", "doc": "&quot;Provides a base test class for ensuring compliance with the LoggerInterface.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_getLogger", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::getLogger", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_getLogs", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::getLogs", "doc": "&quot;This must return the log messages in order.&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_testImplements", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::testImplements", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_testLogsAtAllLevels", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::testLogsAtAllLevels", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_provideLevelsAndMessages", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::provideLevelsAndMessages", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_testThrowsOnInvalidLevel", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::testThrowsOnInvalidLevel", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_testContextReplacement", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::testContextReplacement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_testObjectCastToString", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::testObjectCastToString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_testContextCanContainAnything", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::testContextCanContainAnything", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\LoggerInterfaceTest", "fromLink": "Psr/Log/Test/LoggerInterfaceTest.html", "link": "Psr/Log/Test/LoggerInterfaceTest.html#method_testContextExceptionKeyCanBeExceptionOrOtherValues", "name": "Psr\\Log\\Test\\LoggerInterfaceTest::testContextExceptionKeyCanBeExceptionOrOtherValues", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Psr\\Log\\Test", "fromLink": "Psr/Log/Test.html", "link": "Psr/Log/Test/TestLogger.html", "name": "Psr\\Log\\Test\\TestLogger", "doc": "&quot;Used for testing purposes.&quot;"},
                                                        {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_log", "name": "Psr\\Log\\Test\\TestLogger::log", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasRecords", "name": "Psr\\Log\\Test\\TestLogger::hasRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasRecord", "name": "Psr\\Log\\Test\\TestLogger::hasRecord", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasRecordThatContains", "name": "Psr\\Log\\Test\\TestLogger::hasRecordThatContains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasRecordThatMatches", "name": "Psr\\Log\\Test\\TestLogger::hasRecordThatMatches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasRecordThatPasses", "name": "Psr\\Log\\Test\\TestLogger::hasRecordThatPasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method___call", "name": "Psr\\Log\\Test\\TestLogger::__call", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_reset", "name": "Psr\\Log\\Test\\TestLogger::reset", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasEmergency", "name": "Psr\\Log\\Test\\TestLogger::hasEmergency", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasAlert", "name": "Psr\\Log\\Test\\TestLogger::hasAlert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasCritical", "name": "Psr\\Log\\Test\\TestLogger::hasCritical", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasError", "name": "Psr\\Log\\Test\\TestLogger::hasError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasWarning", "name": "Psr\\Log\\Test\\TestLogger::hasWarning", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasNotice", "name": "Psr\\Log\\Test\\TestLogger::hasNotice", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasInfo", "name": "Psr\\Log\\Test\\TestLogger::hasInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasDebug", "name": "Psr\\Log\\Test\\TestLogger::hasDebug", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasEmergencyRecords", "name": "Psr\\Log\\Test\\TestLogger::hasEmergencyRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasAlertRecords", "name": "Psr\\Log\\Test\\TestLogger::hasAlertRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasCriticalRecords", "name": "Psr\\Log\\Test\\TestLogger::hasCriticalRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasErrorRecords", "name": "Psr\\Log\\Test\\TestLogger::hasErrorRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasWarningRecords", "name": "Psr\\Log\\Test\\TestLogger::hasWarningRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasNoticeRecords", "name": "Psr\\Log\\Test\\TestLogger::hasNoticeRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasInfoRecords", "name": "Psr\\Log\\Test\\TestLogger::hasInfoRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasDebugRecords", "name": "Psr\\Log\\Test\\TestLogger::hasDebugRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasEmergencyThatContains", "name": "Psr\\Log\\Test\\TestLogger::hasEmergencyThatContains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasAlertThatContains", "name": "Psr\\Log\\Test\\TestLogger::hasAlertThatContains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasCriticalThatContains", "name": "Psr\\Log\\Test\\TestLogger::hasCriticalThatContains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasErrorThatContains", "name": "Psr\\Log\\Test\\TestLogger::hasErrorThatContains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasWarningThatContains", "name": "Psr\\Log\\Test\\TestLogger::hasWarningThatContains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasNoticeThatContains", "name": "Psr\\Log\\Test\\TestLogger::hasNoticeThatContains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasInfoThatContains", "name": "Psr\\Log\\Test\\TestLogger::hasInfoThatContains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasDebugThatContains", "name": "Psr\\Log\\Test\\TestLogger::hasDebugThatContains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasEmergencyThatMatches", "name": "Psr\\Log\\Test\\TestLogger::hasEmergencyThatMatches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasAlertThatMatches", "name": "Psr\\Log\\Test\\TestLogger::hasAlertThatMatches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasCriticalThatMatches", "name": "Psr\\Log\\Test\\TestLogger::hasCriticalThatMatches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasErrorThatMatches", "name": "Psr\\Log\\Test\\TestLogger::hasErrorThatMatches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasWarningThatMatches", "name": "Psr\\Log\\Test\\TestLogger::hasWarningThatMatches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasNoticeThatMatches", "name": "Psr\\Log\\Test\\TestLogger::hasNoticeThatMatches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasInfoThatMatches", "name": "Psr\\Log\\Test\\TestLogger::hasInfoThatMatches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasDebugThatMatches", "name": "Psr\\Log\\Test\\TestLogger::hasDebugThatMatches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasEmergencyThatPasses", "name": "Psr\\Log\\Test\\TestLogger::hasEmergencyThatPasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasAlertThatPasses", "name": "Psr\\Log\\Test\\TestLogger::hasAlertThatPasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasCriticalThatPasses", "name": "Psr\\Log\\Test\\TestLogger::hasCriticalThatPasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasErrorThatPasses", "name": "Psr\\Log\\Test\\TestLogger::hasErrorThatPasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasWarningThatPasses", "name": "Psr\\Log\\Test\\TestLogger::hasWarningThatPasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasNoticeThatPasses", "name": "Psr\\Log\\Test\\TestLogger::hasNoticeThatPasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasInfoThatPasses", "name": "Psr\\Log\\Test\\TestLogger::hasInfoThatPasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Psr\\Log\\Test\\TestLogger", "fromLink": "Psr/Log/Test/TestLogger.html", "link": "Psr/Log/Test/TestLogger.html#method_hasDebugThatPasses", "name": "Psr\\Log\\Test\\TestLogger::hasDebugThatPasses", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Configuration", "fromLink": "SimplePie/Configuration.html", "link": "SimplePie/Configuration/SetLoggerInterface.html", "name": "SimplePie\\Configuration\\SetLoggerInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Configuration\\SetLoggerInterface", "fromLink": "SimplePie/Configuration/SetLoggerInterface.html", "link": "SimplePie/Configuration/SetLoggerInterface.html#method_setLogger", "name": "SimplePie\\Configuration\\SetLoggerInterface::setLogger", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Dictionary", "fromLink": "SimplePie/Dictionary.html", "link": "SimplePie/Dictionary/Entity.html", "name": "SimplePie\\Dictionary\\Entity", "doc": "&quot;Pulled from the W3C&#039;s official HTML5 entities list.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Dictionary\\Entity", "fromLink": "SimplePie/Dictionary/Entity.html", "link": "SimplePie/Dictionary/Entity.html#method_convertEntitiesToUnicode", "name": "SimplePie\\Dictionary\\Entity::convertEntitiesToUnicode", "doc": "&quot;Utility function converts entities into their real unicode characters.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Enum", "fromLink": "SimplePie/Enum.html", "link": "SimplePie/Enum/AbstractEnum.html", "name": "SimplePie\\Enum\\AbstractEnum", "doc": "&quot;The base enum class that all other enum classes extend from. It does the\nheavy lifting of implementing &lt;code&gt;EnumInterface&lt;\/code&gt; so that extending enum classes\ncan focus on defining enums.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Enum\\AbstractEnum", "fromLink": "SimplePie/Enum/AbstractEnum.html", "link": "SimplePie/Enum/AbstractEnum.html#method_introspect", "name": "SimplePie\\Enum\\AbstractEnum::introspect", "doc": "&quot;Introspects the Enum for its values.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Enum\\AbstractEnum", "fromLink": "SimplePie/Enum/AbstractEnum.html", "link": "SimplePie/Enum/AbstractEnum.html#method_introspectKeys", "name": "SimplePie\\Enum\\AbstractEnum::introspectKeys", "doc": "&quot;Introspects the Enum for its keys.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Enum\\AbstractEnum", "fromLink": "SimplePie/Enum/AbstractEnum.html", "link": "SimplePie/Enum/AbstractEnum.html#method_hasValue", "name": "SimplePie\\Enum\\AbstractEnum::hasValue", "doc": "&quot;Determines if the value is one of the Enum values of this type.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Enum", "fromLink": "SimplePie/Enum.html", "link": "SimplePie/Enum/CharacterSet.html", "name": "SimplePie\\Enum\\CharacterSet", "doc": "&quot;Provides a set of known, allowable character encodings.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Enum", "fromLink": "SimplePie/Enum.html", "link": "SimplePie/Enum/DateFormat.html", "name": "SimplePie\\Enum\\DateFormat", "doc": "&quot;Provides a set of commonly-used time\/date-stamps in feeds.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Enum", "fromLink": "SimplePie/Enum.html", "link": "SimplePie/Enum/EnumInterface.html", "name": "SimplePie\\Enum\\EnumInterface", "doc": "&quot;The interface that all enum classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Enum\\EnumInterface", "fromLink": "SimplePie/Enum/EnumInterface.html", "link": "SimplePie/Enum/EnumInterface.html#method_introspect", "name": "SimplePie\\Enum\\EnumInterface::introspect", "doc": "&quot;Introspects the Enum for its values.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Enum\\EnumInterface", "fromLink": "SimplePie/Enum/EnumInterface.html", "link": "SimplePie/Enum/EnumInterface.html#method_introspectKeys", "name": "SimplePie\\Enum\\EnumInterface::introspectKeys", "doc": "&quot;Introspects the Enum for its keys.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Enum\\EnumInterface", "fromLink": "SimplePie/Enum/EnumInterface.html", "link": "SimplePie/Enum/EnumInterface.html#method_hasValue", "name": "SimplePie\\Enum\\EnumInterface::hasValue", "doc": "&quot;Determines if the value is one of the Enum values of this type.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Enum", "fromLink": "SimplePie/Enum.html", "link": "SimplePie/Enum/ErrorMessage.html", "name": "SimplePie\\Enum\\ErrorMessage", "doc": "&quot;Provides a set of known, allowable error messages.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Enum", "fromLink": "SimplePie/Enum.html", "link": "SimplePie/Enum/FeedType.html", "name": "SimplePie\\Enum\\FeedType", "doc": "&quot;Provides a set of known, allowable feed types. This is most often used for\ndetermining which feed types a particular middleware should apply to.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Enum", "fromLink": "SimplePie/Enum.html", "link": "SimplePie/Enum/Serialization.html", "name": "SimplePie\\Enum\\Serialization", "doc": "&quot;Provides a set of known, allowable serializations of content nodes.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Exception", "fromLink": "SimplePie/Exception.html", "link": "SimplePie/Exception/ConfigurationException.html", "name": "SimplePie\\Exception\\ConfigurationException", "doc": "&quot;&lt;code&gt;ConfigurationException&lt;\/code&gt; is thrown when there is an error while validating the configuration settings.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Exception", "fromLink": "SimplePie/Exception.html", "link": "SimplePie/Exception/ContainerException.html", "name": "SimplePie\\Exception\\ContainerException", "doc": "&quot;&lt;code&gt;ContainerException&lt;\/code&gt; is required as part of PSR-11 compatibility.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Exception", "fromLink": "SimplePie/Exception.html", "link": "SimplePie/Exception/MiddlewareException.html", "name": "SimplePie\\Exception\\MiddlewareException", "doc": "&quot;&lt;code&gt;MiddlewareException&lt;\/code&gt; is thrown when there is an error while registering or running middleware.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Exception", "fromLink": "SimplePie/Exception.html", "link": "SimplePie/Exception/NotFoundException.html", "name": "SimplePie\\Exception\\NotFoundException", "doc": "&quot;&lt;code&gt;NotFoundException&lt;\/code&gt; is required as part of PSR-11 compatibility.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Exception", "fromLink": "SimplePie/Exception.html", "link": "SimplePie/Exception/SimplePieException.html", "name": "SimplePie\\Exception\\SimplePieException", "doc": "&quot;&lt;code&gt;SimplePieException&lt;\/code&gt; is the base &lt;code&gt;Exception&lt;\/code&gt; class for all SimplePie-related exceptions.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie", "fromLink": "SimplePie.html", "link": "SimplePie/HandlerStack.html", "name": "SimplePie\\HandlerStack", "doc": "&quot;&lt;code&gt;SimplePie\\HandlerStack&lt;\/code&gt; is a middleware stack system which is modeled after\n&lt;a href=\&quot;http:\/\/docs.guzzlephp.org\/en\/latest\/handlers-and-middleware.html\&quot;&gt;Guzzle&#039;s middleware handler stack system&lt;\/a&gt;,\nbut is designed specifically for SimplePie&#039;s use-cases.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method___construct", "name": "SimplePie\\HandlerStack::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_append", "name": "SimplePie\\HandlerStack::append", "doc": "&quot;Appends a new middleware class onto the end of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_appendClosure", "name": "SimplePie\\HandlerStack::appendClosure", "doc": "&quot;Appends a new middleware closure onto the end of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_prepend", "name": "SimplePie\\HandlerStack::prepend", "doc": "&quot;Prepends a new middleware class onto the beginning of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_prependClosure", "name": "SimplePie\\HandlerStack::prependClosure", "doc": "&quot;Prepends a new middleware closure onto the beginning of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_invoke", "name": "SimplePie\\HandlerStack::invoke", "doc": "&quot;Invokes the stack of middleware.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_registerNamespaces", "name": "SimplePie\\HandlerStack::registerNamespaces", "doc": "&quot;Collects all of the supported namespaces from the registered middleware.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_debugStack", "name": "SimplePie\\HandlerStack::debugStack", "doc": "&quot;Returns information about the HandlerStack that is useful for debugging.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_validateMiddleware", "name": "SimplePie\\HandlerStack::validateMiddleware", "doc": "&quot;Validates the middleware and applies it to the right stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_logRegistration", "name": "SimplePie\\HandlerStack::logRegistration", "doc": "&quot;Log that the registration of the middleware occurred.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStack", "fromLink": "SimplePie/HandlerStack.html", "link": "SimplePie/HandlerStack.html#method_exceptionMessage", "name": "SimplePie\\HandlerStack::exceptionMessage", "doc": "&quot;Generate the most appropriate error message based on the parameters that were passed.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie", "fromLink": "SimplePie.html", "link": "SimplePie/HandlerStackInterface.html", "name": "SimplePie\\HandlerStackInterface", "doc": "&quot;Provides an interface for &lt;code&gt;SimplePie\\HandlerStack&lt;\/code&gt; to implement.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_append", "name": "SimplePie\\HandlerStackInterface::append", "doc": "&quot;Appends a new middleware class onto the end of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_appendClosure", "name": "SimplePie\\HandlerStackInterface::appendClosure", "doc": "&quot;Appends a new middleware closure onto the end of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_prepend", "name": "SimplePie\\HandlerStackInterface::prepend", "doc": "&quot;Prepends a new middleware class onto the beginning of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_prependClosure", "name": "SimplePie\\HandlerStackInterface::prependClosure", "doc": "&quot;Prepends a new middleware closure onto the beginning of the stack.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_invoke", "name": "SimplePie\\HandlerStackInterface::invoke", "doc": "&quot;Invokes the stack of middleware.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\HandlerStackInterface", "fromLink": "SimplePie/HandlerStackInterface.html", "link": "SimplePie/HandlerStackInterface.html#method_registerNamespaces", "name": "SimplePie\\HandlerStackInterface::registerNamespaces", "doc": "&quot;Collects all of the supported namespaces from the registered middleware.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Middleware", "fromLink": "SimplePie/Middleware.html", "link": "SimplePie/Middleware/AbstractMiddleware.html", "name": "SimplePie\\Middleware\\AbstractMiddleware", "doc": "&quot;The base middleware class that all other middleware classes extend from. It handles low-level functionality that is\nshared across all middleware classes.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Middleware\\AbstractMiddleware", "fromLink": "SimplePie/Middleware/AbstractMiddleware.html", "link": "SimplePie/Middleware/AbstractMiddleware.html#method___construct", "name": "SimplePie\\Middleware\\AbstractMiddleware::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\AbstractMiddleware", "fromLink": "SimplePie/Middleware/AbstractMiddleware.html", "link": "SimplePie/Middleware/AbstractMiddleware.html#method_addArrayProperty", "name": "SimplePie\\Middleware\\AbstractMiddleware::addArrayProperty", "doc": "&quot;Checks whether or not a particular property exists on an object, and if not, instantiates it as an array.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\AbstractMiddleware", "fromLink": "SimplePie/Middleware/AbstractMiddleware.html", "link": "SimplePie/Middleware/AbstractMiddleware.html#method_get", "name": "SimplePie\\Middleware\\AbstractMiddleware::get", "doc": "&quot;Return the value of an associative array key, if it exists. If not, return $default.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Middleware\\Html", "fromLink": "SimplePie/Middleware/Html.html", "link": "SimplePie/Middleware/Html/HtmlInterface.html", "name": "SimplePie\\Middleware\\Html\\HtmlInterface", "doc": "&quot;The interface that all HTML middleware classes must implement and respond to.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Middleware\\Json", "fromLink": "SimplePie/Middleware/Json.html", "link": "SimplePie/Middleware/Json/JsonInterface.html", "name": "SimplePie\\Middleware\\Json\\JsonInterface", "doc": "&quot;The interface that all JSON middleware classes must implement and respond to.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Middleware", "fromLink": "SimplePie/Middleware.html", "link": "SimplePie/Middleware/MiddlewareInterface.html", "name": "SimplePie\\Middleware\\MiddlewareInterface", "doc": "&quot;The interface that all middleware classes must implement and respond to.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Middleware\\Xml", "fromLink": "SimplePie/Middleware/Xml.html", "link": "SimplePie/Middleware/Xml/AbstractXmlMiddleware.html", "name": "SimplePie\\Middleware\\Xml\\AbstractXmlMiddleware", "doc": "&quot;The base XML middleware class that all other XML middleware classes extend from. It handles low-level functionality\nthat is shared across all XML middleware classes.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\AbstractXmlMiddleware", "fromLink": "SimplePie/Middleware/Xml/AbstractXmlMiddleware.html", "link": "SimplePie/Middleware/Xml/AbstractXmlMiddleware.html#method_setCaseInsensitive", "name": "SimplePie\\Middleware\\Xml\\AbstractXmlMiddleware::setCaseInsensitive", "doc": "&quot;By default, SimplePie NG is case-sensitive (as per the specification). If an invalid feed is parsed that does not\nfollow the specification with regard to casing of XML elements, this method allows you to trade some performance\nin favor of case-insensitive parsing.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\AbstractXmlMiddleware", "fromLink": "SimplePie/Middleware/Xml/AbstractXmlMiddleware.html", "link": "SimplePie/Middleware/Xml/AbstractXmlMiddleware.html#method_applyNsToQuery", "name": "SimplePie\\Middleware\\Xml\\AbstractXmlMiddleware::applyNsToQuery", "doc": "&quot;Replace all instances of &lt;code&gt;%s&lt;\/code&gt; with the &lt;code&gt;$namespaceAlias&lt;\/code&gt; parameter.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\AbstractXmlMiddleware", "fromLink": "SimplePie/Middleware/Xml/AbstractXmlMiddleware.html", "link": "SimplePie/Middleware/Xml/AbstractXmlMiddleware.html#method_generateQuery", "name": "SimplePie\\Middleware\\Xml\\AbstractXmlMiddleware::generateQuery", "doc": "&quot;Produce an XPath 1.0 expression which is used to query XML document nodes.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Middleware\\Xml", "fromLink": "SimplePie/Middleware/Xml.html", "link": "SimplePie/Middleware/Xml/Atom.html", "name": "SimplePie\\Middleware\\Xml\\Atom", "doc": "&quot;Support for the Atom 1.0 grammar.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\Atom", "fromLink": "SimplePie/Middleware/Xml/Atom.html", "link": "SimplePie/Middleware/Xml/Atom.html#method___invoke", "name": "SimplePie\\Middleware\\Xml\\Atom::__invoke", "doc": "&quot;The function signature for the middleware.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\Atom", "fromLink": "SimplePie/Middleware/Xml/Atom.html", "link": "SimplePie/Middleware/Xml/Atom.html#method_getSupportedNamespaces", "name": "SimplePie\\Middleware\\Xml\\Atom::getSupportedNamespaces", "doc": "&quot;Gets the list of supported namespaces and their namespace aliases.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\Atom", "fromLink": "SimplePie/Middleware/Xml/Atom.html", "link": "SimplePie/Middleware/Xml/Atom.html#method_getNodeAttributes", "name": "SimplePie\\Middleware\\Xml\\Atom::getNodeAttributes", "doc": "&quot;Fetches attributes with a single, scalar value, on elements.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\Atom", "fromLink": "SimplePie/Middleware/Xml/Atom.html", "link": "SimplePie/Middleware/Xml/Atom.html#method_getSingleScalarTypes", "name": "SimplePie\\Middleware\\Xml\\Atom::getSingleScalarTypes", "doc": "&quot;Fetches elements with a single, scalar value.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\Atom", "fromLink": "SimplePie/Middleware/Xml/Atom.html", "link": "SimplePie/Middleware/Xml/Atom.html#method_getSingleComplexTypes", "name": "SimplePie\\Middleware\\Xml\\Atom::getSingleComplexTypes", "doc": "&quot;Fetches elements with a single, complex value.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\Atom", "fromLink": "SimplePie/Middleware/Xml/Atom.html", "link": "SimplePie/Middleware/Xml/Atom.html#method_getMultipleComplexTypes", "name": "SimplePie\\Middleware\\Xml\\Atom::getMultipleComplexTypes", "doc": "&quot;Fetches elements with a multiple, complex values.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Middleware\\Xml", "fromLink": "SimplePie/Middleware/Xml.html", "link": "SimplePie/Middleware/Xml/XmlInterface.html", "name": "SimplePie\\Middleware\\Xml\\XmlInterface", "doc": "&quot;The interface that all XML middleware classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\XmlInterface", "fromLink": "SimplePie/Middleware/Xml/XmlInterface.html", "link": "SimplePie/Middleware/Xml/XmlInterface.html#method___invoke", "name": "SimplePie\\Middleware\\Xml\\XmlInterface::__invoke", "doc": "&quot;The function signature for the middleware.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Middleware\\Xml\\XmlInterface", "fromLink": "SimplePie/Middleware/Xml/XmlInterface.html", "link": "SimplePie/Middleware/Xml/XmlInterface.html#method_getSupportedNamespaces", "name": "SimplePie\\Middleware\\Xml\\XmlInterface::getSupportedNamespaces", "doc": "&quot;Gets the list of supported namespaces and their namespace aliases.&quot;"},
            
            {"type": "Trait", "fromName": "SimplePie\\Mixin", "fromLink": "SimplePie/Mixin.html", "link": "SimplePie/Mixin/DateTrait.html", "name": "SimplePie\\Mixin\\DateTrait", "doc": "&quot;Shared code for working with elements which manage dates.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Mixin\\DateTrait", "fromLink": "SimplePie/Mixin/DateTrait.html", "link": "SimplePie/Mixin/DateTrait.html#method_setDateFormat", "name": "SimplePie\\Mixin\\DateTrait::setDateFormat", "doc": "&quot;Allows the user to help the date parser by providing the format of the datestamp in the feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Mixin\\DateTrait", "fromLink": "SimplePie/Mixin/DateTrait.html", "link": "SimplePie/Mixin/DateTrait.html#method_setOutputTimezone", "name": "SimplePie\\Mixin\\DateTrait::setOutputTimezone", "doc": "&quot;Set the preferred output timezone.&quot;"},
            
            {"type": "Trait", "fromName": "SimplePie\\Mixin", "fromLink": "SimplePie/Mixin.html", "link": "SimplePie/Mixin/DeepTypeTrait.html", "name": "SimplePie\\Mixin\\DeepTypeTrait", "doc": "&quot;Shared code for working with deeply-nested elements for types.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Mixin\\DeepTypeTrait", "fromLink": "SimplePie/Mixin/DeepTypeTrait.html", "link": "SimplePie/Mixin/DeepTypeTrait.html#method_getScalarSingleValue", "name": "SimplePie\\Mixin\\DeepTypeTrait::getScalarSingleValue", "doc": "&quot;Retrieves nodes that are simple scalars, and there is only one allowed value.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Mixin\\DeepTypeTrait", "fromLink": "SimplePie/Mixin/DeepTypeTrait.html", "link": "SimplePie/Mixin/DeepTypeTrait.html#method_getComplexSingleValue", "name": "SimplePie\\Mixin\\DeepTypeTrait::getComplexSingleValue", "doc": "&quot;Retrieves nodes that are complex types, and there is only one allowed value.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Mixin\\DeepTypeTrait", "fromLink": "SimplePie/Mixin/DeepTypeTrait.html", "link": "SimplePie/Mixin/DeepTypeTrait.html#method_getComplexMultipleValues", "name": "SimplePie\\Mixin\\DeepTypeTrait::getComplexMultipleValues", "doc": "&quot;Retrieves nodes that are complex types, and there may be are more than one value.&quot;"},
            
            {"type": "Trait", "fromName": "SimplePie\\Mixin", "fromLink": "SimplePie/Mixin.html", "link": "SimplePie/Mixin/DomDocumentTrait.html", "name": "SimplePie\\Mixin\\DomDocumentTrait", "doc": "&quot;Shared code for working with &lt;code&gt;DOMDocument&lt;\/code&gt; objects.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Mixin\\DomDocumentTrait", "fromLink": "SimplePie/Mixin/DomDocumentTrait.html", "link": "SimplePie/Mixin/DomDocumentTrait.html#method_getDomDocument", "name": "SimplePie\\Mixin\\DomDocumentTrait::getDomDocument", "doc": "&quot;Gets the DOMDocument object which is being used to parse the content.&quot;"},
            
            {"type": "Trait", "fromName": "SimplePie\\Mixin", "fromLink": "SimplePie/Mixin.html", "link": "SimplePie/Mixin/LoggerTrait.html", "name": "SimplePie\\Mixin\\LoggerTrait", "doc": "&quot;Shared code for working with the logger.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Mixin\\LoggerTrait", "fromLink": "SimplePie/Mixin/LoggerTrait.html", "link": "SimplePie/Mixin/LoggerTrait.html#method_setLogger", "name": "SimplePie\\Mixin\\LoggerTrait::setLogger", "doc": "&quot;Sets the PSR-3 logger.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Mixin\\LoggerTrait", "fromLink": "SimplePie/Mixin/LoggerTrait.html", "link": "SimplePie/Mixin/LoggerTrait.html#method_getLogger", "name": "SimplePie\\Mixin\\LoggerTrait::getLogger", "doc": "&quot;Retrieves the PSR-3 logger.&quot;"},
            
            {"type": "Trait", "fromName": "SimplePie\\Mixin", "fromLink": "SimplePie/Mixin.html", "link": "SimplePie/Mixin/RawDocumentTrait.html", "name": "SimplePie\\Mixin\\RawDocumentTrait", "doc": "&quot;Shared code for working with raw feed content.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Mixin\\RawDocumentTrait", "fromLink": "SimplePie/Mixin/RawDocumentTrait.html", "link": "SimplePie/Mixin/RawDocumentTrait.html#method_getRawDocument", "name": "SimplePie\\Mixin\\RawDocumentTrait::getRawDocument", "doc": "&quot;Retrieves the raw, unparsed contents of the feed&#039;s stream.&quot;"},
            
            {"type": "Trait", "fromName": "SimplePie\\Mixin", "fromLink": "SimplePie/Mixin.html", "link": "SimplePie/Mixin/RootTrait.html", "name": "SimplePie\\Mixin\\RootTrait", "doc": "&quot;Shared code for working with elements which manage the tree root.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Mixin\\RootTrait", "fromLink": "SimplePie/Mixin/RootTrait.html", "link": "SimplePie/Mixin/RootTrait.html#method_getRoot", "name": "SimplePie\\Mixin\\RootTrait::getRoot", "doc": "&quot;Retrieve the root-most node in the feed.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Parser", "fromLink": "SimplePie/Parser.html", "link": "SimplePie/Parser/AbstractParser.html", "name": "SimplePie\\Parser\\AbstractParser", "doc": "&quot;The base parser class that all other parser classes extend from. It handles low-level functionality that is shared\nacross all parser classes.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Parser\\AbstractParser", "fromLink": "SimplePie/Parser/AbstractParser.html", "link": "SimplePie/Parser/AbstractParser.html#method___toString", "name": "SimplePie\\Parser\\AbstractParser::__toString", "doc": "&quot;Returns an opaque string representing the object.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\AbstractParser", "fromLink": "SimplePie/Parser/AbstractParser.html", "link": "SimplePie/Parser/AbstractParser.html#method_readStream", "name": "SimplePie\\Parser\\AbstractParser::readStream", "doc": "&quot;Reads the contents of the stream resource.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Parser", "fromLink": "SimplePie/Parser.html", "link": "SimplePie/Parser/Date.html", "name": "SimplePie\\Parser\\Date", "doc": "&quot;The core parser for all Date content.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Parser\\Date", "fromLink": "SimplePie/Parser/Date.html", "link": "SimplePie/Parser/Date.html#method___construct", "name": "SimplePie\\Parser\\Date::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\Date", "fromLink": "SimplePie/Parser/Date.html", "link": "SimplePie/Parser/Date.html#method_getDatestamp", "name": "SimplePie\\Parser\\Date::getDatestamp", "doc": "&quot;Get the input datestamp.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\Date", "fromLink": "SimplePie/Parser/Date.html", "link": "SimplePie/Parser/Date.html#method_getOutputTimezone", "name": "SimplePie\\Parser\\Date::getOutputTimezone", "doc": "&quot;Get the requested output timezone.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\Date", "fromLink": "SimplePie/Parser/Date.html", "link": "SimplePie/Parser/Date.html#method_getCreateFromFormat", "name": "SimplePie\\Parser\\Date::getCreateFromFormat", "doc": "&quot;Get the format used to assist date string parsing.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\Date", "fromLink": "SimplePie/Parser/Date.html", "link": "SimplePie/Parser/Date.html#method_getDateTime", "name": "SimplePie\\Parser\\Date::getDateTime", "doc": "&quot;Get the resulting &lt;code&gt;DateTime&lt;\/code&gt; object. If the date string could not be parsed, &lt;code&gt;false&lt;\/code&gt; will be returned.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Parser", "fromLink": "SimplePie/Parser.html", "link": "SimplePie/Parser/Html.html", "name": "SimplePie\\Parser\\Html", "doc": "&quot;The core parser for all HTML content.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Parser", "fromLink": "SimplePie/Parser.html", "link": "SimplePie/Parser/Json.html", "name": "SimplePie\\Parser\\Json", "doc": "&quot;The core parser for all JSON content.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Parser", "fromLink": "SimplePie/Parser.html", "link": "SimplePie/Parser/ParserInterface.html", "name": "SimplePie\\Parser\\ParserInterface", "doc": "&quot;The interface that all parser classes must implement and respond to.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Parser", "fromLink": "SimplePie/Parser.html", "link": "SimplePie/Parser/Xml.html", "name": "SimplePie\\Parser\\Xml", "doc": "&quot;The core parser for all XML content.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Parser\\Xml", "fromLink": "SimplePie/Parser/Xml.html", "link": "SimplePie/Parser/Xml.html#method___construct", "name": "SimplePie\\Parser\\Xml::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\Xml", "fromLink": "SimplePie/Parser/Xml.html", "link": "SimplePie/Parser/Xml.html#method_getNs", "name": "SimplePie\\Parser\\Xml::getNs", "doc": "&quot;Get the XML namespace handler.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\Xml", "fromLink": "SimplePie/Parser/Xml.html", "link": "SimplePie/Parser/Xml.html#method_getNamespaceAlias", "name": "SimplePie\\Parser\\Xml::getNamespaceAlias", "doc": "&quot;Get the preferred namespace alias.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\Xml", "fromLink": "SimplePie/Parser/Xml.html", "link": "SimplePie/Parser/Xml.html#method_xpath", "name": "SimplePie\\Parser\\Xml::xpath", "doc": "&quot;Gets a reference to the &lt;code&gt;DOMXPath&lt;\/code&gt; object, with the default namespace\nalready registered.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\Xml", "fromLink": "SimplePie/Parser/Xml.html", "link": "SimplePie/Parser/Xml.html#method_findNextRealNode", "name": "SimplePie\\Parser\\Xml::findNextRealNode", "doc": "&quot;Some DOMNode names are &lt;code&gt;#comment&lt;\/code&gt; or &lt;code&gt;#text&lt;\/code&gt;. This method will move the\npointer to the next node, then the next until it finds a real XML node.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Parser\\Xml", "fromLink": "SimplePie/Parser/Xml.html", "link": "SimplePie/Parser/Xml.html#method_getFeed", "name": "SimplePie\\Parser\\Xml::getFeed", "doc": "&quot;Retrieves the object which represents the top-level feed.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/Body.html", "name": "SimplePie\\Sanitizer\\Body", "doc": "&quot;Will someday perform sanitization on &lt;code&gt;&amp;lt;body&amp;gt;&lt;\/code&gt; HTML elements.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/DataProtocol.html", "name": "SimplePie\\Sanitizer\\DataProtocol", "doc": "&quot;Will someday perform sanitization on &lt;code&gt;data:&lt;\/code&gt; URLs in HTML elements.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/DeprecatedElements.html", "name": "SimplePie\\Sanitizer\\DeprecatedElements", "doc": "&quot;Will someday perform sanitization on content deprecated HTML elements (e.g., &lt;code&gt;&amp;lt;font&amp;gt;&lt;\/code&gt;).&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/Frame.html", "name": "SimplePie\\Sanitizer\\Frame", "doc": "&quot;Will someday perform sanitization on content for &lt;code&gt;&amp;lt;frame&amp;gt;&lt;\/code&gt; and &lt;code&gt;&amp;lt;frameset&amp;gt;&lt;\/code&gt; tags.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/Iframe.html", "name": "SimplePie\\Sanitizer\\Iframe", "doc": "&quot;Will someday perform sanitization on content for &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;\/code&gt; tags.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/JavaScriptProtocol.html", "name": "SimplePie\\Sanitizer\\JavaScriptProtocol", "doc": "&quot;Will someday perform sanitization on &lt;code&gt;javascript:&lt;\/code&gt; URLs in HTML elements.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/Meta.html", "name": "SimplePie\\Sanitizer\\Meta", "doc": "&quot;Will someday perform sanitization on content for &lt;code&gt;&amp;lt;meta&amp;gt;&lt;\/code&gt; tags.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/ObjectEmbed.html", "name": "SimplePie\\Sanitizer\\ObjectEmbed", "doc": "&quot;Will someday perform sanitization on content for &lt;code&gt;&amp;lt;object&amp;gt;&lt;\/code&gt; and &lt;code&gt;&amp;lt;embed&amp;gt;&lt;\/code&gt; tags.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/Script.html", "name": "SimplePie\\Sanitizer\\Script", "doc": "&quot;Will someday perform sanitization on content for &lt;code&gt;&amp;lt;script&amp;gt;&lt;\/code&gt; tags and JavaScript-related HTML attributes.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/Style.html", "name": "SimplePie\\Sanitizer\\Style", "doc": "&quot;Will someday perform sanitization on content for &lt;code&gt;&amp;lt;style&amp;gt;&lt;\/code&gt; and &lt;code&gt;&amp;lt;link&amp;gt;&lt;\/code&gt; tags, and CSS-related HTML attributes.&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Sanitizer", "fromLink": "SimplePie/Sanitizer.html", "link": "SimplePie/Sanitizer/TextFormatting.html", "name": "SimplePie\\Sanitizer\\TextFormatting", "doc": "&quot;Will someday perform sanitization on text formatting HTML elements (e.g., &lt;code&gt;&amp;lt;b&amp;gt;&lt;\/code&gt;, &lt;code&gt;&amp;lt;u&amp;gt;&lt;\/code&gt;, &lt;code&gt;&amp;lt;strike&amp;gt;&lt;\/code&gt;).&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie", "fromLink": "SimplePie.html", "link": "SimplePie/SimplePie.html", "name": "SimplePie\\SimplePie", "doc": "&quot;&lt;code&gt;SimplePie\\SimplePie&lt;\/code&gt; is the primary entry point for SimplePie NG.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\SimplePie", "fromLink": "SimplePie/SimplePie.html", "link": "SimplePie/SimplePie.html#method___construct", "name": "SimplePie\\SimplePie::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\SimplePie", "fromLink": "SimplePie/SimplePie.html", "link": "SimplePie/SimplePie.html#method_setLibxml", "name": "SimplePie\\SimplePie::setLibxml", "doc": "&quot;Sets the libxml value to use for parsing XML.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\SimplePie", "fromLink": "SimplePie/SimplePie.html", "link": "SimplePie/SimplePie.html#method_getLibxml", "name": "SimplePie\\SimplePie::getLibxml", "doc": "&quot;Gets the libxml value to use for parsing XML.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\SimplePie", "fromLink": "SimplePie/SimplePie.html", "link": "SimplePie/SimplePie.html#method_setMiddlewareStack", "name": "SimplePie\\SimplePie::setMiddlewareStack", "doc": "&quot;Sets the handler stack which contains registered middleware.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\SimplePie", "fromLink": "SimplePie/SimplePie.html", "link": "SimplePie/SimplePie.html#method_getMiddlewareStack", "name": "SimplePie\\SimplePie::getMiddlewareStack", "doc": "&quot;Gets the handler stack which contains registered middleware.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\SimplePie", "fromLink": "SimplePie/SimplePie.html", "link": "SimplePie/SimplePie.html#method_parseXml", "name": "SimplePie\\SimplePie::parseXml", "doc": "&quot;Parses content which is known to be valid XML and is encoded as UTF-8.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/AbstractType.html", "name": "SimplePie\\Type\\AbstractType", "doc": "&quot;The base type class that all other type classes extend from. It handles low-level functionality that is shared\nacross all type classes.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\AbstractType", "fromLink": "SimplePie/Type/AbstractType.html", "link": "SimplePie/Type/AbstractType.html#method___call", "name": "SimplePie\\Type\\AbstractType::__call", "doc": "&quot;Proxy method which forwards requests to an underlying handler.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\AbstractType", "fromLink": "SimplePie/Type/AbstractType.html", "link": "SimplePie/Type/AbstractType.html#method_getUnresolvableMessage", "name": "SimplePie\\Type\\AbstractType::getUnresolvableMessage", "doc": "&quot;Gets the standard, pre-formatted message for unresolvable method calls.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/BranchInterface.html", "name": "SimplePie\\Type\\BranchInterface", "doc": "&quot;The interface that all type classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\BranchInterface", "fromLink": "SimplePie/Type/BranchInterface.html", "link": "SimplePie/Type/BranchInterface.html#method_getAlias", "name": "SimplePie\\Type\\BranchInterface::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\BranchInterface", "fromLink": "SimplePie/Type/BranchInterface.html", "link": "SimplePie/Type/BranchInterface.html#method_getHandler", "name": "SimplePie\\Type\\BranchInterface::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/Category.html", "name": "SimplePie\\Type\\Category", "doc": "&quot;A type model for a Category\/Tag\/Topic element.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\Category", "fromLink": "SimplePie/Type/Category.html", "link": "SimplePie/Type/Category.html#method___construct", "name": "SimplePie\\Type\\Category::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Category", "fromLink": "SimplePie/Type/Category.html", "link": "SimplePie/Type/Category.html#method___toString", "name": "SimplePie\\Type\\Category::__toString", "doc": "&quot;Converts this object into a string representation.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Category", "fromLink": "SimplePie/Type/Category.html", "link": "SimplePie/Type/Category.html#method_getNode", "name": "SimplePie\\Type\\Category::getNode", "doc": "&quot;Gets the DOMNode element.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Category", "fromLink": "SimplePie/Type/Category.html", "link": "SimplePie/Type/Category.html#method_getAlias", "name": "SimplePie\\Type\\Category::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Category", "fromLink": "SimplePie/Type/Category.html", "link": "SimplePie/Type/Category.html#method_getHandler", "name": "SimplePie\\Type\\Category::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Category", "fromLink": "SimplePie/Type/Category.html", "link": "SimplePie/Type/Category.html#method_getLabel", "name": "SimplePie\\Type\\Category::getLabel", "doc": "&quot;Returns the label of the Category.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Category", "fromLink": "SimplePie/Type/Category.html", "link": "SimplePie/Type/Category.html#method_getScheme", "name": "SimplePie\\Type\\Category::getScheme", "doc": "&quot;Returns the scheme of the Category.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Category", "fromLink": "SimplePie/Type/Category.html", "link": "SimplePie/Type/Category.html#method_getTerm", "name": "SimplePie\\Type\\Category::getTerm", "doc": "&quot;Returns the term of the Category.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/Entry.html", "name": "SimplePie\\Type\\Entry", "doc": "&quot;A type model for an Entry element.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method___construct", "name": "SimplePie\\Type\\Entry::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method___toString", "name": "SimplePie\\Type\\Entry::__toString", "doc": "&quot;Converts this object into a string representation.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getNode", "name": "SimplePie\\Type\\Entry::getNode", "doc": "&quot;Gets the DOMNode element.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getAlias", "name": "SimplePie\\Type\\Entry::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getHandler", "name": "SimplePie\\Type\\Entry::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getAuthors", "name": "SimplePie\\Type\\Entry::getAuthors", "doc": "&quot;Returns the Authors associated with this entry.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getCategories", "name": "SimplePie\\Type\\Entry::getCategories", "doc": "&quot;Returns the list of Categories\/Tags\/Topics associated with this entry.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getContent", "name": "SimplePie\\Type\\Entry::getContent", "doc": "&quot;Returns the content of the entry, serialized as TEXT, HTML, or XHTML content.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getContributors", "name": "SimplePie\\Type\\Entry::getContributors", "doc": "&quot;Returns the list of Contributors associated with this entry.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getCopyright", "name": "SimplePie\\Type\\Entry::getCopyright", "doc": "&quot;Alias for &lt;code&gt;getRights()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getGuid", "name": "SimplePie\\Type\\Entry::getGuid", "doc": "&quot;Alias for &lt;code&gt;getId()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getId", "name": "SimplePie\\Type\\Entry::getId", "doc": "&quot;Returns the ID associated with this entry.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getLang", "name": "SimplePie\\Type\\Entry::getLang", "doc": "&quot;Alias for &lt;code&gt;getLanguage()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getLanguage", "name": "SimplePie\\Type\\Entry::getLanguage", "doc": "&quot;Returns the language associated with this entry.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getLinks", "name": "SimplePie\\Type\\Entry::getLinks", "doc": "&quot;Returns the list of Links associated with this entry.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getPubDate", "name": "SimplePie\\Type\\Entry::getPubDate", "doc": "&quot;Alias for &lt;code&gt;getPublished()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getPublished", "name": "SimplePie\\Type\\Entry::getPublished", "doc": "&quot;Returns the date that the entry was published.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getRights", "name": "SimplePie\\Type\\Entry::getRights", "doc": "&quot;Returns the copyright information associated with this entry.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getSummary", "name": "SimplePie\\Type\\Entry::getSummary", "doc": "&quot;Returns the summary associated with this entry.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getTitle", "name": "SimplePie\\Type\\Entry::getTitle", "doc": "&quot;Returns the title associated with this entry.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Entry", "fromLink": "SimplePie/Type/Entry.html", "link": "SimplePie/Type/Entry.html#method_getUpdated", "name": "SimplePie\\Type\\Entry::getUpdated", "doc": "&quot;Returns the date that the entry was updated.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/Feed.html", "name": "SimplePie\\Type\\Feed", "doc": "&quot;The top-most element in a feed.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method___construct", "name": "SimplePie\\Type\\Feed::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getDefaultNs", "name": "SimplePie\\Type\\Feed::getDefaultNs", "doc": "&quot;Finds the default namespace alias for the feed type.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getAlias", "name": "SimplePie\\Type\\Feed::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getHandler", "name": "SimplePie\\Type\\Feed::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getAuthors", "name": "SimplePie\\Type\\Feed::getAuthors", "doc": "&quot;Returns the Authors associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getCategories", "name": "SimplePie\\Type\\Feed::getCategories", "doc": "&quot;Returns the list of Categories\/Tags\/Topics associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getContributors", "name": "SimplePie\\Type\\Feed::getContributors", "doc": "&quot;Returns the list of Contributors associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getCopyright", "name": "SimplePie\\Type\\Feed::getCopyright", "doc": "&quot;Alias for &lt;code&gt;getRights()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getEntries", "name": "SimplePie\\Type\\Feed::getEntries", "doc": "&quot;Returns the list of Entries\/Items associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getGenerator", "name": "SimplePie\\Type\\Feed::getGenerator", "doc": "&quot;Returns the Generator associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getGuid", "name": "SimplePie\\Type\\Feed::getGuid", "doc": "&quot;Alias for &lt;code&gt;getId()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getId", "name": "SimplePie\\Type\\Feed::getId", "doc": "&quot;Returns the ID associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getIcon", "name": "SimplePie\\Type\\Feed::getIcon", "doc": "&quot;Returns the Icon associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getItems", "name": "SimplePie\\Type\\Feed::getItems", "doc": "&quot;Alias for &lt;code&gt;getEntries()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getLang", "name": "SimplePie\\Type\\Feed::getLang", "doc": "&quot;Alias for &lt;code&gt;getLanguage()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getLanguage", "name": "SimplePie\\Type\\Feed::getLanguage", "doc": "&quot;Returns the language associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getLinks", "name": "SimplePie\\Type\\Feed::getLinks", "doc": "&quot;Returns the list of Links associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getLogo", "name": "SimplePie\\Type\\Feed::getLogo", "doc": "&quot;Returns the Logo associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getPubDate", "name": "SimplePie\\Type\\Feed::getPubDate", "doc": "&quot;Alias for &lt;code&gt;getPublished()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getPublished", "name": "SimplePie\\Type\\Feed::getPublished", "doc": "&quot;Returns the date that the feed was published.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getRights", "name": "SimplePie\\Type\\Feed::getRights", "doc": "&quot;Returns the copyright information associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getSubtitle", "name": "SimplePie\\Type\\Feed::getSubtitle", "doc": "&quot;Returns the sub-title associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getSummary", "name": "SimplePie\\Type\\Feed::getSummary", "doc": "&quot;Returns the summary associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getTitle", "name": "SimplePie\\Type\\Feed::getTitle", "doc": "&quot;Returns the title associated with this feed.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Feed", "fromLink": "SimplePie/Type/Feed.html", "link": "SimplePie/Type/Feed.html#method_getUpdated", "name": "SimplePie\\Type\\Feed::getUpdated", "doc": "&quot;Returns the date that the feed was updated.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/Generator.html", "name": "SimplePie\\Type\\Generator", "doc": "&quot;A type model for a Generator element.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\Generator", "fromLink": "SimplePie/Type/Generator.html", "link": "SimplePie/Type/Generator.html#method___construct", "name": "SimplePie\\Type\\Generator::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Generator", "fromLink": "SimplePie/Type/Generator.html", "link": "SimplePie/Type/Generator.html#method___toString", "name": "SimplePie\\Type\\Generator::__toString", "doc": "&quot;Converts this object into a string representation.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Generator", "fromLink": "SimplePie/Type/Generator.html", "link": "SimplePie/Type/Generator.html#method_getNode", "name": "SimplePie\\Type\\Generator::getNode", "doc": "&quot;Gets the DOMNode element.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Generator", "fromLink": "SimplePie/Type/Generator.html", "link": "SimplePie/Type/Generator.html#method_getAlias", "name": "SimplePie\\Type\\Generator::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Generator", "fromLink": "SimplePie/Type/Generator.html", "link": "SimplePie/Type/Generator.html#method_getHandler", "name": "SimplePie\\Type\\Generator::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Generator", "fromLink": "SimplePie/Type/Generator.html", "link": "SimplePie/Type/Generator.html#method_getName", "name": "SimplePie\\Type\\Generator::getName", "doc": "&quot;Returns the name of the Generator.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Generator", "fromLink": "SimplePie/Type/Generator.html", "link": "SimplePie/Type/Generator.html#method_getUri", "name": "SimplePie\\Type\\Generator::getUri", "doc": "&quot;Alias for &lt;code&gt;getUrl()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Generator", "fromLink": "SimplePie/Type/Generator.html", "link": "SimplePie/Type/Generator.html#method_getUrl", "name": "SimplePie\\Type\\Generator::getUrl", "doc": "&quot;Returns the URL of the Generator.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Generator", "fromLink": "SimplePie/Type/Generator.html", "link": "SimplePie/Type/Generator.html#method_getVersion", "name": "SimplePie\\Type\\Generator::getVersion", "doc": "&quot;Returns the version of the Generator.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/Image.html", "name": "SimplePie\\Type\\Image", "doc": "&quot;A type model for an Image element.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method___construct", "name": "SimplePie\\Type\\Image::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method___toString", "name": "SimplePie\\Type\\Image::__toString", "doc": "&quot;Converts this object into a string representation.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getNode", "name": "SimplePie\\Type\\Image::getNode", "doc": "&quot;Gets the DOMNode element.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getAlias", "name": "SimplePie\\Type\\Image::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getHandler", "name": "SimplePie\\Type\\Image::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getDescription", "name": "SimplePie\\Type\\Image::getDescription", "doc": "&quot;Returns the description of the Image.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getHeight", "name": "SimplePie\\Type\\Image::getHeight", "doc": "&quot;Returns the height of the Image.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getLink", "name": "SimplePie\\Type\\Image::getLink", "doc": "&quot;Returns to where the Image should be linked.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getTitle", "name": "SimplePie\\Type\\Image::getTitle", "doc": "&quot;Returns the title of the Image.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getUri", "name": "SimplePie\\Type\\Image::getUri", "doc": "&quot;Alias for &lt;code&gt;getUrl()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getUrl", "name": "SimplePie\\Type\\Image::getUrl", "doc": "&quot;Returns the URL of the Image.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Image", "fromLink": "SimplePie/Type/Image.html", "link": "SimplePie/Type/Image.html#method_getWidth", "name": "SimplePie\\Type\\Image::getWidth", "doc": "&quot;Returns the width of the Image.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/Link.html", "name": "SimplePie\\Type\\Link", "doc": "&quot;A type model for a Link element.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method___construct", "name": "SimplePie\\Type\\Link::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method___toString", "name": "SimplePie\\Type\\Link::__toString", "doc": "&quot;Converts this object into a string representation.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getNode", "name": "SimplePie\\Type\\Link::getNode", "doc": "&quot;Gets the DOMNode element.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getAlias", "name": "SimplePie\\Type\\Link::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getHandler", "name": "SimplePie\\Type\\Link::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getHref", "name": "SimplePie\\Type\\Link::getHref", "doc": "&quot;Alias for &lt;code&gt;getUrl()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getHrefLang", "name": "SimplePie\\Type\\Link::getHrefLang", "doc": "&quot;Alias for &lt;code&gt;getLanguage()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getLang", "name": "SimplePie\\Type\\Link::getLang", "doc": "&quot;Alias for &lt;code&gt;getLanguage()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getLanguage", "name": "SimplePie\\Type\\Link::getLanguage", "doc": "&quot;Returns the language of the Link.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getLength", "name": "SimplePie\\Type\\Link::getLength", "doc": "&quot;Returns the length of the Link, in bytes.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getMediaType", "name": "SimplePie\\Type\\Link::getMediaType", "doc": "&quot;Returns the media type (n\u00e9e mime type) of the Link.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getRel", "name": "SimplePie\\Type\\Link::getRel", "doc": "&quot;Alias for &lt;code&gt;getRelationship()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getRelationship", "name": "SimplePie\\Type\\Link::getRelationship", "doc": "&quot;Returns the relationship of the Link.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getTitle", "name": "SimplePie\\Type\\Link::getTitle", "doc": "&quot;Returns the title of the Link.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getType", "name": "SimplePie\\Type\\Link::getType", "doc": "&quot;Alias for &lt;code&gt;getMediaType()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getUri", "name": "SimplePie\\Type\\Link::getUri", "doc": "&quot;Alias for &lt;code&gt;getUrl()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Link", "fromLink": "SimplePie/Type/Link.html", "link": "SimplePie/Type/Link.html#method_getUrl", "name": "SimplePie\\Type\\Link::getUrl", "doc": "&quot;Returns the URL of the Link.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/Node.html", "name": "SimplePie\\Type\\Node", "doc": "&quot;A type model for a deep-level Node element.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method___construct", "name": "SimplePie\\Type\\Node::__construct", "doc": "&quot;Get the text node in multiple formats.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method___toString", "name": "SimplePie\\Type\\Node::__toString", "doc": "&quot;Casting this Node element to a string with return the &lt;em&gt;value&lt;\/em&gt; of the Node.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method_factory", "name": "SimplePie\\Type\\Node::factory", "doc": "&quot;Creates a new &lt;code&gt;Node&lt;\/code&gt; object from a string of text (such as from an XML attribute).&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method_getNode", "name": "SimplePie\\Type\\Node::getNode", "doc": "&quot;Gets the raw &lt;code&gt;DOMNode&lt;\/code&gt; element.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method_getValue", "name": "SimplePie\\Type\\Node::getValue", "doc": "&quot;Gets the content of the node, serialized appropriately.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method_getSerialization", "name": "SimplePie\\Type\\Node::getSerialization", "doc": "&quot;Gets the serialization of the content.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method_getLang", "name": "SimplePie\\Type\\Node::getLang", "doc": "&quot;Gets the language of the content.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method_getBase", "name": "SimplePie\\Type\\Node::getBase", "doc": "&quot;Gets the xml:base of the content.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method_getAlias", "name": "SimplePie\\Type\\Node::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Node", "fromLink": "SimplePie/Type/Node.html", "link": "SimplePie/Type/Node.html#method_getHandler", "name": "SimplePie\\Type\\Node::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/NodeInterface.html", "name": "SimplePie\\Type\\NodeInterface", "doc": "&quot;The interface that all type classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\NodeInterface", "fromLink": "SimplePie/Type/NodeInterface.html", "link": "SimplePie/Type/NodeInterface.html#method___toString", "name": "SimplePie\\Type\\NodeInterface::__toString", "doc": "&quot;Converts this object into a string representation.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\NodeInterface", "fromLink": "SimplePie/Type/NodeInterface.html", "link": "SimplePie/Type/NodeInterface.html#method_getNode", "name": "SimplePie\\Type\\NodeInterface::getNode", "doc": "&quot;Gets the DOMNode element.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/Person.html", "name": "SimplePie\\Type\\Person", "doc": "&quot;A type model for a Person element.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method___construct", "name": "SimplePie\\Type\\Person::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method___toString", "name": "SimplePie\\Type\\Person::__toString", "doc": "&quot;Converts this object into a string representation.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method_getNode", "name": "SimplePie\\Type\\Person::getNode", "doc": "&quot;Gets the DOMNode element.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method_getAlias", "name": "SimplePie\\Type\\Person::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method_getHandler", "name": "SimplePie\\Type\\Person::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method_getAvatar", "name": "SimplePie\\Type\\Person::getAvatar", "doc": "&quot;Returns the avatar URL of the Person.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method_getEmail", "name": "SimplePie\\Type\\Person::getEmail", "doc": "&quot;Returns the email address of the Person.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method_getName", "name": "SimplePie\\Type\\Person::getName", "doc": "&quot;Returns the name of the Person.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method_getUri", "name": "SimplePie\\Type\\Person::getUri", "doc": "&quot;Alias for &lt;code&gt;getUrl()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\Person", "fromLink": "SimplePie/Type/Person.html", "link": "SimplePie/Type/Person.html#method_getUrl", "name": "SimplePie\\Type\\Person::getUrl", "doc": "&quot;Returns the URL of the Person.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Type", "fromLink": "SimplePie/Type.html", "link": "SimplePie/Type/TypeInterface.html", "name": "SimplePie\\Type\\TypeInterface", "doc": "&quot;The interface that all type classes must implement and respond to.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Type\\TypeInterface", "fromLink": "SimplePie/Type/TypeInterface.html", "link": "SimplePie/Type/TypeInterface.html#method_getAlias", "name": "SimplePie\\Type\\TypeInterface::getAlias", "doc": "&quot;Finds the common internal alias for a given method name.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Type\\TypeInterface", "fromLink": "SimplePie/Type/TypeInterface.html", "link": "SimplePie/Type/TypeInterface.html#method_getHandler", "name": "SimplePie\\Type\\TypeInterface::getHandler", "doc": "&quot;Get the correct handler for a whitelisted method name.&quot;"},
            
            {"type": "Class", "fromName": "SimplePie\\Util", "fromLink": "SimplePie/Util.html", "link": "SimplePie/Util/FeedLocator.html", "name": "SimplePie\\Util\\FeedLocator", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "SimplePie\\Util", "fromLink": "SimplePie/Util.html", "link": "SimplePie/Util/Ns.html", "name": "SimplePie\\Util\\Ns", "doc": "&quot;Provides tools for managing and working with XML namespaces.&quot;"},
                                                        {"type": "Method", "fromName": "SimplePie\\Util\\Ns", "fromLink": "SimplePie/Util/Ns.html", "link": "SimplePie/Util/Ns.html#method___construct", "name": "SimplePie\\Util\\Ns::__construct", "doc": "&quot;Constructs a new instance of this class.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Util\\Ns", "fromLink": "SimplePie/Util/Ns.html", "link": "SimplePie/Util/Ns.html#method_addAliases", "name": "SimplePie\\Util\\Ns::addAliases", "doc": "&quot;Adds new aliases to this list of aliases. Set an associative array where\nthe key is the namespace URI and the namespace alias as the value.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Util\\Ns", "fromLink": "SimplePie/Util/Ns.html", "link": "SimplePie/Util/Ns.html#method_getDocNamespaces", "name": "SimplePie\\Util\\Ns::getDocNamespaces", "doc": "&quot;Gets the list of document-defined namespace aliases and namespace URIs.&quot;"},
                    {"type": "Method", "fromName": "SimplePie\\Util\\Ns", "fromLink": "SimplePie/Util/Ns.html", "link": "SimplePie/Util/Ns.html#method_getPreferredNamespaceAlias", "name": "SimplePie\\Util\\Ns::getPreferredNamespaceAlias", "doc": "&quot;Gets the preferred namespace alias for a particular feed dialect.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


